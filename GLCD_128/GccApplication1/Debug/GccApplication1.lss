
GccApplication1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000479c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000001c0  00800060  0000479c  00004830  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000004c4  00800220  00800220  000049f0  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000049f0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004a4c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000160  00000000  00000000  00004a88  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000044f9  00000000  00000000  00004be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009db  00000000  00000000  000090e1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001d87  00000000  00000000  00009abc  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000a08  00000000  00000000  0000b844  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009dd  00000000  00000000  0000c24c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00004fd1  00000000  00000000  0000cc29  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003f8  00000000  00000000  00011bfa  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 36 02 	jmp	0x46c	; 0x46c <__ctors_end>
       4:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
       8:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
       c:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      10:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      14:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      18:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      1c:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      20:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      24:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      28:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      2c:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      30:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      34:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      38:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      3c:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      40:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      44:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      48:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      4c:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      50:	0c 94 5e 02 	jmp	0x4bc	; 0x4bc <__bad_interrupt>
      54:	03 6e       	ori	r16, 0xE3	; 227
      56:	db 36       	cpi	r29, 0x6B	; 107
      58:	3d 9a       	sbi	0x07, 5	; 7
      5a:	99 99       	sbic	0x13, 1	; 19
      5c:	99 3d       	cpi	r25, 0xD9	; 217
      5e:	ab aa       	std	Y+51, r10	; 0x33
      60:	aa 2a       	or	r10, r26
      62:	3e 00       	.word	0x003e	; ????
      64:	00 00       	nop
      66:	80 3f       	cpi	r24, 0xF0	; 240
      68:	07 63       	ori	r16, 0x37	; 55
      6a:	42 36       	cpi	r20, 0x62	; 98
      6c:	b7 9b       	sbis	0x16, 7	; 22
      6e:	d8 a7       	std	Y+40, r29	; 0x28
      70:	1a 39       	cpi	r17, 0x9A	; 154
      72:	68 56       	subi	r22, 0x68	; 104
      74:	18 ae       	std	Y+56, r1	; 0x38
      76:	ba ab       	std	Y+50, r27	; 0x32
      78:	55 8c       	ldd	r5, Z+29	; 0x1d
      7a:	1d 3c       	cpi	r17, 0xCD	; 205
      7c:	b7 cc       	rjmp	.-1682   	; 0xfffff9ec <__eeprom_end+0xff7ef9ec>
      7e:	57 63       	ori	r21, 0x37	; 55
      80:	bd 6d       	ori	r27, 0xDD	; 221
      82:	ed fd       	.word	0xfded	; ????
      84:	75 3e       	cpi	r23, 0xE5	; 229
      86:	f6 17       	cp	r31, r22
      88:	72 31       	cpi	r23, 0x12	; 18
      8a:	bf 00       	.word	0x00bf	; ????
      8c:	00 00       	nop
      8e:	80 3f       	cpi	r24, 0xF0	; 240
      90:	07 2c       	mov	r0, r7
      92:	7a a5       	ldd	r23, Y+42	; 0x2a
      94:	ba 6c       	ori	r27, 0xCA	; 202
      96:	c5 90       	lpm	r12, Z+
      98:	da 3b       	cpi	r29, 0xBA	; 186
      9a:	93 65       	ori	r25, 0x53	; 83
      9c:	fc 8b       	std	Y+20, r31	; 0x14
      9e:	bc 53       	subi	r27, 0x3C	; 60
      a0:	f8 10       	cpse	r15, r8
      a2:	fd 3c       	cpi	r31, 0xCD	; 205
      a4:	56 92       	lac	Z, r5
      a6:	83 4d       	sbci	r24, 0xD3	; 211
      a8:	bd 87       	std	Y+13, r27	; 0x0d
      aa:	9d 3a       	cpi	r25, 0xAD	; 173
      ac:	b6 3d       	cpi	r27, 0xD6	; 214
      ae:	cb c9       	rjmp	.-3178   	; 0xfffff446 <__eeprom_end+0xff7ef446>
      b0:	bf 5b       	subi	r27, 0xBF	; 191
      b2:	be 73       	andi	r27, 0x3E	; 62
      b4:	da 0f       	add	r29, r26
      b6:	c9 3f       	cpi	r28, 0xF9	; 249
      b8:	05 a8       	ldd	r0, Z+53	; 0x35
      ba:	4c cd       	rjmp	.-1384   	; 0xfffffb54 <__eeprom_end+0xff7efb54>
      bc:	b2 d4       	rcall	.+2404   	; 0xa22 <_ZN6parser9get_tokenEv+0x18c>
      be:	4e b9       	out	0x0e, r20	; 14
      c0:	38 36       	cpi	r19, 0x68	; 104
      c2:	a9 02       	muls	r26, r25
      c4:	0c 50       	subi	r16, 0x0C	; 12
      c6:	b9 91       	ld	r27, Y+
      c8:	86 88       	ldd	r8, Z+22	; 0x16
      ca:	08 3c       	cpi	r16, 0xC8	; 200
      cc:	a6 aa       	std	Z+54, r10	; 0x36
      ce:	aa 2a       	or	r10, r26
      d0:	be 00       	.word	0x00be	; ????
      d2:	00 00       	nop
      d4:	80 3f       	cpi	r24, 0xF0	; 240
      d6:	08 00       	.word	0x0008	; ????
      d8:	00 00       	nop
      da:	be 92       	st	-X, r11
      dc:	24 49       	sbci	r18, 0x94	; 148
      de:	12 3e       	cpi	r17, 0xE2	; 226
      e0:	ab aa       	std	Y+51, r10	; 0x33
      e2:	aa 2a       	or	r10, r26
      e4:	be cd       	rjmp	.-1156   	; 0xfffffc62 <__eeprom_end+0xff7efc62>
      e6:	cc cc       	rjmp	.-1640   	; 0xfffffa80 <__eeprom_end+0xff7efa80>
      e8:	4c 3e       	cpi	r20, 0xEC	; 236
      ea:	00 00       	nop
      ec:	00 80       	ld	r0, Z
      ee:	be ab       	std	Y+54, r27	; 0x36
      f0:	aa aa       	std	Y+50, r10	; 0x32
      f2:	aa 3e       	cpi	r26, 0xEA	; 234
      f4:	00 00       	nop
      f6:	00 00       	nop
      f8:	bf 00       	.word	0x00bf	; ????
      fa:	00 00       	nop
      fc:	80 3f       	cpi	r24, 0xF0	; 240
      fe:	00 00       	nop
     100:	00 00       	nop
     102:	00 08       	sbc	r0, r0
     104:	41 78       	andi	r20, 0x81	; 129
     106:	d3 bb       	out	0x13, r29	; 19
     108:	43 87       	std	Z+11, r20	; 0x0b
     10a:	d1 13       	cpse	r29, r17
     10c:	3d 19       	sub	r19, r13
     10e:	0e 3c       	cpi	r16, 0xCE	; 206
     110:	c3 bd       	out	0x23, r28	; 35
     112:	42 82       	std	Z+2, r4	; 0x02
     114:	ad 2b       	or	r26, r29
     116:	3e 68       	ori	r19, 0x8E	; 142
     118:	ec 82       	std	Y+4, r14	; 0x04
     11a:	76 be       	out	0x36, r7	; 54
     11c:	d9 8f       	std	Y+25, r29	; 0x19
     11e:	e1 a9       	ldd	r30, Z+49	; 0x31
     120:	3e 4c       	sbci	r19, 0xCE	; 206
     122:	80 ef       	ldi	r24, 0xF0	; 240
     124:	ff be       	out	0x3f, r15	; 63
     126:	01 c4       	rjmp	.+2050   	; 0x92a <_ZN6parser9get_tokenEv+0x94>
     128:	ff 7f       	andi	r31, 0xFF	; 255
     12a:	3f 00       	.word	0x003f	; ????
     12c:	00 00       	nop
     12e:	00 00       	nop
     130:	06 64       	ori	r16, 0x46	; 70
     132:	ec 1b       	sub	r30, r28
     134:	3c 04       	cpc	r3, r12
     136:	bc 16       	cp	r11, r28
     138:	3e 3b       	cpi	r19, 0xBE	; 190
     13a:	e5 b9       	out	0x05, r30	; 5
     13c:	3c c9       	rjmp	.-3464   	; 0xfffff3b6 <__eeprom_end+0xff7ef3b6>
     13e:	3c 37       	cpi	r19, 0x7C	; 124
     140:	c2 9e       	mul	r12, r18
     142:	5a 3d       	cpi	r21, 0xDA	; 218
     144:	66 04       	cpc	r6, r6
     146:	98 08       	sbc	r9, r8
     148:	3e ea       	ldi	r19, 0xAE	; 174
     14a:	69 aa       	std	Y+49, r6	; 0x31
     14c:	aa 3e       	cpi	r26, 0xEA	; 234
     14e:	00 00       	nop
     150:	00 80       	ld	r0, Z
     152:	3f 00       	.word	0x003f	; ????

00000154 <__trampolines_end>:
     154:	4e 41       	sbci	r20, 0x1E	; 30
     156:	4e 49       	Address 0x00000156 is out of bounds.
.word	0xffff	; ????

00000157 <pstr_inity>:
     157:	49 4e 49 54 59                                      INITY

0000015c <pstr_inf>:
     15c:	49 4e 46                                            INF

0000015f <pwr_m10>:
     15f:	cd cc cc 3d 0a d7 23 3c 17 b7 d1 38 77 cc 2b 32     ...=..#<...8w.+2
     16f:	95 95 e6 24 1f b1 4f 0a                             ...$..O.

00000177 <pwr_p10>:
     177:	00 00 20 41 00 00 c8 42 00 40 1c 46 20 bc be 4c     .. A...B.@.F ..L
     187:	ca 1b 0e 5a ae c5 9d 74 00 40 7a 10 f3 5a 00 a0     ...Z...t.@z..Z..
     197:	72 4e 18 09 00 10 a5 d4 e8 00 00 e8 76 48 17 00     rN..........vH..
     1a7:	00 e4 0b 54 02 00 00 ca 9a 3b 00 00 00 e1 f5 05     ...T.....;......
     1b7:	00 00 80 96 98 00 00 00 40 42 0f 00 00 00 a0 86     ........@B......
     1c7:	01 00 00 00 10 27 00 00 00 00 e8 03 00 00 00 00     .....'..........
     1d7:	64 00 00 00 00 00 0a 00 00 00 00 00 01 00 00 00     d...............
     1e7:	00 00 2c 76 d8 88 dc 67 4f 08 23 df c1 df ae 59     ..,v...gO.#....Y
     1f7:	e1 b1 b7 96 e5 e3 e4 53 c6 3a e6 51 99 76 96 e8     .......S.:.Q.v..
     207:	e6 c2 84 26 eb 89 8c 9b 62 ed 40 7c 6f fc ef bc     ...&....b.@|o...
     217:	9c 9f 40 f2 ba a5 6f a5 f4 90 05 5a 2a f7 5c 93     ..@...o....Z*.\.
     227:	6b 6c f9 67 6d c1 1b fc e0 e4 0d 47 fe f5 20 e6     kl.gm......G.. .
     237:	b5 00 d0 ed 90 2e 03 00 94 35 77 05 00 80 84 1e     .........5w.....
     247:	08 00 00 20 4e 0a 00 00 00 c8 0c 33 33 33 33 0f     ... N......3333.
     257:	98 6e 12 83 11 41 ef 8d 21 14 89 3b e6 55 16 cf     .n...A..!..;.U..
     267:	fe e6 db 18 d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb     ......K8..|.....
     277:	e4 24 20 32 84 72 5e 22 81 00 c9 f1 24 ec a1 e5     .$ 2.r^"....$...
     287:	3d 27                                               ='

00000289 <_ZL10FontLookup>:
     289:	00 00 00 00 00 00 00 5f 00 00 00 07 00 07 00 14     ......._........
     299:	7f 14 7f 14 24 2a 7f 2a 12 23 13 08 64 62 36 49     ....$*.*.#..db6I
     2a9:	55 22 50 00 05 03 00 00 00 1c 22 41 00 00 41 22     U"P......."A..A"
     2b9:	1c 00 08 2a 1c 2a 08 08 08 3e 08 08 00 50 30 00     ...*.*...>...P0.
     2c9:	00 08 08 08 08 08 00 30 30 00 00 20 10 08 04 02     .......00.. ....
     2d9:	3e 51 49 45 3e 00 42 7f 40 00 42 61 51 49 46 21     >QIE>.B.@.BaQIF!
     2e9:	41 45 4b 31 18 14 12 7f 10 27 45 45 45 39 3c 4a     AEK1.....'EEE9<J
     2f9:	49 49 30 01 71 09 05 03 36 49 49 49 36 06 49 49     II0.q...6III6.II
     309:	29 1e 00 36 36 00 00 00 56 36 00 00 00 08 14 22     )..66...V6....."
     319:	41 14 14 14 14 14 41 22 14 08 00 02 01 51 09 06     A.....A".....Q..
     329:	32 49 79 41 3e 7e 11 11 11 7e 7f 49 49 49 36 3e     2IyA>~...~.III6>
     339:	41 41 41 22 7f 41 41 22 1c 7f 49 49 49 41 7f 09     AAA".AA"..IIIA..
     349:	09 01 01 3e 41 41 51 32 7f 08 08 08 7f 00 41 7f     ...>AAQ2......A.
     359:	41 00 20 40 41 3f 01 7f 08 14 22 41 7f 40 40 40     A. @A?...."A.@@@
     369:	40 7f 02 04 02 7f 7f 04 08 10 7f 3e 41 41 41 3e     @..........>AAA>
     379:	7f 09 09 09 06 3e 41 51 21 5e 7f 09 19 29 46 46     .....>AQ!^...)FF
     389:	49 49 49 31 01 01 7f 01 01 3f 40 40 40 3f 1f 20     III1.....?@@@?. 
     399:	40 20 1f 7f 20 18 20 7f 63 14 08 14 63 03 04 78     @ .. . .c...c..x
     3a9:	04 03 61 51 49 45 43 00 00 7f 41 41 02 04 08 10     ..aQIEC...AA....
     3b9:	20 41 41 7f 00 00 04 02 01 02 04 40 40 40 40 40      AA........@@@@@
     3c9:	00 01 02 04 00 20 54 54 54 78 7f 48 44 44 38 38     ..... TTTx.HDD88
     3d9:	44 44 44 20 38 44 44 48 7f 38 54 54 54 18 08 7e     DDD 8DDH.8TTT..~
     3e9:	09 01 02 08 14 54 54 3c 7f 08 04 04 78 00 44 7d     .....TT<....x.D}
     3f9:	40 00 20 40 44 3d 00 00 7f 10 28 44 00 41 7f 40     @. @D=....(D.A.@
     409:	00 7c 04 18 04 78 7c 08 04 04 78 38 44 44 44 38     .|...x|...x8DDD8
     419:	7c 14 14 14 08 08 14 14 18 7c 7c 08 04 04 08 48     |........||....H
     429:	54 54 54 20 04 3f 44 40 20 3c 40 40 20 7c 1c 20     TTT .?D@ <@@ |. 
     439:	40 20 1c 3c 40 30 40 3c 44 28 10 28 44 0c 50 50     @ .<@0@<D(.(D.PP
     449:	50 3c 44 64 54 4c 44 00 08 36 41 00 00 00 7f 00     P<DdTLD..6A.....
     459:	00 00 41 36 08 00 08 08 2a 1c 08 08 1c 2a 08 08     ..A6....*....*..
	...

0000046a <__ctors_start>:
     46a:	47 1a       	sub	r4, r23

0000046c <__ctors_end>:
     46c:	11 24       	eor	r1, r1
     46e:	1f be       	out	0x3f, r1	; 63
     470:	cf e5       	ldi	r28, 0x5F	; 95
     472:	d8 e0       	ldi	r29, 0x08	; 8
     474:	de bf       	out	0x3e, r29	; 62
     476:	cd bf       	out	0x3d, r28	; 61

00000478 <__do_copy_data>:
     478:	12 e0       	ldi	r17, 0x02	; 2
     47a:	a0 e6       	ldi	r26, 0x60	; 96
     47c:	b0 e0       	ldi	r27, 0x00	; 0
     47e:	ec e9       	ldi	r30, 0x9C	; 156
     480:	f7 e4       	ldi	r31, 0x47	; 71
     482:	02 c0       	rjmp	.+4      	; 0x488 <__do_copy_data+0x10>
     484:	05 90       	lpm	r0, Z+
     486:	0d 92       	st	X+, r0
     488:	a0 32       	cpi	r26, 0x20	; 32
     48a:	b1 07       	cpc	r27, r17
     48c:	d9 f7       	brne	.-10     	; 0x484 <__do_copy_data+0xc>

0000048e <__do_clear_bss>:
     48e:	26 e0       	ldi	r18, 0x06	; 6
     490:	a0 e2       	ldi	r26, 0x20	; 32
     492:	b2 e0       	ldi	r27, 0x02	; 2
     494:	01 c0       	rjmp	.+2      	; 0x498 <.do_clear_bss_start>

00000496 <.do_clear_bss_loop>:
     496:	1d 92       	st	X+, r1

00000498 <.do_clear_bss_start>:
     498:	a4 3e       	cpi	r26, 0xE4	; 228
     49a:	b2 07       	cpc	r27, r18
     49c:	e1 f7       	brne	.-8      	; 0x496 <.do_clear_bss_loop>

0000049e <__do_global_ctors>:
     49e:	12 e0       	ldi	r17, 0x02	; 2
     4a0:	c6 e3       	ldi	r28, 0x36	; 54
     4a2:	d2 e0       	ldi	r29, 0x02	; 2
     4a4:	04 c0       	rjmp	.+8      	; 0x4ae <__do_global_ctors+0x10>
     4a6:	21 97       	sbiw	r28, 0x01	; 1
     4a8:	fe 01       	movw	r30, r28
     4aa:	0e 94 74 1f 	call	0x3ee8	; 0x3ee8 <__tablejump2__>
     4ae:	c5 33       	cpi	r28, 0x35	; 53
     4b0:	d1 07       	cpc	r29, r17
     4b2:	c9 f7       	brne	.-14     	; 0x4a6 <__do_global_ctors+0x8>
     4b4:	0e 94 c3 19 	call	0x3386	; 0x3386 <main>
     4b8:	0c 94 cc 23 	jmp	0x4798	; 0x4798 <_exit>

000004bc <__bad_interrupt>:
     4bc:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000004c0 <_Z6Epulsev>:
			break;
		}
	}
	
	return string_to_double(s,id);
}
     4c0:	ac 9a       	sbi	0x15, 4	; 21
     4c2:	ac 98       	cbi	0x15, 4	; 21
     4c4:	08 95       	ret

000004c6 <_Z7InitLCDv>:
     4c6:	8f ef       	ldi	r24, 0xFF	; 255
     4c8:	81 bb       	out	0x11, r24	; 17
     4ca:	a0 9a       	sbi	0x14, 0	; 20
     4cc:	a4 9a       	sbi	0x14, 4	; 20
     4ce:	a3 9a       	sbi	0x14, 3	; 20
     4d0:	a2 9a       	sbi	0x14, 2	; 20
     4d2:	a1 9a       	sbi	0x14, 1	; 20
     4d4:	a9 98       	cbi	0x15, 1	; 21
     4d6:	2f e7       	ldi	r18, 0x7F	; 127
     4d8:	88 e3       	ldi	r24, 0x38	; 56
     4da:	91 e0       	ldi	r25, 0x01	; 1
     4dc:	21 50       	subi	r18, 0x01	; 1
     4de:	80 40       	sbci	r24, 0x00	; 0
     4e0:	90 40       	sbci	r25, 0x00	; 0
     4e2:	e1 f7       	brne	.-8      	; 0x4dc <_Z7InitLCDv+0x16>
     4e4:	00 c0       	rjmp	.+0      	; 0x4e6 <_Z7InitLCDv+0x20>
     4e6:	00 00       	nop
     4e8:	a9 9a       	sbi	0x15, 1	; 21
     4ea:	2f e7       	ldi	r18, 0x7F	; 127
     4ec:	88 e3       	ldi	r24, 0x38	; 56
     4ee:	91 e0       	ldi	r25, 0x01	; 1
     4f0:	21 50       	subi	r18, 0x01	; 1
     4f2:	80 40       	sbci	r24, 0x00	; 0
     4f4:	90 40       	sbci	r25, 0x00	; 0
     4f6:	e1 f7       	brne	.-8      	; 0x4f0 <_Z7InitLCDv+0x2a>
     4f8:	00 c0       	rjmp	.+0      	; 0x4fa <_Z7InitLCDv+0x34>
     4fa:	00 00       	nop
     4fc:	a8 98       	cbi	0x15, 0	; 21
     4fe:	ab 9a       	sbi	0x15, 3	; 21
     500:	aa 9a       	sbi	0x15, 2	; 21
     502:	8f e3       	ldi	r24, 0x3F	; 63
     504:	82 bb       	out	0x12, r24	; 18
     506:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     50a:	80 ec       	ldi	r24, 0xC0	; 192
     50c:	82 bb       	out	0x12, r24	; 18
     50e:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     512:	2f e7       	ldi	r18, 0x7F	; 127
     514:	88 e3       	ldi	r24, 0x38	; 56
     516:	91 e0       	ldi	r25, 0x01	; 1
     518:	21 50       	subi	r18, 0x01	; 1
     51a:	80 40       	sbci	r24, 0x00	; 0
     51c:	90 40       	sbci	r25, 0x00	; 0
     51e:	e1 f7       	brne	.-8      	; 0x518 <_Z7InitLCDv+0x52>
     520:	00 c0       	rjmp	.+0      	; 0x522 <_Z7InitLCDv+0x5c>
     522:	00 00       	nop
     524:	2f e7       	ldi	r18, 0x7F	; 127
     526:	88 e3       	ldi	r24, 0x38	; 56
     528:	91 e0       	ldi	r25, 0x01	; 1
     52a:	21 50       	subi	r18, 0x01	; 1
     52c:	80 40       	sbci	r24, 0x00	; 0
     52e:	90 40       	sbci	r25, 0x00	; 0
     530:	e1 f7       	brne	.-8      	; 0x52a <_Z7InitLCDv+0x64>
     532:	00 c0       	rjmp	.+0      	; 0x534 <_Z7InitLCDv+0x6e>
     534:	00 00       	nop
     536:	ab 98       	cbi	0x15, 3	; 21
     538:	aa 98       	cbi	0x15, 2	; 21
     53a:	08 95       	ret

0000053c <_Z8PutPixelhhc>:
     53c:	0f 93       	push	r16
     53e:	1f 93       	push	r17
     540:	cf 93       	push	r28
     542:	df 93       	push	r29
     544:	c8 2f       	mov	r28, r24
     546:	04 2f       	mov	r16, r20
     548:	68 30       	cpi	r22, 0x08	; 8
     54a:	68 f0       	brcs	.+26     	; 0x566 <_Z8PutPixelhhc+0x2a>
     54c:	86 2f       	mov	r24, r22
     54e:	88 50       	subi	r24, 0x08	; 8
     550:	88 30       	cpi	r24, 0x08	; 8
     552:	e8 f7       	brcc	.-6      	; 0x54e <_Z8PutPixelhhc+0x12>
     554:	16 2f       	mov	r17, r22
     556:	17 70       	andi	r17, 0x07	; 7
     558:	d8 ef       	ldi	r29, 0xF8	; 248
     55a:	d6 0f       	add	r29, r22
     55c:	d6 95       	lsr	r29
     55e:	d6 95       	lsr	r29
     560:	d6 95       	lsr	r29
     562:	df 5f       	subi	r29, 0xFF	; 255
     564:	02 c0       	rjmp	.+4      	; 0x56a <_Z8PutPixelhhc+0x2e>
     566:	16 2f       	mov	r17, r22
     568:	d0 e0       	ldi	r29, 0x00	; 0
     56a:	c0 34       	cpi	r28, 0x40	; 64
     56c:	80 f4       	brcc	.+32     	; 0x58e <_Z8PutPixelhhc+0x52>
     56e:	a8 98       	cbi	0x15, 0	; 21
     570:	ab 9a       	sbi	0x15, 3	; 21
     572:	aa 98       	cbi	0x15, 2	; 21
     574:	d7 70       	andi	r29, 0x07	; 7
     576:	8d 2f       	mov	r24, r29
     578:	88 6b       	ori	r24, 0xB8	; 184
     57a:	82 bb       	out	0x12, r24	; 18
     57c:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     580:	cf 73       	andi	r28, 0x3F	; 63
     582:	8c 2f       	mov	r24, r28
     584:	80 64       	ori	r24, 0x40	; 64
     586:	82 bb       	out	0x12, r24	; 18
     588:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     58c:	11 c0       	rjmp	.+34     	; 0x5b0 <_Z8PutPixelhhc+0x74>
     58e:	c0 54       	subi	r28, 0x40	; 64
     590:	a8 98       	cbi	0x15, 0	; 21
     592:	ab 98       	cbi	0x15, 3	; 21
     594:	aa 9a       	sbi	0x15, 2	; 21
     596:	d7 70       	andi	r29, 0x07	; 7
     598:	8d 2f       	mov	r24, r29
     59a:	88 6b       	ori	r24, 0xB8	; 184
     59c:	82 bb       	out	0x12, r24	; 18
     59e:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     5a2:	cf 73       	andi	r28, 0x3F	; 63
     5a4:	8c 2f       	mov	r24, r28
     5a6:	80 64       	ori	r24, 0x40	; 64
     5a8:	82 bb       	out	0x12, r24	; 18
     5aa:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     5ae:	c0 5c       	subi	r28, 0xC0	; 192
     5b0:	a8 9a       	sbi	0x15, 0	; 21
     5b2:	01 30       	cpi	r16, 0x01	; 1
     5b4:	d1 f4       	brne	.+52     	; 0x5ea <_Z8PutPixelhhc+0xae>
     5b6:	ec 2f       	mov	r30, r28
     5b8:	f0 e0       	ldi	r31, 0x00	; 0
     5ba:	ee 0f       	add	r30, r30
     5bc:	ff 1f       	adc	r31, r31
     5be:	ee 0f       	add	r30, r30
     5c0:	ff 1f       	adc	r31, r31
     5c2:	ee 0f       	add	r30, r30
     5c4:	ff 1f       	adc	r31, r31
     5c6:	ee 51       	subi	r30, 0x1E	; 30
     5c8:	fd 4f       	sbci	r31, 0xFD	; 253
     5ca:	ed 0f       	add	r30, r29
     5cc:	f1 1d       	adc	r31, r1
     5ce:	81 e0       	ldi	r24, 0x01	; 1
     5d0:	90 e0       	ldi	r25, 0x00	; 0
     5d2:	02 c0       	rjmp	.+4      	; 0x5d8 <_Z8PutPixelhhc+0x9c>
     5d4:	88 0f       	add	r24, r24
     5d6:	99 1f       	adc	r25, r25
     5d8:	1a 95       	dec	r17
     5da:	e2 f7       	brpl	.-8      	; 0x5d4 <_Z8PutPixelhhc+0x98>
     5dc:	90 81       	ld	r25, Z
     5de:	89 2b       	or	r24, r25
     5e0:	80 83       	st	Z, r24
     5e2:	82 bb       	out	0x12, r24	; 18
     5e4:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     5e8:	1a c0       	rjmp	.+52     	; 0x61e <_Z8PutPixelhhc+0xe2>
     5ea:	ec 2f       	mov	r30, r28
     5ec:	f0 e0       	ldi	r31, 0x00	; 0
     5ee:	81 e0       	ldi	r24, 0x01	; 1
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	02 c0       	rjmp	.+4      	; 0x5f8 <_Z8PutPixelhhc+0xbc>
     5f4:	88 0f       	add	r24, r24
     5f6:	99 1f       	adc	r25, r25
     5f8:	1a 95       	dec	r17
     5fa:	e2 f7       	brpl	.-8      	; 0x5f4 <_Z8PutPixelhhc+0xb8>
     5fc:	80 95       	com	r24
     5fe:	ee 0f       	add	r30, r30
     600:	ff 1f       	adc	r31, r31
     602:	ee 0f       	add	r30, r30
     604:	ff 1f       	adc	r31, r31
     606:	ee 0f       	add	r30, r30
     608:	ff 1f       	adc	r31, r31
     60a:	ee 51       	subi	r30, 0x1E	; 30
     60c:	fd 4f       	sbci	r31, 0xFD	; 253
     60e:	ed 0f       	add	r30, r29
     610:	f1 1d       	adc	r31, r1
     612:	90 81       	ld	r25, Z
     614:	89 23       	and	r24, r25
     616:	80 83       	st	Z, r24
     618:	82 bb       	out	0x12, r24	; 18
     61a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     61e:	df 91       	pop	r29
     620:	cf 91       	pop	r28
     622:	1f 91       	pop	r17
     624:	0f 91       	pop	r16
     626:	08 95       	ret

00000628 <_Z9LCD_Clearv>:
     628:	ff 92       	push	r15
     62a:	0f 93       	push	r16
     62c:	1f 93       	push	r17
     62e:	cf 93       	push	r28
     630:	df 93       	push	r29
     632:	00 e0       	ldi	r16, 0x00	; 0
     634:	10 e0       	ldi	r17, 0x00	; 0
     636:	f1 2c       	mov	r15, r1
     638:	d0 2f       	mov	r29, r16
     63a:	cf 2d       	mov	r28, r15
     63c:	ec 2f       	mov	r30, r28
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	ee 0f       	add	r30, r30
     642:	ff 1f       	adc	r31, r31
     644:	ee 0f       	add	r30, r30
     646:	ff 1f       	adc	r31, r31
     648:	ee 0f       	add	r30, r30
     64a:	ff 1f       	adc	r31, r31
     64c:	ee 51       	subi	r30, 0x1E	; 30
     64e:	fd 4f       	sbci	r31, 0xFD	; 253
     650:	e0 0f       	add	r30, r16
     652:	f1 1f       	adc	r31, r17
     654:	10 82       	st	Z, r1
     656:	c0 34       	cpi	r28, 0x40	; 64
     658:	80 f4       	brcc	.+32     	; 0x67a <_Z9LCD_Clearv+0x52>
     65a:	a8 98       	cbi	0x15, 0	; 21
     65c:	ab 9a       	sbi	0x15, 3	; 21
     65e:	aa 98       	cbi	0x15, 2	; 21
     660:	d7 70       	andi	r29, 0x07	; 7
     662:	8d 2f       	mov	r24, r29
     664:	88 6b       	ori	r24, 0xB8	; 184
     666:	82 bb       	out	0x12, r24	; 18
     668:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     66c:	cf 73       	andi	r28, 0x3F	; 63
     66e:	8c 2f       	mov	r24, r28
     670:	80 64       	ori	r24, 0x40	; 64
     672:	82 bb       	out	0x12, r24	; 18
     674:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     678:	11 c0       	rjmp	.+34     	; 0x69c <_Z9LCD_Clearv+0x74>
     67a:	c0 54       	subi	r28, 0x40	; 64
     67c:	a8 98       	cbi	0x15, 0	; 21
     67e:	ab 98       	cbi	0x15, 3	; 21
     680:	aa 9a       	sbi	0x15, 2	; 21
     682:	d7 70       	andi	r29, 0x07	; 7
     684:	8d 2f       	mov	r24, r29
     686:	88 6b       	ori	r24, 0xB8	; 184
     688:	82 bb       	out	0x12, r24	; 18
     68a:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     68e:	cf 73       	andi	r28, 0x3F	; 63
     690:	8c 2f       	mov	r24, r28
     692:	80 64       	ori	r24, 0x40	; 64
     694:	82 bb       	out	0x12, r24	; 18
     696:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     69a:	c0 5c       	subi	r28, 0xC0	; 192
     69c:	a8 9a       	sbi	0x15, 0	; 21
     69e:	12 ba       	out	0x12, r1	; 18
     6a0:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_Z6Epulsev>
     6a4:	cf 5f       	subi	r28, 0xFF	; 255
     6a6:	52 f6       	brpl	.-108    	; 0x63c <_Z9LCD_Clearv+0x14>
     6a8:	0f 5f       	subi	r16, 0xFF	; 255
     6aa:	1f 4f       	sbci	r17, 0xFF	; 255
     6ac:	08 30       	cpi	r16, 0x08	; 8
     6ae:	11 05       	cpc	r17, r1
     6b0:	19 f6       	brne	.-122    	; 0x638 <_Z9LCD_Clearv+0x10>
     6b2:	df 91       	pop	r29
     6b4:	cf 91       	pop	r28
     6b6:	1f 91       	pop	r17
     6b8:	0f 91       	pop	r16
     6ba:	ff 90       	pop	r15
     6bc:	08 95       	ret

000006be <_Z4lineccccc>:
     6be:	7f 92       	push	r7
     6c0:	8f 92       	push	r8
     6c2:	9f 92       	push	r9
     6c4:	af 92       	push	r10
     6c6:	bf 92       	push	r11
     6c8:	cf 92       	push	r12
     6ca:	df 92       	push	r13
     6cc:	ef 92       	push	r14
     6ce:	ff 92       	push	r15
     6d0:	0f 93       	push	r16
     6d2:	1f 93       	push	r17
     6d4:	cf 93       	push	r28
     6d6:	df 93       	push	r29
     6d8:	d8 2f       	mov	r29, r24
     6da:	c6 2f       	mov	r28, r22
     6dc:	74 2e       	mov	r7, r20
     6de:	82 2e       	mov	r8, r18
     6e0:	a2 2e       	mov	r10, r18
     6e2:	b1 2c       	mov	r11, r1
     6e4:	a6 1a       	sub	r10, r22
     6e6:	b1 08       	sbc	r11, r1
     6e8:	c4 2e       	mov	r12, r20
     6ea:	d1 2c       	mov	r13, r1
     6ec:	c8 1a       	sub	r12, r24
     6ee:	d1 08       	sbc	r13, r1
     6f0:	bb 20       	and	r11, r11
     6f2:	34 f4       	brge	.+12     	; 0x700 <_Z4lineccccc+0x42>
     6f4:	b1 94       	neg	r11
     6f6:	a1 94       	neg	r10
     6f8:	b1 08       	sbc	r11, r1
     6fa:	99 24       	eor	r9, r9
     6fc:	9a 94       	dec	r9
     6fe:	02 c0       	rjmp	.+4      	; 0x704 <_Z4lineccccc+0x46>
     700:	99 24       	eor	r9, r9
     702:	93 94       	inc	r9
     704:	dd 20       	and	r13, r13
     706:	2c f4       	brge	.+10     	; 0x712 <_Z4lineccccc+0x54>
     708:	d1 94       	neg	r13
     70a:	c1 94       	neg	r12
     70c:	d1 08       	sbc	r13, r1
     70e:	1f ef       	ldi	r17, 0xFF	; 255
     710:	01 c0       	rjmp	.+2      	; 0x714 <_Z4lineccccc+0x56>
     712:	11 e0       	ldi	r17, 0x01	; 1
     714:	aa 0c       	add	r10, r10
     716:	bb 1c       	adc	r11, r11
     718:	cc 0c       	add	r12, r12
     71a:	dd 1c       	adc	r13, r13
     71c:	40 2f       	mov	r20, r16
     71e:	6c 2f       	mov	r22, r28
     720:	8d 2f       	mov	r24, r29
     722:	0e 94 9e 02 	call	0x53c	; 0x53c <_Z8PutPixelhhc>
     726:	ac 14       	cp	r10, r12
     728:	bd 04       	cpc	r11, r13
     72a:	c4 f4       	brge	.+48     	; 0x75c <_Z4lineccccc+0x9e>
     72c:	c6 01       	movw	r24, r12
     72e:	95 95       	asr	r25
     730:	87 95       	ror	r24
     732:	75 01       	movw	r14, r10
     734:	e8 1a       	sub	r14, r24
     736:	f9 0a       	sbc	r15, r25
     738:	7d 16       	cp	r7, r29
     73a:	39 f1       	breq	.+78     	; 0x78a <_Z4lineccccc+0xcc>
     73c:	ff 20       	and	r15, r15
     73e:	1c f0       	brlt	.+6      	; 0x746 <_Z4lineccccc+0x88>
     740:	c9 0d       	add	r28, r9
     742:	ec 18       	sub	r14, r12
     744:	fd 08       	sbc	r15, r13
     746:	d1 0f       	add	r29, r17
     748:	ea 0c       	add	r14, r10
     74a:	fb 1c       	adc	r15, r11
     74c:	40 2f       	mov	r20, r16
     74e:	6c 2f       	mov	r22, r28
     750:	8d 2f       	mov	r24, r29
     752:	0e 94 9e 02 	call	0x53c	; 0x53c <_Z8PutPixelhhc>
     756:	d7 11       	cpse	r29, r7
     758:	f1 cf       	rjmp	.-30     	; 0x73c <_Z4lineccccc+0x7e>
     75a:	17 c0       	rjmp	.+46     	; 0x78a <_Z4lineccccc+0xcc>
     75c:	c5 01       	movw	r24, r10
     75e:	95 95       	asr	r25
     760:	87 95       	ror	r24
     762:	76 01       	movw	r14, r12
     764:	e8 1a       	sub	r14, r24
     766:	f9 0a       	sbc	r15, r25
     768:	8c 16       	cp	r8, r28
     76a:	79 f0       	breq	.+30     	; 0x78a <_Z4lineccccc+0xcc>
     76c:	ff 20       	and	r15, r15
     76e:	1c f0       	brlt	.+6      	; 0x776 <_Z4lineccccc+0xb8>
     770:	d1 0f       	add	r29, r17
     772:	ea 18       	sub	r14, r10
     774:	fb 08       	sbc	r15, r11
     776:	c9 0d       	add	r28, r9
     778:	ec 0c       	add	r14, r12
     77a:	fd 1c       	adc	r15, r13
     77c:	40 2f       	mov	r20, r16
     77e:	6c 2f       	mov	r22, r28
     780:	8d 2f       	mov	r24, r29
     782:	0e 94 9e 02 	call	0x53c	; 0x53c <_Z8PutPixelhhc>
     786:	c8 11       	cpse	r28, r8
     788:	f1 cf       	rjmp	.-30     	; 0x76c <_Z4lineccccc+0xae>
     78a:	df 91       	pop	r29
     78c:	cf 91       	pop	r28
     78e:	1f 91       	pop	r17
     790:	0f 91       	pop	r16
     792:	ff 90       	pop	r15
     794:	ef 90       	pop	r14
     796:	df 90       	pop	r13
     798:	cf 90       	pop	r12
     79a:	bf 90       	pop	r11
     79c:	af 90       	pop	r10
     79e:	9f 90       	pop	r9
     7a0:	8f 90       	pop	r8
     7a2:	7f 90       	pop	r7
     7a4:	08 95       	ret

000007a6 <_Z11DisplayCharhhc>:
     7a6:	cf 92       	push	r12
     7a8:	df 92       	push	r13
     7aa:	ef 92       	push	r14
     7ac:	ff 92       	push	r15
     7ae:	0f 93       	push	r16
     7b0:	1f 93       	push	r17
     7b2:	cf 93       	push	r28
     7b4:	df 93       	push	r29
     7b6:	d6 2e       	mov	r13, r22
     7b8:	40 52       	subi	r20, 0x20	; 32
     7ba:	24 2f       	mov	r18, r20
     7bc:	30 e0       	ldi	r19, 0x00	; 0
     7be:	89 01       	movw	r16, r18
     7c0:	00 0f       	add	r16, r16
     7c2:	11 1f       	adc	r17, r17
     7c4:	00 0f       	add	r16, r16
     7c6:	11 1f       	adc	r17, r17
     7c8:	02 0f       	add	r16, r18
     7ca:	13 1f       	adc	r17, r19
     7cc:	07 57       	subi	r16, 0x77	; 119
     7ce:	1d 4f       	sbci	r17, 0xFD	; 253
     7d0:	0f 2e       	mov	r0, r31
     7d2:	f5 e0       	ldi	r31, 0x05	; 5
     7d4:	cf 2e       	mov	r12, r31
     7d6:	f0 2d       	mov	r31, r0
     7d8:	c8 0e       	add	r12, r24
     7da:	e8 2e       	mov	r14, r24
     7dc:	fd 2c       	mov	r15, r13
     7de:	c0 e0       	ldi	r28, 0x00	; 0
     7e0:	d0 e0       	ldi	r29, 0x00	; 0
     7e2:	f8 01       	movw	r30, r16
     7e4:	44 91       	lpm	r20, Z
     7e6:	50 e0       	ldi	r21, 0x00	; 0
     7e8:	0c 2e       	mov	r0, r28
     7ea:	02 c0       	rjmp	.+4      	; 0x7f0 <_Z11DisplayCharhhc+0x4a>
     7ec:	55 95       	asr	r21
     7ee:	47 95       	ror	r20
     7f0:	0a 94       	dec	r0
     7f2:	e2 f7       	brpl	.-8      	; 0x7ec <_Z11DisplayCharhhc+0x46>
     7f4:	41 70       	andi	r20, 0x01	; 1
     7f6:	6f 2d       	mov	r22, r15
     7f8:	8e 2d       	mov	r24, r14
     7fa:	0e 94 9e 02 	call	0x53c	; 0x53c <_Z8PutPixelhhc>
     7fe:	21 96       	adiw	r28, 0x01	; 1
     800:	f3 94       	inc	r15
     802:	c8 30       	cpi	r28, 0x08	; 8
     804:	d1 05       	cpc	r29, r1
     806:	69 f7       	brne	.-38     	; 0x7e2 <_Z11DisplayCharhhc+0x3c>
     808:	0f 5f       	subi	r16, 0xFF	; 255
     80a:	1f 4f       	sbci	r17, 0xFF	; 255
     80c:	e3 94       	inc	r14
     80e:	ce 10       	cpse	r12, r14
     810:	e5 cf       	rjmp	.-54     	; 0x7dc <_Z11DisplayCharhhc+0x36>
     812:	df 91       	pop	r29
     814:	cf 91       	pop	r28
     816:	1f 91       	pop	r17
     818:	0f 91       	pop	r16
     81a:	ff 90       	pop	r15
     81c:	ef 90       	pop	r14
     81e:	df 90       	pop	r13
     820:	cf 90       	pop	r12
     822:	08 95       	ret

00000824 <_Z11DisplayTexthhPc>:
     824:	ef 92       	push	r14
     826:	ff 92       	push	r15
     828:	0f 93       	push	r16
     82a:	1f 93       	push	r17
     82c:	cf 93       	push	r28
     82e:	df 93       	push	r29
     830:	fa 01       	movw	r30, r20
     832:	01 90       	ld	r0, Z+
     834:	00 20       	and	r0, r0
     836:	e9 f7       	brne	.-6      	; 0x832 <_Z11DisplayTexthhPc+0xe>
     838:	31 97       	sbiw	r30, 0x01	; 1
     83a:	e4 1b       	sub	r30, r20
     83c:	f5 0b       	sbc	r31, r21
     83e:	1e 16       	cp	r1, r30
     840:	1f 06       	cpc	r1, r31
     842:	8c f4       	brge	.+34     	; 0x866 <__stack+0x7>
     844:	d6 2f       	mov	r29, r22
     846:	8a 01       	movw	r16, r20
     848:	7a 01       	movw	r14, r20
     84a:	ee 0e       	add	r14, r30
     84c:	ff 1e       	adc	r15, r31
     84e:	c8 2f       	mov	r28, r24
     850:	f8 01       	movw	r30, r16
     852:	41 91       	ld	r20, Z+
     854:	8f 01       	movw	r16, r30
     856:	6d 2f       	mov	r22, r29
     858:	8c 2f       	mov	r24, r28
     85a:	0e 94 d3 03 	call	0x7a6	; 0x7a6 <_Z11DisplayCharhhc>
     85e:	ca 5f       	subi	r28, 0xFA	; 250
     860:	0e 15       	cp	r16, r14
     862:	1f 05       	cpc	r17, r15
     864:	a9 f7       	brne	.-22     	; 0x850 <_Z11DisplayTexthhPc+0x2c>
     866:	df 91       	pop	r29
     868:	cf 91       	pop	r28
     86a:	1f 91       	pop	r17
     86c:	0f 91       	pop	r16
     86e:	ff 90       	pop	r15
     870:	ef 90       	pop	r14
     872:	08 95       	ret

00000874 <_ZN6parserC1Ev>:
     874:	fc 01       	movw	r30, r24
     876:	11 82       	std	Z+1, r1	; 0x01
     878:	10 82       	st	Z, r1
     87a:	72 96       	adiw	r30, 0x12	; 18
     87c:	9c 01       	movw	r18, r24
     87e:	26 5c       	subi	r18, 0xC6	; 198
     880:	3f 4f       	sbci	r19, 0xFF	; 255
     882:	11 92       	st	Z+, r1
     884:	11 92       	st	Z+, r1
     886:	11 92       	st	Z+, r1
     888:	11 92       	st	Z+, r1
     88a:	e2 17       	cp	r30, r18
     88c:	f3 07       	cpc	r31, r19
     88e:	c9 f7       	brne	.-14     	; 0x882 <_ZN6parserC1Ev+0xe>
     890:	fc 01       	movw	r30, r24
     892:	12 ae       	std	Z+58, r1	; 0x3a
     894:	08 95       	ret

00000896 <_ZN6parser9get_tokenEv>:
     896:	af 92       	push	r10
     898:	bf 92       	push	r11
     89a:	cf 92       	push	r12
     89c:	df 92       	push	r13
     89e:	ef 92       	push	r14
     8a0:	ff 92       	push	r15
     8a2:	0f 93       	push	r16
     8a4:	1f 93       	push	r17
     8a6:	cf 93       	push	r28
     8a8:	df 93       	push	r29
     8aa:	6c 01       	movw	r12, r24
     8ac:	dc 01       	movw	r26, r24
     8ae:	51 96       	adiw	r26, 0x11	; 17
     8b0:	1c 92       	st	X, r1
     8b2:	51 97       	sbiw	r26, 0x11	; 17
     8b4:	12 96       	adiw	r26, 0x02	; 2
     8b6:	1c 92       	st	X, r1
     8b8:	12 97       	sbiw	r26, 0x02	; 2
     8ba:	ed 91       	ld	r30, X+
     8bc:	fc 91       	ld	r31, X
     8be:	80 81       	ld	r24, Z
     8c0:	88 23       	and	r24, r24
     8c2:	09 f4       	brne	.+2      	; 0x8c6 <_ZN6parser9get_tokenEv+0x30>
     8c4:	a8 c0       	rjmp	.+336    	; 0xa16 <_ZN6parser9get_tokenEv+0x180>
     8c6:	f6 01       	movw	r30, r12
     8c8:	c0 81       	ld	r28, Z
     8ca:	d1 81       	ldd	r29, Z+1	; 0x01
     8cc:	f8 80       	ld	r15, Y
     8ce:	0f 2d       	mov	r16, r15
     8d0:	10 e0       	ldi	r17, 0x00	; 0
     8d2:	c8 01       	movw	r24, r16
     8d4:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <isspace>
     8d8:	89 2b       	or	r24, r25
     8da:	29 f0       	breq	.+10     	; 0x8e6 <_ZN6parser9get_tokenEv+0x50>
     8dc:	21 96       	adiw	r28, 0x01	; 1
     8de:	d6 01       	movw	r26, r12
     8e0:	cd 93       	st	X+, r28
     8e2:	dc 93       	st	X, r29
     8e4:	f0 cf       	rjmp	.-32     	; 0x8c6 <_ZN6parser9get_tokenEv+0x30>
     8e6:	b8 01       	movw	r22, r16
     8e8:	8e ef       	ldi	r24, 0xFE	; 254
     8ea:	90 e0       	ldi	r25, 0x00	; 0
     8ec:	0e 94 c5 1f 	call	0x3f8a	; 0x3f8a <strchr>
     8f0:	89 2b       	or	r24, r25
     8f2:	89 f0       	breq	.+34     	; 0x916 <_ZN6parser9get_tokenEv+0x80>
     8f4:	81 e0       	ldi	r24, 0x01	; 1
     8f6:	f6 01       	movw	r30, r12
     8f8:	81 8b       	std	Z+17, r24	; 0x11
     8fa:	56 01       	movw	r10, r12
     8fc:	f3 e0       	ldi	r31, 0x03	; 3
     8fe:	af 0e       	add	r10, r31
     900:	b1 1c       	adc	r11, r1
     902:	ce 01       	movw	r24, r28
     904:	01 96       	adiw	r24, 0x01	; 1
     906:	d6 01       	movw	r26, r12
     908:	11 96       	adiw	r26, 0x01	; 1
     90a:	9c 93       	st	X, r25
     90c:	8e 93       	st	-X, r24
     90e:	88 81       	ld	r24, Y
     910:	12 96       	adiw	r26, 0x02	; 2
     912:	8c 93       	st	X, r24
     914:	6b c0       	rjmp	.+214    	; 0x9ec <_ZN6parser9get_tokenEv+0x156>
     916:	56 01       	movw	r10, r12
     918:	b2 e0       	ldi	r27, 0x02	; 2
     91a:	ab 0e       	add	r10, r27
     91c:	b1 1c       	adc	r11, r1
     91e:	c8 01       	movw	r24, r16
     920:	0e 94 a1 1f 	call	0x3f42	; 0x3f42 <isalpha>
     924:	89 2b       	or	r24, r25
     926:	b9 f1       	breq	.+110    	; 0x996 <_ZN6parser9get_tokenEv+0x100>
     928:	75 01       	movw	r14, r10
     92a:	57 01       	movw	r10, r14
     92c:	f6 01       	movw	r30, r12
     92e:	c0 81       	ld	r28, Z
     930:	d1 81       	ldd	r29, Z+1	; 0x01
     932:	18 81       	ld	r17, Y
     934:	61 2f       	mov	r22, r17
     936:	70 e0       	ldi	r23, 0x00	; 0
     938:	88 e0       	ldi	r24, 0x08	; 8
     93a:	91 e0       	ldi	r25, 0x01	; 1
     93c:	0e 94 c5 1f 	call	0x3f8a	; 0x3f8a <strchr>
     940:	89 2b       	or	r24, r25
     942:	89 f4       	brne	.+34     	; 0x966 <_ZN6parser9get_tokenEv+0xd0>
     944:	11 23       	and	r17, r17
     946:	79 f0       	breq	.+30     	; 0x966 <_ZN6parser9get_tokenEv+0xd0>
     948:	ce 01       	movw	r24, r28
     94a:	01 96       	adiw	r24, 0x01	; 1
     94c:	d6 01       	movw	r26, r12
     94e:	8d 93       	st	X+, r24
     950:	9c 93       	st	X, r25
     952:	88 81       	ld	r24, Y
     954:	90 e0       	ldi	r25, 0x00	; 0
     956:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <toupper>
     95a:	f7 01       	movw	r30, r14
     95c:	80 83       	st	Z, r24
     95e:	ff ef       	ldi	r31, 0xFF	; 255
     960:	ef 1a       	sub	r14, r31
     962:	ff 0a       	sbc	r15, r31
     964:	e2 cf       	rjmp	.-60     	; 0x92a <_ZN6parser9get_tokenEv+0x94>
     966:	d6 01       	movw	r26, r12
     968:	cd 91       	ld	r28, X+
     96a:	dc 91       	ld	r29, X
     96c:	18 81       	ld	r17, Y
     96e:	81 2f       	mov	r24, r17
     970:	90 e0       	ldi	r25, 0x00	; 0
     972:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <isspace>
     976:	89 2b       	or	r24, r25
     978:	29 f0       	breq	.+10     	; 0x984 <_ZN6parser9get_tokenEv+0xee>
     97a:	21 96       	adiw	r28, 0x01	; 1
     97c:	f6 01       	movw	r30, r12
     97e:	d1 83       	std	Z+1, r29	; 0x01
     980:	c0 83       	st	Z, r28
     982:	f1 cf       	rjmp	.-30     	; 0x966 <_ZN6parser9get_tokenEv+0xd0>
     984:	18 32       	cpi	r17, 0x28	; 40
     986:	11 f0       	breq	.+4      	; 0x98c <_ZN6parser9get_tokenEv+0xf6>
     988:	82 e0       	ldi	r24, 0x02	; 2
     98a:	01 c0       	rjmp	.+2      	; 0x98e <_ZN6parser9get_tokenEv+0xf8>
     98c:	84 e0       	ldi	r24, 0x04	; 4
     98e:	d6 01       	movw	r26, r12
     990:	51 96       	adiw	r26, 0x11	; 17
     992:	8c 93       	st	X, r24
     994:	2b c0       	rjmp	.+86     	; 0x9ec <_ZN6parser9get_tokenEv+0x156>
     996:	8f 2d       	mov	r24, r15
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	c0 97       	sbiw	r24, 0x30	; 48
     99c:	0a 97       	sbiw	r24, 0x0a	; 10
     99e:	18 f0       	brcs	.+6      	; 0x9a6 <_ZN6parser9get_tokenEv+0x110>
     9a0:	be e2       	ldi	r27, 0x2E	; 46
     9a2:	fb 12       	cpse	r15, r27
     9a4:	23 c0       	rjmp	.+70     	; 0x9ec <_ZN6parser9get_tokenEv+0x156>
     9a6:	75 01       	movw	r14, r10
     9a8:	57 01       	movw	r10, r14
     9aa:	f6 01       	movw	r30, r12
     9ac:	c0 81       	ld	r28, Z
     9ae:	d1 81       	ldd	r29, Z+1	; 0x01
     9b0:	18 81       	ld	r17, Y
     9b2:	61 2f       	mov	r22, r17
     9b4:	70 e0       	ldi	r23, 0x00	; 0
     9b6:	88 e0       	ldi	r24, 0x08	; 8
     9b8:	91 e0       	ldi	r25, 0x01	; 1
     9ba:	0e 94 c5 1f 	call	0x3f8a	; 0x3f8a <strchr>
     9be:	89 2b       	or	r24, r25
     9c0:	89 f4       	brne	.+34     	; 0x9e4 <_ZN6parser9get_tokenEv+0x14e>
     9c2:	11 23       	and	r17, r17
     9c4:	79 f0       	breq	.+30     	; 0x9e4 <_ZN6parser9get_tokenEv+0x14e>
     9c6:	ce 01       	movw	r24, r28
     9c8:	01 96       	adiw	r24, 0x01	; 1
     9ca:	d6 01       	movw	r26, r12
     9cc:	8d 93       	st	X+, r24
     9ce:	9c 93       	st	X, r25
     9d0:	88 81       	ld	r24, Y
     9d2:	90 e0       	ldi	r25, 0x00	; 0
     9d4:	0e 94 b2 1f 	call	0x3f64	; 0x3f64 <toupper>
     9d8:	f7 01       	movw	r30, r14
     9da:	80 83       	st	Z, r24
     9dc:	ff ef       	ldi	r31, 0xFF	; 255
     9de:	ef 1a       	sub	r14, r31
     9e0:	ff 0a       	sbc	r15, r31
     9e2:	e2 cf       	rjmp	.-60     	; 0x9a8 <_ZN6parser9get_tokenEv+0x112>
     9e4:	83 e0       	ldi	r24, 0x03	; 3
     9e6:	d6 01       	movw	r26, r12
     9e8:	51 96       	adiw	r26, 0x11	; 17
     9ea:	8c 93       	st	X, r24
     9ec:	f5 01       	movw	r30, r10
     9ee:	10 82       	st	Z, r1
     9f0:	d6 01       	movw	r26, r12
     9f2:	51 96       	adiw	r26, 0x11	; 17
     9f4:	8c 91       	ld	r24, X
     9f6:	51 97       	sbiw	r26, 0x11	; 17
     9f8:	82 30       	cpi	r24, 0x02	; 2
     9fa:	69 f4       	brne	.+26     	; 0xa16 <_ZN6parser9get_tokenEv+0x180>
     9fc:	13 96       	adiw	r26, 0x03	; 3
     9fe:	8c 91       	ld	r24, X
     a00:	13 97       	sbiw	r26, 0x03	; 3
     a02:	88 23       	and	r24, r24
     a04:	41 f0       	breq	.+16     	; 0xa16 <_ZN6parser9get_tokenEv+0x180>
     a06:	da 96       	adiw	r26, 0x3a	; 58
     a08:	86 e0       	ldi	r24, 0x06	; 6
     a0a:	e5 e1       	ldi	r30, 0x15	; 21
     a0c:	f1 e0       	ldi	r31, 0x01	; 1
     a0e:	01 90       	ld	r0, Z+
     a10:	0d 92       	st	X+, r0
     a12:	8a 95       	dec	r24
     a14:	e1 f7       	brne	.-8      	; 0xa0e <_ZN6parser9get_tokenEv+0x178>
     a16:	df 91       	pop	r29
     a18:	cf 91       	pop	r28
     a1a:	1f 91       	pop	r17
     a1c:	0f 91       	pop	r16
     a1e:	ff 90       	pop	r15
     a20:	ef 90       	pop	r14
     a22:	df 90       	pop	r13
     a24:	cf 90       	pop	r12
     a26:	bf 90       	pop	r11
     a28:	af 90       	pop	r10
     a2a:	08 95       	ret

00000a2c <_ZN6parser9eval_exp2ERd>:
     a2c:	ef 92       	push	r14
     a2e:	ff 92       	push	r15
     a30:	0f 93       	push	r16
     a32:	1f 93       	push	r17
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
     a38:	00 d0       	rcall	.+0      	; 0xa3a <_ZN6parser9eval_exp2ERd+0xe>
     a3a:	00 d0       	rcall	.+0      	; 0xa3c <_ZN6parser9eval_exp2ERd+0x10>
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	8c 01       	movw	r16, r24
     a42:	7b 01       	movw	r14, r22
     a44:	0e 94 37 07 	call	0xe6e	; 0xe6e <_ZN6parser9eval_exp3ERd>
     a48:	f8 01       	movw	r30, r16
     a4a:	82 81       	ldd	r24, Z+2	; 0x02
     a4c:	8b 32       	cpi	r24, 0x2B	; 43
     a4e:	e1 f0       	breq	.+56     	; 0xa88 <_ZN6parser9eval_exp2ERd+0x5c>
     a50:	8d 32       	cpi	r24, 0x2D	; 45
     a52:	a1 f5       	brne	.+104    	; 0xabc <_ZN6parser9eval_exp2ERd+0x90>
     a54:	c8 01       	movw	r24, r16
     a56:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     a5a:	be 01       	movw	r22, r28
     a5c:	6f 5f       	subi	r22, 0xFF	; 255
     a5e:	7f 4f       	sbci	r23, 0xFF	; 255
     a60:	c8 01       	movw	r24, r16
     a62:	0e 94 37 07 	call	0xe6e	; 0xe6e <_ZN6parser9eval_exp3ERd>
     a66:	29 81       	ldd	r18, Y+1	; 0x01
     a68:	3a 81       	ldd	r19, Y+2	; 0x02
     a6a:	4b 81       	ldd	r20, Y+3	; 0x03
     a6c:	5c 81       	ldd	r21, Y+4	; 0x04
     a6e:	f7 01       	movw	r30, r14
     a70:	60 81       	ld	r22, Z
     a72:	71 81       	ldd	r23, Z+1	; 0x01
     a74:	82 81       	ldd	r24, Z+2	; 0x02
     a76:	93 81       	ldd	r25, Z+3	; 0x03
     a78:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
     a7c:	f7 01       	movw	r30, r14
     a7e:	60 83       	st	Z, r22
     a80:	71 83       	std	Z+1, r23	; 0x01
     a82:	82 83       	std	Z+2, r24	; 0x02
     a84:	93 83       	std	Z+3, r25	; 0x03
     a86:	e0 cf       	rjmp	.-64     	; 0xa48 <_ZN6parser9eval_exp2ERd+0x1c>
     a88:	c8 01       	movw	r24, r16
     a8a:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     a8e:	be 01       	movw	r22, r28
     a90:	6f 5f       	subi	r22, 0xFF	; 255
     a92:	7f 4f       	sbci	r23, 0xFF	; 255
     a94:	c8 01       	movw	r24, r16
     a96:	0e 94 37 07 	call	0xe6e	; 0xe6e <_ZN6parser9eval_exp3ERd>
     a9a:	29 81       	ldd	r18, Y+1	; 0x01
     a9c:	3a 81       	ldd	r19, Y+2	; 0x02
     a9e:	4b 81       	ldd	r20, Y+3	; 0x03
     aa0:	5c 81       	ldd	r21, Y+4	; 0x04
     aa2:	f7 01       	movw	r30, r14
     aa4:	60 81       	ld	r22, Z
     aa6:	71 81       	ldd	r23, Z+1	; 0x01
     aa8:	82 81       	ldd	r24, Z+2	; 0x02
     aaa:	93 81       	ldd	r25, Z+3	; 0x03
     aac:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
     ab0:	f7 01       	movw	r30, r14
     ab2:	60 83       	st	Z, r22
     ab4:	71 83       	std	Z+1, r23	; 0x01
     ab6:	82 83       	std	Z+2, r24	; 0x02
     ab8:	93 83       	std	Z+3, r25	; 0x03
     aba:	c6 cf       	rjmp	.-116    	; 0xa48 <_ZN6parser9eval_exp2ERd+0x1c>
     abc:	0f 90       	pop	r0
     abe:	0f 90       	pop	r0
     ac0:	0f 90       	pop	r0
     ac2:	0f 90       	pop	r0
     ac4:	df 91       	pop	r29
     ac6:	cf 91       	pop	r28
     ac8:	1f 91       	pop	r17
     aca:	0f 91       	pop	r16
     acc:	ff 90       	pop	r15
     ace:	ef 90       	pop	r14
     ad0:	08 95       	ret

00000ad2 <_ZN6parser9eval_exp6ERd>:
     ad2:	df 92       	push	r13
     ad4:	ef 92       	push	r14
     ad6:	ff 92       	push	r15
     ad8:	0f 93       	push	r16
     ada:	1f 93       	push	r17
     adc:	cf 93       	push	r28
     ade:	df 93       	push	r29
     ae0:	cd b7       	in	r28, 0x3d	; 61
     ae2:	de b7       	in	r29, 0x3e	; 62
     ae4:	2f 97       	sbiw	r28, 0x0f	; 15
     ae6:	0f b6       	in	r0, 0x3f	; 63
     ae8:	f8 94       	cli
     aea:	de bf       	out	0x3e, r29	; 62
     aec:	0f be       	out	0x3f, r0	; 63
     aee:	cd bf       	out	0x3d, r28	; 61
     af0:	8c 01       	movw	r16, r24
     af2:	7b 01       	movw	r14, r22
     af4:	dc 01       	movw	r26, r24
     af6:	51 96       	adiw	r26, 0x11	; 17
     af8:	dc 90       	ld	r13, X
     afa:	b4 e0       	ldi	r27, 0x04	; 4
     afc:	db 12       	cpse	r13, r27
     afe:	0a c0       	rjmp	.+20     	; 0xb14 <_ZN6parser9eval_exp6ERd+0x42>
     b00:	bc 01       	movw	r22, r24
     b02:	6e 5f       	subi	r22, 0xFE	; 254
     b04:	7f 4f       	sbci	r23, 0xFF	; 255
     b06:	ce 01       	movw	r24, r28
     b08:	01 96       	adiw	r24, 0x01	; 1
     b0a:	0e 94 d9 1f 	call	0x3fb2	; 0x3fb2 <strcpy>
     b0e:	c8 01       	movw	r24, r16
     b10:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     b14:	d8 01       	movw	r26, r16
     b16:	12 96       	adiw	r26, 0x02	; 2
     b18:	ec 91       	ld	r30, X
     b1a:	e8 32       	cpi	r30, 0x28	; 40
     b1c:	09 f0       	breq	.+2      	; 0xb20 <_ZN6parser9eval_exp6ERd+0x4e>
     b1e:	f8 c0       	rjmp	.+496    	; 0xd10 <_ZN6parser9eval_exp6ERd+0x23e>
     b20:	c8 01       	movw	r24, r16
     b22:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     b26:	b7 01       	movw	r22, r14
     b28:	c8 01       	movw	r24, r16
     b2a:	0e 94 16 05 	call	0xa2c	; 0xa2c <_ZN6parser9eval_exp2ERd>
     b2e:	f8 01       	movw	r30, r16
     b30:	82 81       	ldd	r24, Z+2	; 0x02
     b32:	89 32       	cpi	r24, 0x29	; 41
     b34:	49 f0       	breq	.+18     	; 0xb48 <_ZN6parser9eval_exp6ERd+0x76>
     b36:	86 e0       	ldi	r24, 0x06	; 6
     b38:	e5 e1       	ldi	r30, 0x15	; 21
     b3a:	f1 e0       	ldi	r31, 0x01	; 1
     b3c:	d8 01       	movw	r26, r16
     b3e:	da 96       	adiw	r26, 0x3a	; 58
     b40:	01 90       	ld	r0, Z+
     b42:	0d 92       	st	X+, r0
     b44:	8a 95       	dec	r24
     b46:	e1 f7       	brne	.-8      	; 0xb40 <_ZN6parser9eval_exp6ERd+0x6e>
     b48:	f4 e0       	ldi	r31, 0x04	; 4
     b4a:	df 12       	cpse	r13, r31
     b4c:	dd c0       	rjmp	.+442    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     b4e:	60 e2       	ldi	r22, 0x20	; 32
     b50:	71 e0       	ldi	r23, 0x01	; 1
     b52:	ce 01       	movw	r24, r28
     b54:	01 96       	adiw	r24, 0x01	; 1
     b56:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     b5a:	89 2b       	or	r24, r25
     b5c:	69 f4       	brne	.+26     	; 0xb78 <_ZN6parser9eval_exp6ERd+0xa6>
     b5e:	d7 01       	movw	r26, r14
     b60:	6d 91       	ld	r22, X+
     b62:	7d 91       	ld	r23, X+
     b64:	8d 91       	ld	r24, X+
     b66:	9c 91       	ld	r25, X
     b68:	0e 94 d1 1e 	call	0x3da2	; 0x3da2 <sin>
     b6c:	f7 01       	movw	r30, r14
     b6e:	60 83       	st	Z, r22
     b70:	71 83       	std	Z+1, r23	; 0x01
     b72:	82 83       	std	Z+2, r24	; 0x02
     b74:	93 83       	std	Z+3, r25	; 0x03
     b76:	c8 c0       	rjmp	.+400    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     b78:	65 e2       	ldi	r22, 0x25	; 37
     b7a:	71 e0       	ldi	r23, 0x01	; 1
     b7c:	ce 01       	movw	r24, r28
     b7e:	01 96       	adiw	r24, 0x01	; 1
     b80:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     b84:	89 2b       	or	r24, r25
     b86:	69 f4       	brne	.+26     	; 0xba2 <_ZN6parser9eval_exp6ERd+0xd0>
     b88:	d7 01       	movw	r26, r14
     b8a:	6d 91       	ld	r22, X+
     b8c:	7d 91       	ld	r23, X+
     b8e:	8d 91       	ld	r24, X+
     b90:	9c 91       	ld	r25, X
     b92:	0e 94 ea 1a 	call	0x35d4	; 0x35d4 <cos>
     b96:	f7 01       	movw	r30, r14
     b98:	60 83       	st	Z, r22
     b9a:	71 83       	std	Z+1, r23	; 0x01
     b9c:	82 83       	std	Z+2, r24	; 0x02
     b9e:	93 83       	std	Z+3, r25	; 0x03
     ba0:	b3 c0       	rjmp	.+358    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     ba2:	6b e1       	ldi	r22, 0x1B	; 27
     ba4:	71 e0       	ldi	r23, 0x01	; 1
     ba6:	ce 01       	movw	r24, r28
     ba8:	01 96       	adiw	r24, 0x01	; 1
     baa:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     bae:	89 2b       	or	r24, r25
     bb0:	69 f4       	brne	.+26     	; 0xbcc <_ZN6parser9eval_exp6ERd+0xfa>
     bb2:	d7 01       	movw	r26, r14
     bb4:	6d 91       	ld	r22, X+
     bb6:	7d 91       	ld	r23, X+
     bb8:	8d 91       	ld	r24, X+
     bba:	9c 91       	ld	r25, X
     bbc:	0e 94 1f 1f 	call	0x3e3e	; 0x3e3e <tan>
     bc0:	f7 01       	movw	r30, r14
     bc2:	60 83       	st	Z, r22
     bc4:	71 83       	std	Z+1, r23	; 0x01
     bc6:	82 83       	std	Z+2, r24	; 0x02
     bc8:	93 83       	std	Z+3, r25	; 0x03
     bca:	9e c0       	rjmp	.+316    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     bcc:	6f e1       	ldi	r22, 0x1F	; 31
     bce:	71 e0       	ldi	r23, 0x01	; 1
     bd0:	ce 01       	movw	r24, r28
     bd2:	01 96       	adiw	r24, 0x01	; 1
     bd4:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     bd8:	89 2b       	or	r24, r25
     bda:	69 f4       	brne	.+26     	; 0xbf6 <_ZN6parser9eval_exp6ERd+0x124>
     bdc:	d7 01       	movw	r26, r14
     bde:	6d 91       	ld	r22, X+
     be0:	7d 91       	ld	r23, X+
     be2:	8d 91       	ld	r24, X+
     be4:	9c 91       	ld	r25, X
     be6:	0e 94 ca 1a 	call	0x3594	; 0x3594 <asin>
     bea:	f7 01       	movw	r30, r14
     bec:	60 83       	st	Z, r22
     bee:	71 83       	std	Z+1, r23	; 0x01
     bf0:	82 83       	std	Z+2, r24	; 0x02
     bf2:	93 83       	std	Z+3, r25	; 0x03
     bf4:	89 c0       	rjmp	.+274    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     bf6:	64 e2       	ldi	r22, 0x24	; 36
     bf8:	71 e0       	ldi	r23, 0x01	; 1
     bfa:	ce 01       	movw	r24, r28
     bfc:	01 96       	adiw	r24, 0x01	; 1
     bfe:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     c02:	89 2b       	or	r24, r25
     c04:	69 f4       	brne	.+26     	; 0xc20 <_ZN6parser9eval_exp6ERd+0x14e>
     c06:	d7 01       	movw	r26, r14
     c08:	6d 91       	ld	r22, X+
     c0a:	7d 91       	ld	r23, X+
     c0c:	8d 91       	ld	r24, X+
     c0e:	9c 91       	ld	r25, X
     c10:	0e 94 4c 1a 	call	0x3498	; 0x3498 <acos>
     c14:	f7 01       	movw	r30, r14
     c16:	60 83       	st	Z, r22
     c18:	71 83       	std	Z+1, r23	; 0x01
     c1a:	82 83       	std	Z+2, r24	; 0x02
     c1c:	93 83       	std	Z+3, r25	; 0x03
     c1e:	74 c0       	rjmp	.+232    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     c20:	69 e2       	ldi	r22, 0x29	; 41
     c22:	71 e0       	ldi	r23, 0x01	; 1
     c24:	ce 01       	movw	r24, r28
     c26:	01 96       	adiw	r24, 0x01	; 1
     c28:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     c2c:	89 2b       	or	r24, r25
     c2e:	69 f4       	brne	.+26     	; 0xc4a <_ZN6parser9eval_exp6ERd+0x178>
     c30:	d7 01       	movw	r26, r14
     c32:	6d 91       	ld	r22, X+
     c34:	7d 91       	ld	r23, X+
     c36:	8d 91       	ld	r24, X+
     c38:	9c 91       	ld	r25, X
     c3a:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <log>
     c3e:	f7 01       	movw	r30, r14
     c40:	60 83       	st	Z, r22
     c42:	71 83       	std	Z+1, r23	; 0x01
     c44:	82 83       	std	Z+2, r24	; 0x02
     c46:	93 83       	std	Z+3, r25	; 0x03
     c48:	5f c0       	rjmp	.+190    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     c4a:	6c e2       	ldi	r22, 0x2C	; 44
     c4c:	71 e0       	ldi	r23, 0x01	; 1
     c4e:	ce 01       	movw	r24, r28
     c50:	01 96       	adiw	r24, 0x01	; 1
     c52:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     c56:	89 2b       	or	r24, r25
     c58:	69 f4       	brne	.+26     	; 0xc74 <_ZN6parser9eval_exp6ERd+0x1a2>
     c5a:	d7 01       	movw	r26, r14
     c5c:	6d 91       	ld	r22, X+
     c5e:	7d 91       	ld	r23, X+
     c60:	8d 91       	ld	r24, X+
     c62:	9c 91       	ld	r25, X
     c64:	0e 94 64 1d 	call	0x3ac8	; 0x3ac8 <log10>
     c68:	f7 01       	movw	r30, r14
     c6a:	60 83       	st	Z, r22
     c6c:	71 83       	std	Z+1, r23	; 0x01
     c6e:	82 83       	std	Z+2, r24	; 0x02
     c70:	93 83       	std	Z+3, r25	; 0x03
     c72:	4a c0       	rjmp	.+148    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     c74:	60 e3       	ldi	r22, 0x30	; 48
     c76:	71 e0       	ldi	r23, 0x01	; 1
     c78:	ce 01       	movw	r24, r28
     c7a:	01 96       	adiw	r24, 0x01	; 1
     c7c:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     c80:	89 2b       	or	r24, r25
     c82:	69 f4       	brne	.+26     	; 0xc9e <_ZN6parser9eval_exp6ERd+0x1cc>
     c84:	d7 01       	movw	r26, r14
     c86:	6d 91       	ld	r22, X+
     c88:	7d 91       	ld	r23, X+
     c8a:	8d 91       	ld	r24, X+
     c8c:	9c 91       	ld	r25, X
     c8e:	0e 94 69 1b 	call	0x36d2	; 0x36d2 <exp>
     c92:	f7 01       	movw	r30, r14
     c94:	60 83       	st	Z, r22
     c96:	71 83       	std	Z+1, r23	; 0x01
     c98:	82 83       	std	Z+2, r24	; 0x02
     c9a:	93 83       	std	Z+3, r25	; 0x03
     c9c:	35 c0       	rjmp	.+106    	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     c9e:	64 e3       	ldi	r22, 0x34	; 52
     ca0:	71 e0       	ldi	r23, 0x01	; 1
     ca2:	ce 01       	movw	r24, r28
     ca4:	01 96       	adiw	r24, 0x01	; 1
     ca6:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     caa:	89 2b       	or	r24, r25
     cac:	69 f4       	brne	.+26     	; 0xcc8 <_ZN6parser9eval_exp6ERd+0x1f6>
     cae:	d7 01       	movw	r26, r14
     cb0:	6d 91       	ld	r22, X+
     cb2:	7d 91       	ld	r23, X+
     cb4:	8d 91       	ld	r24, X+
     cb6:	9c 91       	ld	r25, X
     cb8:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <sqrt>
     cbc:	f7 01       	movw	r30, r14
     cbe:	60 83       	st	Z, r22
     cc0:	71 83       	std	Z+1, r23	; 0x01
     cc2:	82 83       	std	Z+2, r24	; 0x02
     cc4:	93 83       	std	Z+3, r25	; 0x03
     cc6:	20 c0       	rjmp	.+64     	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     cc8:	69 e3       	ldi	r22, 0x39	; 57
     cca:	71 e0       	ldi	r23, 0x01	; 1
     ccc:	ce 01       	movw	r24, r28
     cce:	01 96       	adiw	r24, 0x01	; 1
     cd0:	0e 94 d0 1f 	call	0x3fa0	; 0x3fa0 <strcmp>
     cd4:	89 2b       	or	r24, r25
     cd6:	79 f4       	brne	.+30     	; 0xcf6 <_ZN6parser9eval_exp6ERd+0x224>
     cd8:	d7 01       	movw	r26, r14
     cda:	6d 91       	ld	r22, X+
     cdc:	7d 91       	ld	r23, X+
     cde:	8d 91       	ld	r24, X+
     ce0:	9c 91       	ld	r25, X
     ce2:	9b 01       	movw	r18, r22
     ce4:	ac 01       	movw	r20, r24
     ce6:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
     cea:	f7 01       	movw	r30, r14
     cec:	60 83       	st	Z, r22
     cee:	71 83       	std	Z+1, r23	; 0x01
     cf0:	82 83       	std	Z+2, r24	; 0x02
     cf2:	93 83       	std	Z+3, r25	; 0x03
     cf4:	09 c0       	rjmp	.+18     	; 0xd08 <_ZN6parser9eval_exp6ERd+0x236>
     cf6:	86 e0       	ldi	r24, 0x06	; 6
     cf8:	e5 e1       	ldi	r30, 0x15	; 21
     cfa:	f1 e0       	ldi	r31, 0x01	; 1
     cfc:	d8 01       	movw	r26, r16
     cfe:	da 96       	adiw	r26, 0x3a	; 58
     d00:	01 90       	ld	r0, Z+
     d02:	0d 92       	st	X+, r0
     d04:	8a 95       	dec	r24
     d06:	e1 f7       	brne	.-8      	; 0xd00 <_ZN6parser9eval_exp6ERd+0x22e>
     d08:	c8 01       	movw	r24, r16
     d0a:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     d0e:	35 c0       	rjmp	.+106    	; 0xd7a <_ZN6parser9eval_exp6ERd+0x2a8>
     d10:	d8 01       	movw	r26, r16
     d12:	51 96       	adiw	r26, 0x11	; 17
     d14:	8c 91       	ld	r24, X
     d16:	82 30       	cpi	r24, 0x02	; 2
     d18:	19 f0       	breq	.+6      	; 0xd20 <_ZN6parser9eval_exp6ERd+0x24e>
     d1a:	83 30       	cpi	r24, 0x03	; 3
     d1c:	b9 f0       	breq	.+46     	; 0xd4c <_ZN6parser9eval_exp6ERd+0x27a>
     d1e:	24 c0       	rjmp	.+72     	; 0xd68 <_ZN6parser9eval_exp6ERd+0x296>
     d20:	f0 e0       	ldi	r31, 0x00	; 0
     d22:	e1 54       	subi	r30, 0x41	; 65
     d24:	f1 09       	sbc	r31, r1
     d26:	ee 0f       	add	r30, r30
     d28:	ff 1f       	adc	r31, r31
     d2a:	ee 0f       	add	r30, r30
     d2c:	ff 1f       	adc	r31, r31
     d2e:	e0 0f       	add	r30, r16
     d30:	f1 1f       	adc	r31, r17
     d32:	82 89       	ldd	r24, Z+18	; 0x12
     d34:	93 89       	ldd	r25, Z+19	; 0x13
     d36:	a4 89       	ldd	r26, Z+20	; 0x14
     d38:	b5 89       	ldd	r27, Z+21	; 0x15
     d3a:	f7 01       	movw	r30, r14
     d3c:	80 83       	st	Z, r24
     d3e:	91 83       	std	Z+1, r25	; 0x01
     d40:	a2 83       	std	Z+2, r26	; 0x02
     d42:	b3 83       	std	Z+3, r27	; 0x03
     d44:	c8 01       	movw	r24, r16
     d46:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     d4a:	17 c0       	rjmp	.+46     	; 0xd7a <_ZN6parser9eval_exp6ERd+0x2a8>
     d4c:	c8 01       	movw	r24, r16
     d4e:	02 96       	adiw	r24, 0x02	; 2
     d50:	0e 94 9a 1f 	call	0x3f34	; 0x3f34 <atof>
     d54:	d7 01       	movw	r26, r14
     d56:	6d 93       	st	X+, r22
     d58:	7d 93       	st	X+, r23
     d5a:	8d 93       	st	X+, r24
     d5c:	9c 93       	st	X, r25
     d5e:	13 97       	sbiw	r26, 0x03	; 3
     d60:	c8 01       	movw	r24, r16
     d62:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     d66:	09 c0       	rjmp	.+18     	; 0xd7a <_ZN6parser9eval_exp6ERd+0x2a8>
     d68:	d8 01       	movw	r26, r16
     d6a:	da 96       	adiw	r26, 0x3a	; 58
     d6c:	86 e0       	ldi	r24, 0x06	; 6
     d6e:	e5 e1       	ldi	r30, 0x15	; 21
     d70:	f1 e0       	ldi	r31, 0x01	; 1
     d72:	01 90       	ld	r0, Z+
     d74:	0d 92       	st	X+, r0
     d76:	8a 95       	dec	r24
     d78:	e1 f7       	brne	.-8      	; 0xd72 <_ZN6parser9eval_exp6ERd+0x2a0>
     d7a:	2f 96       	adiw	r28, 0x0f	; 15
     d7c:	0f b6       	in	r0, 0x3f	; 63
     d7e:	f8 94       	cli
     d80:	de bf       	out	0x3e, r29	; 62
     d82:	0f be       	out	0x3f, r0	; 63
     d84:	cd bf       	out	0x3d, r28	; 61
     d86:	df 91       	pop	r29
     d88:	cf 91       	pop	r28
     d8a:	1f 91       	pop	r17
     d8c:	0f 91       	pop	r16
     d8e:	ff 90       	pop	r15
     d90:	ef 90       	pop	r14
     d92:	df 90       	pop	r13
     d94:	08 95       	ret

00000d96 <_ZN6parser9eval_exp5ERd>:
     d96:	0f 93       	push	r16
     d98:	1f 93       	push	r17
     d9a:	cf 93       	push	r28
     d9c:	df 93       	push	r29
     d9e:	ec 01       	movw	r28, r24
     da0:	8b 01       	movw	r16, r22
     da2:	89 89       	ldd	r24, Y+17	; 0x11
     da4:	81 30       	cpi	r24, 0x01	; 1
     da6:	19 f4       	brne	.+6      	; 0xdae <_ZN6parser9eval_exp5ERd+0x18>
     da8:	8a 81       	ldd	r24, Y+2	; 0x02
     daa:	8b 32       	cpi	r24, 0x2B	; 43
     dac:	41 f0       	breq	.+16     	; 0xdbe <_ZN6parser9eval_exp5ERd+0x28>
     dae:	8a 81       	ldd	r24, Y+2	; 0x02
     db0:	8d 32       	cpi	r24, 0x2D	; 45
     db2:	69 f0       	breq	.+26     	; 0xdce <_ZN6parser9eval_exp5ERd+0x38>
     db4:	b8 01       	movw	r22, r16
     db6:	ce 01       	movw	r24, r28
     db8:	0e 94 69 05 	call	0xad2	; 0xad2 <_ZN6parser9eval_exp6ERd>
     dbc:	19 c0       	rjmp	.+50     	; 0xdf0 <_ZN6parser9eval_exp5ERd+0x5a>
     dbe:	ce 01       	movw	r24, r28
     dc0:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     dc4:	b8 01       	movw	r22, r16
     dc6:	ce 01       	movw	r24, r28
     dc8:	0e 94 69 05 	call	0xad2	; 0xad2 <_ZN6parser9eval_exp6ERd>
     dcc:	11 c0       	rjmp	.+34     	; 0xdf0 <_ZN6parser9eval_exp5ERd+0x5a>
     dce:	ce 01       	movw	r24, r28
     dd0:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     dd4:	b8 01       	movw	r22, r16
     dd6:	ce 01       	movw	r24, r28
     dd8:	0e 94 69 05 	call	0xad2	; 0xad2 <_ZN6parser9eval_exp6ERd>
     ddc:	f8 01       	movw	r30, r16
     dde:	80 81       	ld	r24, Z
     de0:	91 81       	ldd	r25, Z+1	; 0x01
     de2:	a2 81       	ldd	r26, Z+2	; 0x02
     de4:	b3 81       	ldd	r27, Z+3	; 0x03
     de6:	b0 58       	subi	r27, 0x80	; 128
     de8:	80 83       	st	Z, r24
     dea:	91 83       	std	Z+1, r25	; 0x01
     dec:	a2 83       	std	Z+2, r26	; 0x02
     dee:	b3 83       	std	Z+3, r27	; 0x03
     df0:	df 91       	pop	r29
     df2:	cf 91       	pop	r28
     df4:	1f 91       	pop	r17
     df6:	0f 91       	pop	r16
     df8:	08 95       	ret

00000dfa <_ZN6parser9eval_exp4ERd>:
     dfa:	ef 92       	push	r14
     dfc:	ff 92       	push	r15
     dfe:	0f 93       	push	r16
     e00:	1f 93       	push	r17
     e02:	cf 93       	push	r28
     e04:	df 93       	push	r29
     e06:	00 d0       	rcall	.+0      	; 0xe08 <_ZN6parser9eval_exp4ERd+0xe>
     e08:	00 d0       	rcall	.+0      	; 0xe0a <_ZN6parser9eval_exp4ERd+0x10>
     e0a:	cd b7       	in	r28, 0x3d	; 61
     e0c:	de b7       	in	r29, 0x3e	; 62
     e0e:	8c 01       	movw	r16, r24
     e10:	7b 01       	movw	r14, r22
     e12:	0e 94 cb 06 	call	0xd96	; 0xd96 <_ZN6parser9eval_exp5ERd>
     e16:	f8 01       	movw	r30, r16
     e18:	82 81       	ldd	r24, Z+2	; 0x02
     e1a:	8e 35       	cpi	r24, 0x5E	; 94
     e1c:	e9 f4       	brne	.+58     	; 0xe58 <_ZN6parser9eval_exp4ERd+0x5e>
     e1e:	c8 01       	movw	r24, r16
     e20:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     e24:	be 01       	movw	r22, r28
     e26:	6f 5f       	subi	r22, 0xFF	; 255
     e28:	7f 4f       	sbci	r23, 0xFF	; 255
     e2a:	c8 01       	movw	r24, r16
     e2c:	0e 94 cb 06 	call	0xd96	; 0xd96 <_ZN6parser9eval_exp5ERd>
     e30:	29 81       	ldd	r18, Y+1	; 0x01
     e32:	3a 81       	ldd	r19, Y+2	; 0x02
     e34:	4b 81       	ldd	r20, Y+3	; 0x03
     e36:	5c 81       	ldd	r21, Y+4	; 0x04
     e38:	f7 01       	movw	r30, r14
     e3a:	60 81       	ld	r22, Z
     e3c:	71 81       	ldd	r23, Z+1	; 0x01
     e3e:	82 81       	ldd	r24, Z+2	; 0x02
     e40:	93 81       	ldd	r25, Z+3	; 0x03
     e42:	0e 94 5d 1e 	call	0x3cba	; 0x3cba <pow>
     e46:	f7 01       	movw	r30, r14
     e48:	60 83       	st	Z, r22
     e4a:	71 83       	std	Z+1, r23	; 0x01
     e4c:	82 83       	std	Z+2, r24	; 0x02
     e4e:	93 83       	std	Z+3, r25	; 0x03
     e50:	f8 01       	movw	r30, r16
     e52:	82 81       	ldd	r24, Z+2	; 0x02
     e54:	8e 35       	cpi	r24, 0x5E	; 94
     e56:	19 f3       	breq	.-58     	; 0xe1e <_ZN6parser9eval_exp4ERd+0x24>
     e58:	0f 90       	pop	r0
     e5a:	0f 90       	pop	r0
     e5c:	0f 90       	pop	r0
     e5e:	0f 90       	pop	r0
     e60:	df 91       	pop	r29
     e62:	cf 91       	pop	r28
     e64:	1f 91       	pop	r17
     e66:	0f 91       	pop	r16
     e68:	ff 90       	pop	r15
     e6a:	ef 90       	pop	r14
     e6c:	08 95       	ret

00000e6e <_ZN6parser9eval_exp3ERd>:
     e6e:	ef 92       	push	r14
     e70:	ff 92       	push	r15
     e72:	0f 93       	push	r16
     e74:	1f 93       	push	r17
     e76:	cf 93       	push	r28
     e78:	df 93       	push	r29
     e7a:	00 d0       	rcall	.+0      	; 0xe7c <_ZN6parser9eval_exp3ERd+0xe>
     e7c:	00 d0       	rcall	.+0      	; 0xe7e <_ZN6parser9eval_exp3ERd+0x10>
     e7e:	cd b7       	in	r28, 0x3d	; 61
     e80:	de b7       	in	r29, 0x3e	; 62
     e82:	8c 01       	movw	r16, r24
     e84:	7b 01       	movw	r14, r22
     e86:	0e 94 fd 06 	call	0xdfa	; 0xdfa <_ZN6parser9eval_exp4ERd>
     e8a:	f8 01       	movw	r30, r16
     e8c:	82 81       	ldd	r24, Z+2	; 0x02
     e8e:	8a 32       	cpi	r24, 0x2A	; 42
     e90:	19 f0       	breq	.+6      	; 0xe98 <_ZN6parser9eval_exp3ERd+0x2a>
     e92:	8f 32       	cpi	r24, 0x2F	; 47
     e94:	d9 f0       	breq	.+54     	; 0xecc <_ZN6parser9eval_exp3ERd+0x5e>
     e96:	34 c0       	rjmp	.+104    	; 0xf00 <_ZN6parser9eval_exp3ERd+0x92>
     e98:	c8 01       	movw	r24, r16
     e9a:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     e9e:	be 01       	movw	r22, r28
     ea0:	6f 5f       	subi	r22, 0xFF	; 255
     ea2:	7f 4f       	sbci	r23, 0xFF	; 255
     ea4:	c8 01       	movw	r24, r16
     ea6:	0e 94 fd 06 	call	0xdfa	; 0xdfa <_ZN6parser9eval_exp4ERd>
     eaa:	29 81       	ldd	r18, Y+1	; 0x01
     eac:	3a 81       	ldd	r19, Y+2	; 0x02
     eae:	4b 81       	ldd	r20, Y+3	; 0x03
     eb0:	5c 81       	ldd	r21, Y+4	; 0x04
     eb2:	f7 01       	movw	r30, r14
     eb4:	60 81       	ld	r22, Z
     eb6:	71 81       	ldd	r23, Z+1	; 0x01
     eb8:	82 81       	ldd	r24, Z+2	; 0x02
     eba:	93 81       	ldd	r25, Z+3	; 0x03
     ebc:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
     ec0:	f7 01       	movw	r30, r14
     ec2:	60 83       	st	Z, r22
     ec4:	71 83       	std	Z+1, r23	; 0x01
     ec6:	82 83       	std	Z+2, r24	; 0x02
     ec8:	93 83       	std	Z+3, r25	; 0x03
     eca:	df cf       	rjmp	.-66     	; 0xe8a <_ZN6parser9eval_exp3ERd+0x1c>
     ecc:	c8 01       	movw	r24, r16
     ece:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     ed2:	be 01       	movw	r22, r28
     ed4:	6f 5f       	subi	r22, 0xFF	; 255
     ed6:	7f 4f       	sbci	r23, 0xFF	; 255
     ed8:	c8 01       	movw	r24, r16
     eda:	0e 94 fd 06 	call	0xdfa	; 0xdfa <_ZN6parser9eval_exp4ERd>
     ede:	29 81       	ldd	r18, Y+1	; 0x01
     ee0:	3a 81       	ldd	r19, Y+2	; 0x02
     ee2:	4b 81       	ldd	r20, Y+3	; 0x03
     ee4:	5c 81       	ldd	r21, Y+4	; 0x04
     ee6:	f7 01       	movw	r30, r14
     ee8:	60 81       	ld	r22, Z
     eea:	71 81       	ldd	r23, Z+1	; 0x01
     eec:	82 81       	ldd	r24, Z+2	; 0x02
     eee:	93 81       	ldd	r25, Z+3	; 0x03
     ef0:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
     ef4:	f7 01       	movw	r30, r14
     ef6:	60 83       	st	Z, r22
     ef8:	71 83       	std	Z+1, r23	; 0x01
     efa:	82 83       	std	Z+2, r24	; 0x02
     efc:	93 83       	std	Z+3, r25	; 0x03
     efe:	c5 cf       	rjmp	.-118    	; 0xe8a <_ZN6parser9eval_exp3ERd+0x1c>
     f00:	0f 90       	pop	r0
     f02:	0f 90       	pop	r0
     f04:	0f 90       	pop	r0
     f06:	0f 90       	pop	r0
     f08:	df 91       	pop	r29
     f0a:	cf 91       	pop	r28
     f0c:	1f 91       	pop	r17
     f0e:	0f 91       	pop	r16
     f10:	ff 90       	pop	r15
     f12:	ef 90       	pop	r14
     f14:	08 95       	ret

00000f16 <_ZN6parser9eval_exp1ERd>:
     f16:	8f 92       	push	r8
     f18:	9f 92       	push	r9
     f1a:	bf 92       	push	r11
     f1c:	cf 92       	push	r12
     f1e:	df 92       	push	r13
     f20:	ef 92       	push	r14
     f22:	ff 92       	push	r15
     f24:	0f 93       	push	r16
     f26:	1f 93       	push	r17
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	cd b7       	in	r28, 0x3d	; 61
     f2e:	de b7       	in	r29, 0x3e	; 62
     f30:	2f 97       	sbiw	r28, 0x0f	; 15
     f32:	0f b6       	in	r0, 0x3f	; 63
     f34:	f8 94       	cli
     f36:	de bf       	out	0x3e, r29	; 62
     f38:	0f be       	out	0x3f, r0	; 63
     f3a:	cd bf       	out	0x3d, r28	; 61
     f3c:	8c 01       	movw	r16, r24
     f3e:	7b 01       	movw	r14, r22
     f40:	fc 01       	movw	r30, r24
     f42:	81 89       	ldd	r24, Z+17	; 0x11
     f44:	82 30       	cpi	r24, 0x02	; 2
     f46:	c9 f5       	brne	.+114    	; 0xfba <_ZN6parser9eval_exp1ERd+0xa4>
     f48:	81 90       	ld	r8, Z+
     f4a:	91 90       	ld	r9, Z+
     f4c:	6f 01       	movw	r12, r30
     f4e:	bf 01       	movw	r22, r30
     f50:	ce 01       	movw	r24, r28
     f52:	01 96       	adiw	r24, 0x01	; 1
     f54:	0e 94 d9 1f 	call	0x3fb2	; 0x3fb2 <strcpy>
     f58:	f8 01       	movw	r30, r16
     f5a:	b2 80       	ldd	r11, Z+2	; 0x02
     f5c:	c8 01       	movw	r24, r16
     f5e:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     f62:	f8 01       	movw	r30, r16
     f64:	82 81       	ldd	r24, Z+2	; 0x02
     f66:	8d 33       	cpi	r24, 0x3D	; 61
     f68:	61 f0       	breq	.+24     	; 0xf82 <_ZN6parser9eval_exp1ERd+0x6c>
     f6a:	91 82       	std	Z+1, r9	; 0x01
     f6c:	80 82       	st	Z, r8
     f6e:	be 01       	movw	r22, r28
     f70:	6f 5f       	subi	r22, 0xFF	; 255
     f72:	7f 4f       	sbci	r23, 0xFF	; 255
     f74:	c6 01       	movw	r24, r12
     f76:	0e 94 d9 1f 	call	0x3fb2	; 0x3fb2 <strcpy>
     f7a:	82 e0       	ldi	r24, 0x02	; 2
     f7c:	f8 01       	movw	r30, r16
     f7e:	81 8b       	std	Z+17, r24	; 0x11
     f80:	1c c0       	rjmp	.+56     	; 0xfba <_ZN6parser9eval_exp1ERd+0xa4>
     f82:	c8 01       	movw	r24, r16
     f84:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
     f88:	b7 01       	movw	r22, r14
     f8a:	c8 01       	movw	r24, r16
     f8c:	0e 94 16 05 	call	0xa2c	; 0xa2c <_ZN6parser9eval_exp2ERd>
     f90:	f7 01       	movw	r30, r14
     f92:	40 81       	ld	r20, Z
     f94:	51 81       	ldd	r21, Z+1	; 0x01
     f96:	62 81       	ldd	r22, Z+2	; 0x02
     f98:	73 81       	ldd	r23, Z+3	; 0x03
     f9a:	8b 2d       	mov	r24, r11
     f9c:	90 e0       	ldi	r25, 0x00	; 0
     f9e:	81 54       	subi	r24, 0x41	; 65
     fa0:	91 09       	sbc	r25, r1
     fa2:	88 0f       	add	r24, r24
     fa4:	99 1f       	adc	r25, r25
     fa6:	88 0f       	add	r24, r24
     fa8:	99 1f       	adc	r25, r25
     faa:	f8 01       	movw	r30, r16
     fac:	e8 0f       	add	r30, r24
     fae:	f9 1f       	adc	r31, r25
     fb0:	42 8b       	std	Z+18, r20	; 0x12
     fb2:	53 8b       	std	Z+19, r21	; 0x13
     fb4:	64 8b       	std	Z+20, r22	; 0x14
     fb6:	75 8b       	std	Z+21, r23	; 0x15
     fb8:	04 c0       	rjmp	.+8      	; 0xfc2 <_ZN6parser9eval_exp1ERd+0xac>
     fba:	b7 01       	movw	r22, r14
     fbc:	c8 01       	movw	r24, r16
     fbe:	0e 94 16 05 	call	0xa2c	; 0xa2c <_ZN6parser9eval_exp2ERd>
     fc2:	2f 96       	adiw	r28, 0x0f	; 15
     fc4:	0f b6       	in	r0, 0x3f	; 63
     fc6:	f8 94       	cli
     fc8:	de bf       	out	0x3e, r29	; 62
     fca:	0f be       	out	0x3f, r0	; 63
     fcc:	cd bf       	out	0x3d, r28	; 61
     fce:	df 91       	pop	r29
     fd0:	cf 91       	pop	r28
     fd2:	1f 91       	pop	r17
     fd4:	0f 91       	pop	r16
     fd6:	ff 90       	pop	r15
     fd8:	ef 90       	pop	r14
     fda:	df 90       	pop	r13
     fdc:	cf 90       	pop	r12
     fde:	bf 90       	pop	r11
     fe0:	9f 90       	pop	r9
     fe2:	8f 90       	pop	r8
     fe4:	08 95       	ret

00000fe6 <_ZN6parser8eval_expEPc>:
     fe6:	0f 93       	push	r16
     fe8:	1f 93       	push	r17
     fea:	cf 93       	push	r28
     fec:	df 93       	push	r29
     fee:	00 d0       	rcall	.+0      	; 0xff0 <_ZN6parser8eval_expEPc+0xa>
     ff0:	00 d0       	rcall	.+0      	; 0xff2 <_ZN6parser8eval_expEPc+0xc>
     ff2:	cd b7       	in	r28, 0x3d	; 61
     ff4:	de b7       	in	r29, 0x3e	; 62
     ff6:	8c 01       	movw	r16, r24
     ff8:	fc 01       	movw	r30, r24
     ffa:	12 ae       	std	Z+58, r1	; 0x3a
     ffc:	71 83       	std	Z+1, r23	; 0x01
     ffe:	60 83       	st	Z, r22
    1000:	0e 94 4b 04 	call	0x896	; 0x896 <_ZN6parser9get_tokenEv>
    1004:	f8 01       	movw	r30, r16
    1006:	82 81       	ldd	r24, Z+2	; 0x02
    1008:	81 11       	cpse	r24, r1
    100a:	0d c0       	rjmp	.+26     	; 0x1026 <_ZN6parser8eval_expEPc+0x40>
    100c:	d8 01       	movw	r26, r16
    100e:	da 96       	adiw	r26, 0x3a	; 58
    1010:	86 e0       	ldi	r24, 0x06	; 6
    1012:	e5 e1       	ldi	r30, 0x15	; 21
    1014:	f1 e0       	ldi	r31, 0x01	; 1
    1016:	01 90       	ld	r0, Z+
    1018:	0d 92       	st	X+, r0
    101a:	8a 95       	dec	r24
    101c:	e1 f7       	brne	.-8      	; 0x1016 <_ZN6parser8eval_expEPc+0x30>
    101e:	60 e0       	ldi	r22, 0x00	; 0
    1020:	70 e0       	ldi	r23, 0x00	; 0
    1022:	cb 01       	movw	r24, r22
    1024:	17 c0       	rjmp	.+46     	; 0x1054 <_ZN6parser8eval_expEPc+0x6e>
    1026:	be 01       	movw	r22, r28
    1028:	6f 5f       	subi	r22, 0xFF	; 255
    102a:	7f 4f       	sbci	r23, 0xFF	; 255
    102c:	c8 01       	movw	r24, r16
    102e:	0e 94 8b 07 	call	0xf16	; 0xf16 <_ZN6parser9eval_exp1ERd>
    1032:	f8 01       	movw	r30, r16
    1034:	82 81       	ldd	r24, Z+2	; 0x02
    1036:	88 23       	and	r24, r24
    1038:	49 f0       	breq	.+18     	; 0x104c <_ZN6parser8eval_expEPc+0x66>
    103a:	d8 01       	movw	r26, r16
    103c:	da 96       	adiw	r26, 0x3a	; 58
    103e:	86 e0       	ldi	r24, 0x06	; 6
    1040:	e5 e1       	ldi	r30, 0x15	; 21
    1042:	f1 e0       	ldi	r31, 0x01	; 1
    1044:	01 90       	ld	r0, Z+
    1046:	0d 92       	st	X+, r0
    1048:	8a 95       	dec	r24
    104a:	e1 f7       	brne	.-8      	; 0x1044 <_ZN6parser8eval_expEPc+0x5e>
    104c:	69 81       	ldd	r22, Y+1	; 0x01
    104e:	7a 81       	ldd	r23, Y+2	; 0x02
    1050:	8b 81       	ldd	r24, Y+3	; 0x03
    1052:	9c 81       	ldd	r25, Y+4	; 0x04
    1054:	0f 90       	pop	r0
    1056:	0f 90       	pop	r0
    1058:	0f 90       	pop	r0
    105a:	0f 90       	pop	r0
    105c:	df 91       	pop	r29
    105e:	cf 91       	pop	r28
    1060:	1f 91       	pop	r17
    1062:	0f 91       	pop	r16
    1064:	08 95       	ret

00001066 <_Z6appendPciS_>:
    1066:	9c 01       	movw	r18, r24
    1068:	fa 01       	movw	r30, r20
    106a:	90 81       	ld	r25, Z
    106c:	99 23       	and	r25, r25
    106e:	51 f0       	breq	.+20     	; 0x1084 <_Z6appendPciS_+0x1e>
    1070:	d9 01       	movw	r26, r18
    1072:	a6 0f       	add	r26, r22
    1074:	b7 1f       	adc	r27, r23
    1076:	31 96       	adiw	r30, 0x01	; 1
    1078:	9d 93       	st	X+, r25
    107a:	6f 5f       	subi	r22, 0xFF	; 255
    107c:	7f 4f       	sbci	r23, 0xFF	; 255
    107e:	91 91       	ld	r25, Z+
    1080:	91 11       	cpse	r25, r1
    1082:	fa cf       	rjmp	.-12     	; 0x1078 <_Z6appendPciS_+0x12>
    1084:	f9 01       	movw	r30, r18
    1086:	e6 0f       	add	r30, r22
    1088:	f7 1f       	adc	r31, r23
    108a:	10 82       	st	Z, r1
    108c:	08 95       	ret

0000108e <_Z17evaluate_functionPcd>:
    108e:	4f 92       	push	r4
    1090:	5f 92       	push	r5
    1092:	6f 92       	push	r6
    1094:	7f 92       	push	r7
    1096:	af 92       	push	r10
    1098:	bf 92       	push	r11
    109a:	cf 92       	push	r12
    109c:	df 92       	push	r13
    109e:	ef 92       	push	r14
    10a0:	ff 92       	push	r15
    10a2:	0f 93       	push	r16
    10a4:	1f 93       	push	r17
    10a6:	cf 93       	push	r28
    10a8:	df 93       	push	r29
    10aa:	fc 01       	movw	r30, r24
    10ac:	2a 01       	movw	r4, r20
    10ae:	3b 01       	movw	r6, r22
    10b0:	90 81       	ld	r25, Z
    10b2:	99 23       	and	r25, r25
    10b4:	09 f4       	brne	.+2      	; 0x10b8 <_Z17evaluate_functionPcd+0x2a>
    10b6:	3f c0       	rjmp	.+126    	; 0x1136 <_Z17evaluate_functionPcd+0xa8>
    10b8:	7f 01       	movw	r14, r30
    10ba:	8f ef       	ldi	r24, 0xFF	; 255
    10bc:	e8 1a       	sub	r14, r24
    10be:	f8 0a       	sbc	r15, r24
    10c0:	0f 2e       	mov	r0, r31
    10c2:	f9 eb       	ldi	r31, 0xB9	; 185
    10c4:	af 2e       	mov	r10, r31
    10c6:	f2 e0       	ldi	r31, 0x02	; 2
    10c8:	bf 2e       	mov	r11, r31
    10ca:	f0 2d       	mov	r31, r0
    10cc:	cc 24       	eor	r12, r12
    10ce:	ca 94       	dec	r12
    10d0:	dc 2c       	mov	r13, r12
    10d2:	c0 e0       	ldi	r28, 0x00	; 0
    10d4:	d0 e0       	ldi	r29, 0x00	; 0
    10d6:	98 37       	cpi	r25, 0x78	; 120
    10d8:	e9 f4       	brne	.+58     	; 0x1114 <_Z17evaluate_functionPcd+0x86>
    10da:	dd 20       	and	r13, r13
    10dc:	24 f0       	brlt	.+8      	; 0x10e6 <_Z17evaluate_functionPcd+0x58>
    10de:	f5 01       	movw	r30, r10
    10e0:	80 81       	ld	r24, Z
    10e2:	85 36       	cpi	r24, 0x65	; 101
    10e4:	b9 f0       	breq	.+46     	; 0x1114 <_Z17evaluate_functionPcd+0x86>
    10e6:	0b ea       	ldi	r16, 0xAB	; 171
    10e8:	12 e0       	ldi	r17, 0x02	; 2
    10ea:	28 e0       	ldi	r18, 0x08	; 8
    10ec:	41 e0       	ldi	r20, 0x01	; 1
    10ee:	c3 01       	movw	r24, r6
    10f0:	b2 01       	movw	r22, r4
    10f2:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <dtostrf>
    10f6:	90 91 ab 02 	lds	r25, 0x02AB	; 0x8002ab <tmp>
    10fa:	99 23       	and	r25, r25
    10fc:	81 f0       	breq	.+32     	; 0x111e <_Z17evaluate_functionPcd+0x90>
    10fe:	de 01       	movw	r26, r28
    1100:	a6 54       	subi	r26, 0x46	; 70
    1102:	bd 4f       	sbci	r27, 0xFD	; 253
    1104:	ec ea       	ldi	r30, 0xAC	; 172
    1106:	f2 e0       	ldi	r31, 0x02	; 2
    1108:	9d 93       	st	X+, r25
    110a:	21 96       	adiw	r28, 0x01	; 1
    110c:	91 91       	ld	r25, Z+
    110e:	91 11       	cpse	r25, r1
    1110:	fb cf       	rjmp	.-10     	; 0x1108 <_Z17evaluate_functionPcd+0x7a>
    1112:	05 c0       	rjmp	.+10     	; 0x111e <_Z17evaluate_functionPcd+0x90>
    1114:	fe 01       	movw	r30, r28
    1116:	e6 54       	subi	r30, 0x46	; 70
    1118:	fd 4f       	sbci	r31, 0xFD	; 253
    111a:	90 83       	st	Z, r25
    111c:	21 96       	adiw	r28, 0x01	; 1
    111e:	f7 01       	movw	r30, r14
    1120:	91 91       	ld	r25, Z+
    1122:	7f 01       	movw	r14, r30
    1124:	ff ef       	ldi	r31, 0xFF	; 255
    1126:	cf 1a       	sub	r12, r31
    1128:	df 0a       	sbc	r13, r31
    112a:	8f ef       	ldi	r24, 0xFF	; 255
    112c:	a8 1a       	sub	r10, r24
    112e:	b8 0a       	sbc	r11, r24
    1130:	91 11       	cpse	r25, r1
    1132:	d1 cf       	rjmp	.-94     	; 0x10d6 <_Z17evaluate_functionPcd+0x48>
    1134:	02 c0       	rjmp	.+4      	; 0x113a <_Z17evaluate_functionPcd+0xac>
    1136:	c0 e0       	ldi	r28, 0x00	; 0
    1138:	d0 e0       	ldi	r29, 0x00	; 0
    113a:	c6 54       	subi	r28, 0x46	; 70
    113c:	dd 4f       	sbci	r29, 0xFD	; 253
    113e:	18 82       	st	Y, r1
    1140:	6a eb       	ldi	r22, 0xBA	; 186
    1142:	72 e0       	ldi	r23, 0x02	; 2
    1144:	82 e6       	ldi	r24, 0x62	; 98
    1146:	92 e0       	ldi	r25, 0x02	; 2
    1148:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    114c:	df 91       	pop	r29
    114e:	cf 91       	pop	r28
    1150:	1f 91       	pop	r17
    1152:	0f 91       	pop	r16
    1154:	ff 90       	pop	r15
    1156:	ef 90       	pop	r14
    1158:	df 90       	pop	r13
    115a:	cf 90       	pop	r12
    115c:	bf 90       	pop	r11
    115e:	af 90       	pop	r10
    1160:	7f 90       	pop	r7
    1162:	6f 90       	pop	r6
    1164:	5f 90       	pop	r5
    1166:	4f 90       	pop	r4
    1168:	08 95       	ret

0000116a <_Z16int_number_inputi>:
    116a:	df 92       	push	r13
    116c:	ef 92       	push	r14
    116e:	ff 92       	push	r15
    1170:	0f 93       	push	r16
    1172:	1f 93       	push	r17
    1174:	cf 93       	push	r28
    1176:	df 93       	push	r29
    1178:	00 d0       	rcall	.+0      	; 0x117a <_Z16int_number_inputi+0x10>
    117a:	cd b7       	in	r28, 0x3d	; 61
    117c:	de b7       	in	r29, 0x3e	; 62
    117e:	a1 e0       	ldi	r26, 0x01	; 1
    1180:	b0 e0       	ldi	r27, 0x00	; 0
    1182:	44 e0       	ldi	r20, 0x04	; 4
    1184:	50 e0       	ldi	r21, 0x00	; 0
    1186:	9d 01       	movw	r18, r26
    1188:	04 2e       	mov	r0, r20
    118a:	02 c0       	rjmp	.+4      	; 0x1190 <_Z16int_number_inputi+0x26>
    118c:	22 0f       	add	r18, r18
    118e:	33 1f       	adc	r19, r19
    1190:	0a 94       	dec	r0
    1192:	e2 f7       	brpl	.-8      	; 0x118c <_Z16int_number_inputi+0x22>
    1194:	28 bb       	out	0x18, r18	; 24
    1196:	9a 01       	movw	r18, r20
    1198:	24 50       	subi	r18, 0x04	; 4
    119a:	31 09       	sbc	r19, r1
    119c:	f9 01       	movw	r30, r18
    119e:	e0 54       	subi	r30, 0x40	; 64
    11a0:	ff 4f       	sbci	r31, 0xFF	; 255
    11a2:	00 e0       	ldi	r16, 0x00	; 0
    11a4:	10 e0       	ldi	r17, 0x00	; 0
    11a6:	d2 2e       	mov	r13, r18
    11a8:	73 2f       	mov	r23, r19
    11aa:	26 b3       	in	r18, 0x16	; 22
    11ac:	30 e0       	ldi	r19, 0x00	; 0
    11ae:	00 2e       	mov	r0, r16
    11b0:	02 c0       	rjmp	.+4      	; 0x11b6 <_Z16int_number_inputi+0x4c>
    11b2:	35 95       	asr	r19
    11b4:	27 95       	ror	r18
    11b6:	0a 94       	dec	r0
    11b8:	e2 f7       	brpl	.-8      	; 0x11b2 <_Z16int_number_inputi+0x48>
    11ba:	20 ff       	sbrs	r18, 0
    11bc:	2f c0       	rjmp	.+94     	; 0x121c <_Z16int_number_inputi+0xb2>
    11be:	ed 2c       	mov	r14, r13
    11c0:	f7 2e       	mov	r15, r23
    11c2:	90 81       	ld	r25, Z
    11c4:	2f ec       	ldi	r18, 0xCF	; 207
    11c6:	29 0f       	add	r18, r25
    11c8:	23 30       	cpi	r18, 0x03	; 3
    11ca:	f8 f4       	brcc	.+62     	; 0x120a <_Z16int_number_inputi+0xa0>
    11cc:	99 83       	std	Y+1, r25	; 0x01
    11ce:	1a 82       	std	Y+2, r1	; 0x02
    11d0:	ae 01       	movw	r20, r28
    11d2:	4f 5f       	subi	r20, 0xFF	; 255
    11d4:	5f 4f       	sbci	r21, 0xFF	; 255
    11d6:	68 2f       	mov	r22, r24
    11d8:	81 e0       	ldi	r24, 0x01	; 1
    11da:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
    11de:	2f ef       	ldi	r18, 0xFF	; 255
    11e0:	34 e3       	ldi	r19, 0x34	; 52
    11e2:	8c e0       	ldi	r24, 0x0C	; 12
    11e4:	21 50       	subi	r18, 0x01	; 1
    11e6:	30 40       	sbci	r19, 0x00	; 0
    11e8:	80 40       	sbci	r24, 0x00	; 0
    11ea:	e1 f7       	brne	.-8      	; 0x11e4 <_Z16int_number_inputi+0x7a>
    11ec:	00 c0       	rjmp	.+0      	; 0x11ee <_Z16int_number_inputi+0x84>
    11ee:	00 00       	nop
    11f0:	00 0f       	add	r16, r16
    11f2:	11 1f       	adc	r17, r17
    11f4:	00 0f       	add	r16, r16
    11f6:	11 1f       	adc	r17, r17
    11f8:	00 54       	subi	r16, 0x40	; 64
    11fa:	1f 4f       	sbci	r17, 0xFF	; 255
    11fc:	f8 01       	movw	r30, r16
    11fe:	ee 0d       	add	r30, r14
    1200:	ff 1d       	adc	r31, r15
    1202:	80 81       	ld	r24, Z
    1204:	90 e0       	ldi	r25, 0x00	; 0
    1206:	c0 97       	sbiw	r24, 0x30	; 48
    1208:	1c c0       	rjmp	.+56     	; 0x1242 <_Z16int_number_inputi+0xd8>
    120a:	9f ef       	ldi	r25, 0xFF	; 255
    120c:	24 e3       	ldi	r18, 0x34	; 52
    120e:	3c e0       	ldi	r19, 0x0C	; 12
    1210:	91 50       	subi	r25, 0x01	; 1
    1212:	20 40       	sbci	r18, 0x00	; 0
    1214:	30 40       	sbci	r19, 0x00	; 0
    1216:	e1 f7       	brne	.-8      	; 0x1210 <_Z16int_number_inputi+0xa6>
    1218:	00 c0       	rjmp	.+0      	; 0x121a <_Z16int_number_inputi+0xb0>
    121a:	00 00       	nop
    121c:	0f 5f       	subi	r16, 0xFF	; 255
    121e:	1f 4f       	sbci	r17, 0xFF	; 255
    1220:	34 96       	adiw	r30, 0x04	; 4
    1222:	04 30       	cpi	r16, 0x04	; 4
    1224:	11 05       	cpc	r17, r1
    1226:	09 f6       	brne	.-126    	; 0x11aa <_Z16int_number_inputi+0x40>
    1228:	ef e1       	ldi	r30, 0x1F	; 31
    122a:	fe e4       	ldi	r31, 0x4E	; 78
    122c:	31 97       	sbiw	r30, 0x01	; 1
    122e:	f1 f7       	brne	.-4      	; 0x122c <_Z16int_number_inputi+0xc2>
    1230:	00 c0       	rjmp	.+0      	; 0x1232 <_Z16int_number_inputi+0xc8>
    1232:	00 00       	nop
    1234:	4f 5f       	subi	r20, 0xFF	; 255
    1236:	5f 4f       	sbci	r21, 0xFF	; 255
    1238:	48 30       	cpi	r20, 0x08	; 8
    123a:	51 05       	cpc	r21, r1
    123c:	09 f0       	breq	.+2      	; 0x1240 <_Z16int_number_inputi+0xd6>
    123e:	a3 cf       	rjmp	.-186    	; 0x1186 <_Z16int_number_inputi+0x1c>
    1240:	a0 cf       	rjmp	.-192    	; 0x1182 <_Z16int_number_inputi+0x18>
    1242:	0f 90       	pop	r0
    1244:	0f 90       	pop	r0
    1246:	df 91       	pop	r29
    1248:	cf 91       	pop	r28
    124a:	1f 91       	pop	r17
    124c:	0f 91       	pop	r16
    124e:	ff 90       	pop	r15
    1250:	ef 90       	pop	r14
    1252:	df 90       	pop	r13
    1254:	08 95       	ret

00001256 <_Z9show_textPci>:
void show_text(char txt[], int pos1)
{
    1256:	cf 92       	push	r12
    1258:	df 92       	push	r13
    125a:	ef 92       	push	r14
    125c:	ff 92       	push	r15
    125e:	0f 93       	push	r16
    1260:	1f 93       	push	r17
    1262:	cf 93       	push	r28
    1264:	df 93       	push	r29
    1266:	cd b7       	in	r28, 0x3d	; 61
    1268:	de b7       	in	r29, 0x3e	; 62
    126a:	65 97       	sbiw	r28, 0x15	; 21
    126c:	0f b6       	in	r0, 0x3f	; 63
    126e:	f8 94       	cli
    1270:	de bf       	out	0x3e, r29	; 62
    1272:	0f be       	out	0x3f, r0	; 63
    1274:	cd bf       	out	0x3d, r28	; 61
    1276:	6c 01       	movw	r12, r24
    1278:	7b 01       	movw	r14, r22
	if(pos1==1){
    127a:	61 30       	cpi	r22, 0x01	; 1
    127c:	71 05       	cpc	r23, r1
    127e:	11 f4       	brne	.+4      	; 0x1284 <_Z9show_textPci+0x2e>
		LCD_Clear();
    1280:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
	}
	int len = strlen(txt);
    1284:	f6 01       	movw	r30, r12
    1286:	01 90       	ld	r0, Z+
    1288:	00 20       	and	r0, r0
    128a:	e9 f7       	brne	.-6      	; 0x1286 <_Z9show_textPci+0x30>
    128c:	31 97       	sbiw	r30, 0x01	; 1
    128e:	ec 19       	sub	r30, r12
    1290:	fd 09       	sbc	r31, r13
	char s[21];
	int cnt = pos1;
	int id  = 0;
	for(int i=0;i<len;i++)
    1292:	1e 16       	cp	r1, r30
    1294:	1f 06       	cpc	r1, r31
    1296:	94 f1       	brlt	.+100    	; 0x12fc <_Z9show_textPci+0xa6>
    1298:	3a c0       	rjmp	.+116    	; 0x130e <_Z9show_textPci+0xb8>
	{
		s[id] = txt[i];
    129a:	d8 01       	movw	r26, r16
    129c:	9d 91       	ld	r25, X+
    129e:	8d 01       	movw	r16, r26
    12a0:	e1 e0       	ldi	r30, 0x01	; 1
    12a2:	f0 e0       	ldi	r31, 0x00	; 0
    12a4:	ec 0f       	add	r30, r28
    12a6:	fd 1f       	adc	r31, r29
    12a8:	e2 0f       	add	r30, r18
    12aa:	f3 1f       	adc	r31, r19
    12ac:	90 83       	st	Z, r25
		id++;
    12ae:	2f 5f       	subi	r18, 0xFF	; 255
    12b0:	3f 4f       	sbci	r19, 0xFF	; 255
		if(id==20)
    12b2:	24 31       	cpi	r18, 0x14	; 20
    12b4:	31 05       	cpc	r19, r1
    12b6:	69 f4       	brne	.+26     	; 0x12d2 <_Z9show_textPci+0x7c>
		{
			s[id] = 0;
    12b8:	1d 8a       	std	Y+21, r1	; 0x15
			DisplayText(1,cnt,s);
    12ba:	ae 01       	movw	r20, r28
    12bc:	4f 5f       	subi	r20, 0xFF	; 255
    12be:	5f 4f       	sbci	r21, 0xFF	; 255
    12c0:	6e 2d       	mov	r22, r14
    12c2:	81 e0       	ldi	r24, 0x01	; 1
    12c4:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
			id = 0;
			cnt += 12;
    12c8:	bc e0       	ldi	r27, 0x0C	; 12
    12ca:	eb 0e       	add	r14, r27
    12cc:	f1 1c       	adc	r15, r1
		id++;
		if(id==20)
		{
			s[id] = 0;
			DisplayText(1,cnt,s);
			id = 0;
    12ce:	20 e0       	ldi	r18, 0x00	; 0
    12d0:	30 e0       	ldi	r19, 0x00	; 0
	}
	int len = strlen(txt);
	char s[21];
	int cnt = pos1;
	int id  = 0;
	for(int i=0;i<len;i++)
    12d2:	c0 16       	cp	r12, r16
    12d4:	d1 06       	cpc	r13, r17
    12d6:	09 f7       	brne	.-62     	; 0x129a <_Z9show_textPci+0x44>
			id = 0;
			cnt += 12;
		}
		
	}
	if(id)
    12d8:	21 15       	cp	r18, r1
    12da:	31 05       	cpc	r19, r1
    12dc:	c1 f0       	breq	.+48     	; 0x130e <_Z9show_textPci+0xb8>
	{
		s[id] = 0;
    12de:	e1 e0       	ldi	r30, 0x01	; 1
    12e0:	f0 e0       	ldi	r31, 0x00	; 0
    12e2:	ec 0f       	add	r30, r28
    12e4:	fd 1f       	adc	r31, r29
    12e6:	e2 0f       	add	r30, r18
    12e8:	f3 1f       	adc	r31, r19
    12ea:	10 82       	st	Z, r1
		DisplayText(1,cnt,s);
    12ec:	ae 01       	movw	r20, r28
    12ee:	4f 5f       	subi	r20, 0xFF	; 255
    12f0:	5f 4f       	sbci	r21, 0xFF	; 255
    12f2:	6e 2d       	mov	r22, r14
    12f4:	81 e0       	ldi	r24, 0x01	; 1
    12f6:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	}

    12fa:	09 c0       	rjmp	.+18     	; 0x130e <_Z9show_textPci+0xb8>
	char s[21];
	int cnt = pos1;
	int id  = 0;
	for(int i=0;i<len;i++)
	{
		s[id] = txt[i];
    12fc:	d6 01       	movw	r26, r12
    12fe:	8d 91       	ld	r24, X+
    1300:	8d 01       	movw	r16, r26
    1302:	89 83       	std	Y+1, r24	; 0x01
    1304:	ce 0e       	add	r12, r30
    1306:	df 1e       	adc	r13, r31
		id++;
    1308:	21 e0       	ldi	r18, 0x01	; 1
    130a:	30 e0       	ldi	r19, 0x00	; 0
    130c:	e2 cf       	rjmp	.-60     	; 0x12d2 <_Z9show_textPci+0x7c>
	{
		s[id] = 0;
		DisplayText(1,cnt,s);
	}

    130e:	65 96       	adiw	r28, 0x15	; 21
    1310:	0f b6       	in	r0, 0x3f	; 63
    1312:	f8 94       	cli
    1314:	de bf       	out	0x3e, r29	; 62
    1316:	0f be       	out	0x3f, r0	; 63
    1318:	cd bf       	out	0x3d, r28	; 61
    131a:	df 91       	pop	r29
    131c:	cf 91       	pop	r28
    131e:	1f 91       	pop	r17
    1320:	0f 91       	pop	r16
    1322:	ff 90       	pop	r15
    1324:	ef 90       	pop	r14
    1326:	df 90       	pop	r13
    1328:	cf 90       	pop	r12
    132a:	08 95       	ret

0000132c <_Z12show_and_getPcS_>:
void show_and_get(char *F, char * s)
{
    132c:	2f 92       	push	r2
    132e:	3f 92       	push	r3
    1330:	4f 92       	push	r4
    1332:	5f 92       	push	r5
    1334:	6f 92       	push	r6
    1336:	7f 92       	push	r7
    1338:	8f 92       	push	r8
    133a:	9f 92       	push	r9
    133c:	af 92       	push	r10
    133e:	bf 92       	push	r11
    1340:	cf 92       	push	r12
    1342:	df 92       	push	r13
    1344:	ef 92       	push	r14
    1346:	ff 92       	push	r15
    1348:	0f 93       	push	r16
    134a:	1f 93       	push	r17
    134c:	cf 93       	push	r28
    134e:	df 93       	push	r29
    1350:	ec 01       	movw	r28, r24
    1352:	6b 01       	movw	r12, r22
	LCD_Clear();
    1354:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
    1358:	2f ef       	ldi	r18, 0xFF	; 255
    135a:	81 ee       	ldi	r24, 0xE1	; 225
    135c:	94 e0       	ldi	r25, 0x04	; 4
    135e:	21 50       	subi	r18, 0x01	; 1
    1360:	80 40       	sbci	r24, 0x00	; 0
    1362:	90 40       	sbci	r25, 0x00	; 0
    1364:	e1 f7       	brne	.-8      	; 0x135e <_Z12show_and_getPcS_+0x32>
    1366:	00 c0       	rjmp	.+0      	; 0x1368 <_Z12show_and_getPcS_+0x3c>
    1368:	00 00       	nop
	_delay_ms(200);
	DisplayText(1,1,F);
    136a:	ae 01       	movw	r20, r28
    136c:	61 e0       	ldi	r22, 0x01	; 1
    136e:	81 e0       	ldi	r24, 0x01	; 1
    1370:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
    1374:	ef ef       	ldi	r30, 0xFF	; 255
    1376:	f1 ee       	ldi	r31, 0xE1	; 225
    1378:	24 e0       	ldi	r18, 0x04	; 4
    137a:	e1 50       	subi	r30, 0x01	; 1
    137c:	f0 40       	sbci	r31, 0x00	; 0
    137e:	20 40       	sbci	r18, 0x00	; 0
    1380:	e1 f7       	brne	.-8      	; 0x137a <_Z12show_and_getPcS_+0x4e>
    1382:	00 c0       	rjmp	.+0      	; 0x1384 <_Z12show_and_getPcS_+0x58>
    1384:	00 00       	nop
	_delay_ms(200);
	
	int len=0;
	int where=12;
    1386:	0f 2e       	mov	r0, r31
    1388:	fc e0       	ldi	r31, 0x0C	; 12
    138a:	4f 2e       	mov	r4, r31
    138c:	51 2c       	mov	r5, r1
    138e:	f0 2d       	mov	r31, r0
	LCD_Clear();
	_delay_ms(200);
	DisplayText(1,1,F);
	_delay_ms(200);
	
	int len=0;
    1390:	00 e0       	ldi	r16, 0x00	; 0
    1392:	10 e0       	ldi	r17, 0x00	; 0
	int where=12;
	while (1)
	{
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
    1394:	22 24       	eor	r2, r2
    1396:	23 94       	inc	r2
    1398:	31 2c       	mov	r3, r1
    139a:	0f 2e       	mov	r0, r31
    139c:	f0 e6       	ldi	r31, 0x60	; 96
    139e:	6f 2e       	mov	r6, r31
    13a0:	f0 e0       	ldi	r31, 0x00	; 0
    13a2:	7f 2e       	mov	r7, r31
    13a4:	f0 2d       	mov	r31, r0
	
	int len=0;
	int where=12;
	while (1)
	{
		for(int c=4;c<8;c++)
    13a6:	68 94       	set
    13a8:	aa 24       	eor	r10, r10
    13aa:	a2 f8       	bld	r10, 2
    13ac:	b1 2c       	mov	r11, r1
		{
			PORTB=1<<c;
    13ae:	c1 01       	movw	r24, r2
    13b0:	0a 2c       	mov	r0, r10
    13b2:	02 c0       	rjmp	.+4      	; 0x13b8 <_Z12show_and_getPcS_+0x8c>
    13b4:	88 0f       	add	r24, r24
    13b6:	99 1f       	adc	r25, r25
    13b8:	0a 94       	dec	r0
    13ba:	e2 f7       	brpl	.-8      	; 0x13b4 <_Z12show_and_getPcS_+0x88>
    13bc:	88 bb       	out	0x18, r24	; 24
			PORTA=1<<c;
    13be:	8b bb       	out	0x1b, r24	; 27
    13c0:	c5 01       	movw	r24, r10
    13c2:	84 54       	subi	r24, 0x44	; 68
    13c4:	9f 4f       	sbci	r25, 0xFF	; 255
    13c6:	4c 01       	movw	r8, r24
    13c8:	73 01       	movw	r14, r6
			for(int r=0;r<4;r++)
    13ca:	c0 e0       	ldi	r28, 0x00	; 0
    13cc:	d0 e0       	ldi	r29, 0x00	; 0
			{
				if(PINB&(1<<r))
    13ce:	86 b3       	in	r24, 0x16	; 22
    13d0:	90 e0       	ldi	r25, 0x00	; 0
    13d2:	0c 2e       	mov	r0, r28
    13d4:	02 c0       	rjmp	.+4      	; 0x13da <_Z12show_and_getPcS_+0xae>
    13d6:	95 95       	asr	r25
    13d8:	87 95       	ror	r24
    13da:	0a 94       	dec	r0
    13dc:	e2 f7       	brpl	.-8      	; 0x13d6 <_Z12show_and_getPcS_+0xaa>
    13de:	80 ff       	sbrs	r24, 0
    13e0:	39 c0       	rjmp	.+114    	; 0x1454 <_Z12show_and_getPcS_+0x128>
				{
					if(mat[r][c-4]=='C')
    13e2:	f4 01       	movw	r30, r8
    13e4:	80 81       	ld	r24, Z
    13e6:	83 34       	cpi	r24, 0x43	; 67
    13e8:	79 f4       	brne	.+30     	; 0x1408 <_Z12show_and_getPcS_+0xdc>
					{
						len=0;
						s[0]=0;
    13ea:	f6 01       	movw	r30, r12
    13ec:	10 82       	st	Z, r1
						where=1;
						LCD_Clear();
    13ee:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
						}
						s[len]=mat[r][c-4];
						len+=1;
						s[len]=0;
					}
					DisplayText(1,where,s);
    13f2:	a6 01       	movw	r20, r12
    13f4:	61 e0       	ldi	r22, 0x01	; 1
    13f6:	81 e0       	ldi	r24, 0x01	; 1
    13f8:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
						s[0]=0;
						where=1;
    13fc:	44 24       	eor	r4, r4
    13fe:	43 94       	inc	r4
    1400:	51 2c       	mov	r5, r1
			{
				if(PINB&(1<<r))
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
    1402:	00 e0       	ldi	r16, 0x00	; 0
    1404:	10 e0       	ldi	r17, 0x00	; 0
    1406:	1c c0       	rjmp	.+56     	; 0x1440 <_Z12show_and_getPcS_+0x114>
						where=1;
						LCD_Clear();
					}
					else
					{
						if(mat[r][c-4]=='=')
    1408:	8d 33       	cpi	r24, 0x3D	; 61
    140a:	09 f4       	brne	.+2      	; 0x140e <_Z12show_and_getPcS_+0xe2>
    140c:	92 c0       	rjmp	.+292    	; 0x1532 <_Z12show_and_getPcS_+0x206>
						{
							return;
						}
						s[len]=mat[r][c-4];
    140e:	f6 01       	movw	r30, r12
    1410:	e0 0f       	add	r30, r16
    1412:	f1 1f       	adc	r31, r17
    1414:	80 83       	st	Z, r24
						len+=1;
    1416:	0f 5f       	subi	r16, 0xFF	; 255
    1418:	1f 4f       	sbci	r17, 0xFF	; 255
						s[len]=0;
    141a:	f6 01       	movw	r30, r12
    141c:	e0 0f       	add	r30, r16
    141e:	f1 1f       	adc	r31, r17
    1420:	10 82       	st	Z, r1
					}
					DisplayText(1,where,s);
    1422:	a6 01       	movw	r20, r12
    1424:	64 2d       	mov	r22, r4
    1426:	81 e0       	ldi	r24, 0x01	; 1
    1428:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    142c:	04 31       	cpi	r16, 0x14	; 20
    142e:	11 05       	cpc	r17, r1
    1430:	39 f4       	brne	.+14     	; 0x1440 <_Z12show_and_getPcS_+0x114>
					{
						where+=12;
    1432:	fc e0       	ldi	r31, 0x0C	; 12
    1434:	4f 0e       	add	r4, r31
    1436:	51 1c       	adc	r5, r1
						len=0;
						s[0]=0;
    1438:	f6 01       	movw	r30, r12
    143a:	10 82       	st	Z, r1
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    143c:	00 e0       	ldi	r16, 0x00	; 0
    143e:	10 e0       	ldi	r17, 0x00	; 0
    1440:	ff ef       	ldi	r31, 0xFF	; 255
    1442:	24 e3       	ldi	r18, 0x34	; 52
    1444:	8c e0       	ldi	r24, 0x0C	; 12
    1446:	f1 50       	subi	r31, 0x01	; 1
    1448:	20 40       	sbci	r18, 0x00	; 0
    144a:	80 40       	sbci	r24, 0x00	; 0
    144c:	e1 f7       	brne	.-8      	; 0x1446 <_Z12show_and_getPcS_+0x11a>
    144e:	00 c0       	rjmp	.+0      	; 0x1450 <_Z12show_and_getPcS_+0x124>
    1450:	00 00       	nop
    1452:	52 c0       	rjmp	.+164    	; 0x14f8 <_Z12show_and_getPcS_+0x1cc>
						s[0]=0;
					}
					_delay_ms(500);
				}
				else if(PINA&(1<<r))
    1454:	89 b3       	in	r24, 0x19	; 25
    1456:	90 e0       	ldi	r25, 0x00	; 0
    1458:	0c 2e       	mov	r0, r28
    145a:	02 c0       	rjmp	.+4      	; 0x1460 <_Z12show_and_getPcS_+0x134>
    145c:	95 95       	asr	r25
    145e:	87 95       	ror	r24
    1460:	0a 94       	dec	r0
    1462:	e2 f7       	brpl	.-8      	; 0x145c <_Z12show_and_getPcS_+0x130>
    1464:	80 ff       	sbrs	r24, 0
    1466:	48 c0       	rjmp	.+144    	; 0x14f8 <_Z12show_and_getPcS_+0x1cc>
				{
					if(mat2[r][c-4][0]=='<')
    1468:	f7 01       	movw	r30, r14
    146a:	80 81       	ld	r24, Z
    146c:	8c 33       	cpi	r24, 0x3C	; 60
    146e:	f9 f4       	brne	.+62     	; 0x14ae <_Z12show_and_getPcS_+0x182>
					{
						if(len==0){
    1470:	01 15       	cp	r16, r1
    1472:	11 05       	cpc	r17, r1
    1474:	51 f4       	brne	.+20     	; 0x148a <_Z12show_and_getPcS_+0x15e>
    1476:	ff ef       	ldi	r31, 0xFF	; 255
    1478:	24 e3       	ldi	r18, 0x34	; 52
    147a:	8c e0       	ldi	r24, 0x0C	; 12
    147c:	f1 50       	subi	r31, 0x01	; 1
    147e:	20 40       	sbci	r18, 0x00	; 0
    1480:	80 40       	sbci	r24, 0x00	; 0
    1482:	e1 f7       	brne	.-8      	; 0x147c <_Z12show_and_getPcS_+0x150>
    1484:	00 c0       	rjmp	.+0      	; 0x1486 <_Z12show_and_getPcS_+0x15a>
    1486:	00 00       	nop
    1488:	37 c0       	rjmp	.+110    	; 0x14f8 <_Z12show_and_getPcS_+0x1cc>
							_delay_ms(500);
							continue;
						}
						s[len-1]=' ';
    148a:	f6 01       	movw	r30, r12
    148c:	e0 0f       	add	r30, r16
    148e:	f1 1f       	adc	r31, r17
    1490:	31 97       	sbiw	r30, 0x01	; 1
    1492:	90 e2       	ldi	r25, 0x20	; 32
    1494:	90 83       	st	Z, r25
						DisplayText(1,where,s);
    1496:	a6 01       	movw	r20, r12
    1498:	64 2d       	mov	r22, r4
    149a:	81 e0       	ldi	r24, 0x01	; 1
    149c:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
						len--;
    14a0:	01 50       	subi	r16, 0x01	; 1
    14a2:	11 09       	sbc	r17, r1
						s[len]=0;
    14a4:	f6 01       	movw	r30, r12
    14a6:	e0 0f       	add	r30, r16
    14a8:	f1 1f       	adc	r31, r17
    14aa:	10 82       	st	Z, r1
    14ac:	0d c0       	rjmp	.+26     	; 0x14c8 <_Z12show_and_getPcS_+0x19c>
					}
					else
					{
						append(s , len , mat2[r][c-4]);
    14ae:	a7 01       	movw	r20, r14
    14b0:	b8 01       	movw	r22, r16
    14b2:	c6 01       	movw	r24, r12
    14b4:	0e 94 33 08 	call	0x1066	; 0x1066 <_Z6appendPciS_>
						len = strlen(s);
    14b8:	f6 01       	movw	r30, r12
    14ba:	01 90       	ld	r0, Z+
    14bc:	00 20       	and	r0, r0
    14be:	e9 f7       	brne	.-6      	; 0x14ba <_Z12show_and_getPcS_+0x18e>
    14c0:	31 97       	sbiw	r30, 0x01	; 1
    14c2:	8f 01       	movw	r16, r30
    14c4:	0c 19       	sub	r16, r12
    14c6:	1d 09       	sbc	r17, r13
					}
					DisplayText(1,where,s);
    14c8:	a6 01       	movw	r20, r12
    14ca:	64 2d       	mov	r22, r4
    14cc:	81 e0       	ldi	r24, 0x01	; 1
    14ce:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    14d2:	04 31       	cpi	r16, 0x14	; 20
    14d4:	11 05       	cpc	r17, r1
    14d6:	39 f4       	brne	.+14     	; 0x14e6 <_Z12show_and_getPcS_+0x1ba>
					{
						where+=12;
    14d8:	ec e0       	ldi	r30, 0x0C	; 12
    14da:	4e 0e       	add	r4, r30
    14dc:	51 1c       	adc	r5, r1
						len=0;
						s[0]=0;
    14de:	f6 01       	movw	r30, r12
    14e0:	10 82       	st	Z, r1
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    14e2:	00 e0       	ldi	r16, 0x00	; 0
    14e4:	10 e0       	ldi	r17, 0x00	; 0
    14e6:	ff ef       	ldi	r31, 0xFF	; 255
    14e8:	24 e3       	ldi	r18, 0x34	; 52
    14ea:	8c e0       	ldi	r24, 0x0C	; 12
    14ec:	f1 50       	subi	r31, 0x01	; 1
    14ee:	20 40       	sbci	r18, 0x00	; 0
    14f0:	80 40       	sbci	r24, 0x00	; 0
    14f2:	e1 f7       	brne	.-8      	; 0x14ec <_Z12show_and_getPcS_+0x1c0>
    14f4:	00 c0       	rjmp	.+0      	; 0x14f6 <_Z12show_and_getPcS_+0x1ca>
    14f6:	00 00       	nop
	{
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
			PORTA=1<<c;
			for(int r=0;r<4;r++)
    14f8:	21 96       	adiw	r28, 0x01	; 1
    14fa:	98 e1       	ldi	r25, 0x18	; 24
    14fc:	e9 0e       	add	r14, r25
    14fe:	f1 1c       	adc	r15, r1
    1500:	e4 e0       	ldi	r30, 0x04	; 4
    1502:	8e 0e       	add	r8, r30
    1504:	91 1c       	adc	r9, r1
    1506:	c4 30       	cpi	r28, 0x04	; 4
    1508:	d1 05       	cpc	r29, r1
    150a:	09 f0       	breq	.+2      	; 0x150e <_Z12show_and_getPcS_+0x1e2>
    150c:	60 cf       	rjmp	.-320    	; 0x13ce <_Z12show_and_getPcS_+0xa2>
    150e:	8f e1       	ldi	r24, 0x1F	; 31
    1510:	9e e4       	ldi	r25, 0x4E	; 78
    1512:	01 97       	sbiw	r24, 0x01	; 1
    1514:	f1 f7       	brne	.-4      	; 0x1512 <_Z12show_and_getPcS_+0x1e6>
    1516:	00 c0       	rjmp	.+0      	; 0x1518 <_Z12show_and_getPcS_+0x1ec>
    1518:	00 00       	nop
	
	int len=0;
	int where=12;
	while (1)
	{
		for(int c=4;c<8;c++)
    151a:	9f ef       	ldi	r25, 0xFF	; 255
    151c:	a9 1a       	sub	r10, r25
    151e:	b9 0a       	sbc	r11, r25
    1520:	e6 e0       	ldi	r30, 0x06	; 6
    1522:	6e 0e       	add	r6, r30
    1524:	71 1c       	adc	r7, r1
    1526:	f8 e0       	ldi	r31, 0x08	; 8
    1528:	af 16       	cp	r10, r31
    152a:	b1 04       	cpc	r11, r1
    152c:	09 f0       	breq	.+2      	; 0x1530 <_Z12show_and_getPcS_+0x204>
    152e:	3f cf       	rjmp	.-386    	; 0x13ae <_Z12show_and_getPcS_+0x82>
    1530:	34 cf       	rjmp	.-408    	; 0x139a <_Z12show_and_getPcS_+0x6e>
			}
			
			_delay_ms(10);
		}
	}
}
    1532:	df 91       	pop	r29
    1534:	cf 91       	pop	r28
    1536:	1f 91       	pop	r17
    1538:	0f 91       	pop	r16
    153a:	ff 90       	pop	r15
    153c:	ef 90       	pop	r14
    153e:	df 90       	pop	r13
    1540:	cf 90       	pop	r12
    1542:	bf 90       	pop	r11
    1544:	af 90       	pop	r10
    1546:	9f 90       	pop	r9
    1548:	8f 90       	pop	r8
    154a:	7f 90       	pop	r7
    154c:	6f 90       	pop	r6
    154e:	5f 90       	pop	r5
    1550:	4f 90       	pop	r4
    1552:	3f 90       	pop	r3
    1554:	2f 90       	pop	r2
    1556:	08 95       	ret

00001558 <_Z10graph_plotv>:


void graph_plot()
{
    1558:	2f 92       	push	r2
    155a:	3f 92       	push	r3
    155c:	4f 92       	push	r4
    155e:	5f 92       	push	r5
    1560:	6f 92       	push	r6
    1562:	7f 92       	push	r7
    1564:	8f 92       	push	r8
    1566:	9f 92       	push	r9
    1568:	af 92       	push	r10
    156a:	bf 92       	push	r11
    156c:	cf 92       	push	r12
    156e:	df 92       	push	r13
    1570:	ef 92       	push	r14
    1572:	ff 92       	push	r15
    1574:	0f 93       	push	r16
    1576:	1f 93       	push	r17
    1578:	cf 93       	push	r28
    157a:	df 93       	push	r29
    157c:	cd b7       	in	r28, 0x3d	; 61
    157e:	de b7       	in	r29, 0x3e	; 62
    1580:	c5 59       	subi	r28, 0x95	; 149
    1582:	d1 09       	sbc	r29, r1
    1584:	0f b6       	in	r0, 0x3f	; 63
    1586:	f8 94       	cli
    1588:	de bf       	out	0x3e, r29	; 62
    158a:	0f be       	out	0x3f, r0	; 63
    158c:	cd bf       	out	0x3d, r28	; 61
	char F1[]="F(x) = ";
    158e:	88 e0       	ldi	r24, 0x08	; 8
    1590:	ed e3       	ldi	r30, 0x3D	; 61
    1592:	f1 e0       	ldi	r31, 0x01	; 1
    1594:	de 01       	movw	r26, r28
    1596:	11 96       	adiw	r26, 0x01	; 1
    1598:	01 90       	ld	r0, Z+
    159a:	0d 92       	st	X+, r0
    159c:	8a 95       	dec	r24
    159e:	e1 f7       	brne	.-8      	; 0x1598 <_Z10graph_plotv+0x40>
	char s1[20];
	show_and_get(F1,s1);
    15a0:	be 01       	movw	r22, r28
    15a2:	67 5f       	subi	r22, 0xF7	; 247
    15a4:	7f 4f       	sbci	r23, 0xFF	; 255
    15a6:	ce 01       	movw	r24, r28
    15a8:	01 96       	adiw	r24, 0x01	; 1
    15aa:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
	
	strcpy(F1,"minX = ");
    15ae:	88 e0       	ldi	r24, 0x08	; 8
    15b0:	e5 e4       	ldi	r30, 0x45	; 69
    15b2:	f1 e0       	ldi	r31, 0x01	; 1
    15b4:	de 01       	movw	r26, r28
    15b6:	11 96       	adiw	r26, 0x01	; 1
    15b8:	01 90       	ld	r0, Z+
    15ba:	0d 92       	st	X+, r0
    15bc:	8a 95       	dec	r24
    15be:	e1 f7       	brne	.-8      	; 0x15b8 <_Z10graph_plotv+0x60>
	char s2[20];
	show_and_get(F1,s2);
    15c0:	be 01       	movw	r22, r28
    15c2:	63 5e       	subi	r22, 0xE3	; 227
    15c4:	7f 4f       	sbci	r23, 0xFF	; 255
    15c6:	ce 01       	movw	r24, r28
    15c8:	01 96       	adiw	r24, 0x01	; 1
    15ca:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
	double l=ob.eval_exp(s2);
    15ce:	be 01       	movw	r22, r28
    15d0:	63 5e       	subi	r22, 0xE3	; 227
    15d2:	7f 4f       	sbci	r23, 0xFF	; 255
    15d4:	82 e6       	ldi	r24, 0x62	; 98
    15d6:	92 e0       	ldi	r25, 0x02	; 2
    15d8:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    15dc:	e6 96       	adiw	r28, 0x36	; 54
    15de:	6f af       	std	Y+63, r22	; 0x3f
    15e0:	e6 97       	sbiw	r28, 0x36	; 54
    15e2:	e7 96       	adiw	r28, 0x37	; 55
    15e4:	7f af       	std	Y+63, r23	; 0x3f
    15e6:	e7 97       	sbiw	r28, 0x37	; 55
    15e8:	e8 96       	adiw	r28, 0x38	; 56
    15ea:	8f af       	std	Y+63, r24	; 0x3f
    15ec:	e8 97       	sbiw	r28, 0x38	; 56
    15ee:	19 2f       	mov	r17, r25
	
	strcpy(F1,"maxX = ");
    15f0:	88 e0       	ldi	r24, 0x08	; 8
    15f2:	ed e4       	ldi	r30, 0x4D	; 77
    15f4:	f1 e0       	ldi	r31, 0x01	; 1
    15f6:	de 01       	movw	r26, r28
    15f8:	11 96       	adiw	r26, 0x01	; 1
    15fa:	01 90       	ld	r0, Z+
    15fc:	0d 92       	st	X+, r0
    15fe:	8a 95       	dec	r24
    1600:	e1 f7       	brne	.-8      	; 0x15fa <_Z10graph_plotv+0xa2>
	show_and_get(F1,s2);
    1602:	be 01       	movw	r22, r28
    1604:	63 5e       	subi	r22, 0xE3	; 227
    1606:	7f 4f       	sbci	r23, 0xFF	; 255
    1608:	ce 01       	movw	r24, r28
    160a:	01 96       	adiw	r24, 0x01	; 1
    160c:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
	double r=ob.eval_exp(s2);
    1610:	be 01       	movw	r22, r28
    1612:	63 5e       	subi	r22, 0xE3	; 227
    1614:	7f 4f       	sbci	r23, 0xFF	; 255
    1616:	82 e6       	ldi	r24, 0x62	; 98
    1618:	92 e0       	ldi	r25, 0x02	; 2
    161a:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    161e:	66 2e       	mov	r6, r22
    1620:	77 2e       	mov	r7, r23
    1622:	88 2e       	mov	r8, r24
    1624:	99 2e       	mov	r9, r25
	
	const int T=16;

	if(l>r)
    1626:	26 2f       	mov	r18, r22
    1628:	37 2f       	mov	r19, r23
    162a:	48 2f       	mov	r20, r24
    162c:	59 2f       	mov	r21, r25
    162e:	e6 96       	adiw	r28, 0x36	; 54
    1630:	6f ad       	ldd	r22, Y+63	; 0x3f
    1632:	e6 97       	sbiw	r28, 0x36	; 54
    1634:	e7 96       	adiw	r28, 0x37	; 55
    1636:	7f ad       	ldd	r23, Y+63	; 0x3f
    1638:	e7 97       	sbiw	r28, 0x37	; 55
    163a:	e8 96       	adiw	r28, 0x38	; 56
    163c:	8f ad       	ldd	r24, Y+63	; 0x3f
    163e:	e8 97       	sbiw	r28, 0x38	; 56
    1640:	91 2f       	mov	r25, r17
    1642:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
    1646:	18 16       	cp	r1, r24
    1648:	c4 f4       	brge	.+48     	; 0x167a <_Z10graph_plotv+0x122>
    164a:	e6 96       	adiw	r28, 0x36	; 54
    164c:	3f ad       	ldd	r19, Y+63	; 0x3f
    164e:	e6 97       	sbiw	r28, 0x36	; 54
    1650:	e7 96       	adiw	r28, 0x37	; 55
    1652:	2f ad       	ldd	r18, Y+63	; 0x3f
    1654:	e7 97       	sbiw	r28, 0x37	; 55
    1656:	e8 96       	adiw	r28, 0x38	; 56
    1658:	9f ad       	ldd	r25, Y+63	; 0x3f
    165a:	e8 97       	sbiw	r28, 0x38	; 56
    165c:	81 2f       	mov	r24, r17
	{
		double t=r;
		r=l;
		l=t;
    165e:	e6 96       	adiw	r28, 0x36	; 54
    1660:	6f ae       	std	Y+63, r6	; 0x3f
    1662:	e6 97       	sbiw	r28, 0x36	; 54
    1664:	e7 96       	adiw	r28, 0x37	; 55
    1666:	7f ae       	std	Y+63, r7	; 0x3f
    1668:	e7 97       	sbiw	r28, 0x37	; 55
    166a:	e8 96       	adiw	r28, 0x38	; 56
    166c:	8f ae       	std	Y+63, r8	; 0x3f
    166e:	e8 97       	sbiw	r28, 0x38	; 56
    1670:	19 2d       	mov	r17, r9
	const int T=16;

	if(l>r)
	{
		double t=r;
		r=l;
    1672:	63 2e       	mov	r6, r19
    1674:	72 2e       	mov	r7, r18
    1676:	89 2e       	mov	r8, r25
    1678:	98 2e       	mov	r9, r24
    167a:	2e 01       	movw	r4, r28
    167c:	21 e3       	ldi	r18, 0x31	; 49
    167e:	42 0e       	add	r4, r18
    1680:	51 1c       	adc	r5, r1
    1682:	1e 01       	movw	r2, r28
    1684:	81 e7       	ldi	r24, 0x71	; 113
    1686:	28 0e       	add	r2, r24
    1688:	31 1c       	adc	r3, r1
    168a:	72 01       	movw	r14, r4
	}
	
	double save_y[T];
	
	int w=0;
	for(double x=l;w<T;w++)
    168c:	e6 96       	adiw	r28, 0x36	; 54
    168e:	df ac       	ldd	r13, Y+63	; 0x3f
    1690:	e6 97       	sbiw	r28, 0x36	; 54
    1692:	e7 96       	adiw	r28, 0x37	; 55
    1694:	cf ac       	ldd	r12, Y+63	; 0x3f
    1696:	e7 97       	sbiw	r28, 0x37	; 55
    1698:	e8 96       	adiw	r28, 0x38	; 56
    169a:	bf ac       	ldd	r11, Y+63	; 0x3f
    169c:	e8 97       	sbiw	r28, 0x38	; 56
    169e:	a1 2e       	mov	r10, r17
	{
		save_y[w]=evaluate_function(s1,x);
    16a0:	ea 96       	adiw	r28, 0x3a	; 58
    16a2:	5f ae       	std	Y+63, r5	; 0x3f
    16a4:	4e ae       	std	Y+62, r4	; 0x3e
    16a6:	ea 97       	sbiw	r28, 0x3a	; 58
    16a8:	56 2c       	mov	r5, r6
    16aa:	47 2c       	mov	r4, r7
    16ac:	71 2e       	mov	r7, r17
    16ae:	e2 96       	adiw	r28, 0x32	; 50
    16b0:	8f ae       	std	Y+63, r8	; 0x3f
    16b2:	e2 97       	sbiw	r28, 0x32	; 50
    16b4:	69 2c       	mov	r6, r9
    16b6:	1b 2d       	mov	r17, r11
    16b8:	0a 2d       	mov	r16, r10
    16ba:	4d 2d       	mov	r20, r13
    16bc:	5c 2d       	mov	r21, r12
    16be:	61 2f       	mov	r22, r17
    16c0:	70 2f       	mov	r23, r16
    16c2:	ce 01       	movw	r24, r28
    16c4:	09 96       	adiw	r24, 0x09	; 9
    16c6:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    16ca:	f7 01       	movw	r30, r14
    16cc:	61 93       	st	Z+, r22
    16ce:	71 93       	st	Z+, r23
    16d0:	81 93       	st	Z+, r24
    16d2:	91 93       	st	Z+, r25
    16d4:	7f 01       	movw	r14, r30
		_delay_ms(500);
		dtostrf(save_y[w],1,2,t2);
		show_and_get(t2,t2);
		*/
		//_delay_ms(1000);
		x+=(r-l)/(T-1);
    16d6:	e6 96       	adiw	r28, 0x36	; 54
    16d8:	2f ad       	ldd	r18, Y+63	; 0x3f
    16da:	e6 97       	sbiw	r28, 0x36	; 54
    16dc:	e7 96       	adiw	r28, 0x37	; 55
    16de:	3f ad       	ldd	r19, Y+63	; 0x3f
    16e0:	e7 97       	sbiw	r28, 0x37	; 55
    16e2:	e8 96       	adiw	r28, 0x38	; 56
    16e4:	4f ad       	ldd	r20, Y+63	; 0x3f
    16e6:	e8 97       	sbiw	r28, 0x38	; 56
    16e8:	57 2d       	mov	r21, r7
    16ea:	65 2d       	mov	r22, r5
    16ec:	74 2d       	mov	r23, r4
    16ee:	e2 96       	adiw	r28, 0x32	; 50
    16f0:	8f ad       	ldd	r24, Y+63	; 0x3f
    16f2:	e2 97       	sbiw	r28, 0x32	; 50
    16f4:	96 2d       	mov	r25, r6
    16f6:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    16fa:	4b 01       	movw	r8, r22
    16fc:	5c 01       	movw	r10, r24
    16fe:	20 e0       	ldi	r18, 0x00	; 0
    1700:	30 e0       	ldi	r19, 0x00	; 0
    1702:	40 e7       	ldi	r20, 0x70	; 112
    1704:	51 e4       	ldi	r21, 0x41	; 65
    1706:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    170a:	9b 01       	movw	r18, r22
    170c:	ac 01       	movw	r20, r24
    170e:	6d 2d       	mov	r22, r13
    1710:	7c 2d       	mov	r23, r12
    1712:	81 2f       	mov	r24, r17
    1714:	90 2f       	mov	r25, r16
    1716:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    171a:	d6 2e       	mov	r13, r22
    171c:	c7 2e       	mov	r12, r23
    171e:	18 2f       	mov	r17, r24
    1720:	09 2f       	mov	r16, r25
	}
	
	double save_y[T];
	
	int w=0;
	for(double x=l;w<T;w++)
    1722:	e2 14       	cp	r14, r2
    1724:	f3 04       	cpc	r15, r3
    1726:	49 f6       	brne	.-110    	; 0x16ba <_Z10graph_plotv+0x162>
    1728:	c8 57       	subi	r28, 0x78	; 120
    172a:	df 4f       	sbci	r29, 0xFF	; 255
    172c:	88 82       	st	Y, r8
    172e:	99 82       	std	Y+1, r9	; 0x01
    1730:	aa 82       	std	Y+2, r10	; 0x02
    1732:	bb 82       	std	Y+3, r11	; 0x03
    1734:	c8 58       	subi	r28, 0x88	; 136
    1736:	d0 40       	sbci	r29, 0x00	; 0
    1738:	ea 96       	adiw	r28, 0x3a	; 58
    173a:	4e ac       	ldd	r4, Y+62	; 0x3e
    173c:	5f ac       	ldd	r5, Y+63	; 0x3f
    173e:	ea 97       	sbiw	r28, 0x3a	; 58
    1740:	17 2d       	mov	r17, r7
    1742:	62 01       	movw	r12, r4
    1744:	61 2c       	mov	r6, r1
    1746:	71 2c       	mov	r7, r1
    1748:	c0 58       	subi	r28, 0x80	; 128
    174a:	df 4f       	sbci	r29, 0xFF	; 255
    174c:	18 82       	st	Y, r1
    174e:	c0 58       	subi	r28, 0x80	; 128
    1750:	d0 40       	sbci	r29, 0x00	; 0
    1752:	cc 57       	subi	r28, 0x7C	; 124
    1754:	df 4f       	sbci	r29, 0xFF	; 255
    1756:	18 82       	st	Y, r1
    1758:	c4 58       	subi	r28, 0x84	; 132
    175a:	d0 40       	sbci	r29, 0x00	; 0
    175c:	c3 57       	subi	r28, 0x73	; 115
    175e:	df 4f       	sbci	r29, 0xFF	; 255
    1760:	18 82       	st	Y, r1
    1762:	cd 58       	subi	r28, 0x8D	; 141
    1764:	d0 40       	sbci	r29, 0x00	; 0
    1766:	c2 57       	subi	r28, 0x72	; 114
    1768:	df 4f       	sbci	r29, 0xFF	; 255
    176a:	18 82       	st	Y, r1
    176c:	ce 58       	subi	r28, 0x8E	; 142
    176e:	d0 40       	sbci	r29, 0x00	; 0
    1770:	e5 96       	adiw	r28, 0x35	; 53
    1772:	1c ae       	std	Y+60, r1	; 0x3c
    1774:	1d ae       	std	Y+61, r1	; 0x3d
    1776:	1e ae       	std	Y+62, r1	; 0x3e
    1778:	1f ae       	std	Y+63, r1	; 0x3f
    177a:	e5 97       	sbiw	r28, 0x35	; 53
    177c:	c4 57       	subi	r28, 0x74	; 116
    177e:	df 4f       	sbci	r29, 0xFF	; 255
    1780:	18 82       	st	Y, r1
    1782:	cc 58       	subi	r28, 0x8C	; 140
    1784:	d0 40       	sbci	r29, 0x00	; 0
    1786:	c1 57       	subi	r28, 0x71	; 113
    1788:	df 4f       	sbci	r29, 0xFF	; 255
    178a:	18 82       	st	Y, r1
    178c:	cf 58       	subi	r28, 0x8F	; 143
    178e:	d0 40       	sbci	r29, 0x00	; 0
    1790:	c0 57       	subi	r28, 0x70	; 112
    1792:	df 4f       	sbci	r29, 0xFF	; 255
    1794:	18 82       	st	Y, r1
    1796:	c0 59       	subi	r28, 0x90	; 144
    1798:	d0 40       	sbci	r29, 0x00	; 0
    179a:	cf 56       	subi	r28, 0x6F	; 111
    179c:	df 4f       	sbci	r29, 0xFF	; 255
    179e:	18 82       	st	Y, r1
    17a0:	c1 59       	subi	r28, 0x91	; 145
    17a2:	d0 40       	sbci	r29, 0x00	; 0
    17a4:	00 e0       	ldi	r16, 0x00	; 0
    17a6:	91 2c       	mov	r9, r1
    17a8:	e9 96       	adiw	r28, 0x39	; 57
    17aa:	1f ae       	std	Y+63, r1	; 0x3f
    17ac:	e9 97       	sbiw	r28, 0x39	; 57
    17ae:	ed 96       	adiw	r28, 0x3d	; 61
    17b0:	1f ae       	std	Y+63, r1	; 0x3f
    17b2:	ed 97       	sbiw	r28, 0x3d	; 61
    17b4:	ce 56       	subi	r28, 0x6E	; 110
    17b6:	df 4f       	sbci	r29, 0xFF	; 255
    17b8:	59 82       	std	Y+1, r5	; 0x01
    17ba:	48 82       	st	Y, r4
    17bc:	c2 59       	subi	r28, 0x92	; 146
    17be:	d0 40       	sbci	r29, 0x00	; 0
    17c0:	cc 56       	subi	r28, 0x6C	; 108
    17c2:	df 4f       	sbci	r29, 0xFF	; 255
    17c4:	39 82       	std	Y+1, r3	; 0x01
    17c6:	28 82       	st	Y, r2
    17c8:	c4 59       	subi	r28, 0x94	; 148
    17ca:	d0 40       	sbci	r29, 0x00	; 0
    17cc:	41 2e       	mov	r4, r17
    17ce:	30 2e       	mov	r3, r16
    17d0:	59 2c       	mov	r5, r9

	
	double mxX=0,mxY=0,mnX=0,mnY=0;
	for(int i=0;i<T;i++)
	{
		if(l+i*(r-l)/(T-1)>mxX) mxX=l+i*(r-l)/(T-1);
    17d2:	b3 01       	movw	r22, r6
    17d4:	07 2c       	mov	r0, r7
    17d6:	00 0c       	add	r0, r0
    17d8:	88 0b       	sbc	r24, r24
    17da:	99 0b       	sbc	r25, r25
    17dc:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    17e0:	c8 57       	subi	r28, 0x78	; 120
    17e2:	df 4f       	sbci	r29, 0xFF	; 255
    17e4:	28 81       	ld	r18, Y
    17e6:	39 81       	ldd	r19, Y+1	; 0x01
    17e8:	4a 81       	ldd	r20, Y+2	; 0x02
    17ea:	5b 81       	ldd	r21, Y+3	; 0x03
    17ec:	c8 58       	subi	r28, 0x88	; 136
    17ee:	d0 40       	sbci	r29, 0x00	; 0
    17f0:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    17f4:	20 e0       	ldi	r18, 0x00	; 0
    17f6:	30 e0       	ldi	r19, 0x00	; 0
    17f8:	40 e7       	ldi	r20, 0x70	; 112
    17fa:	51 e4       	ldi	r21, 0x41	; 65
    17fc:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    1800:	e6 96       	adiw	r28, 0x36	; 54
    1802:	2f ad       	ldd	r18, Y+63	; 0x3f
    1804:	e6 97       	sbiw	r28, 0x36	; 54
    1806:	e7 96       	adiw	r28, 0x37	; 55
    1808:	3f ad       	ldd	r19, Y+63	; 0x3f
    180a:	e7 97       	sbiw	r28, 0x37	; 55
    180c:	e8 96       	adiw	r28, 0x38	; 56
    180e:	4f ad       	ldd	r20, Y+63	; 0x3f
    1810:	e8 97       	sbiw	r28, 0x38	; 56
    1812:	54 2d       	mov	r21, r4
    1814:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    1818:	06 2f       	mov	r16, r22
    181a:	17 2f       	mov	r17, r23
    181c:	f8 2e       	mov	r15, r24
    181e:	e9 2e       	mov	r14, r25
    1820:	23 2d       	mov	r18, r3
    1822:	35 2d       	mov	r19, r5
    1824:	e9 96       	adiw	r28, 0x39	; 57
    1826:	4f ad       	ldd	r20, Y+63	; 0x3f
    1828:	e9 97       	sbiw	r28, 0x39	; 57
    182a:	ed 96       	adiw	r28, 0x3d	; 61
    182c:	5f ad       	ldd	r21, Y+63	; 0x3f
    182e:	ed 97       	sbiw	r28, 0x3d	; 61
    1830:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
    1834:	18 16       	cp	r1, r24
    1836:	44 f4       	brge	.+16     	; 0x1848 <_Z10graph_plotv+0x2f0>
    1838:	30 2e       	mov	r3, r16
    183a:	51 2e       	mov	r5, r17
    183c:	e9 96       	adiw	r28, 0x39	; 57
    183e:	ff ae       	std	Y+63, r15	; 0x3f
    1840:	e9 97       	sbiw	r28, 0x39	; 57
    1842:	ed 96       	adiw	r28, 0x3d	; 61
    1844:	ef ae       	std	Y+63, r14	; 0x3f
    1846:	ed 97       	sbiw	r28, 0x3d	; 61
		if(save_y[i]>mxY) mxY=save_y[i];
    1848:	f6 01       	movw	r30, r12
    184a:	81 90       	ld	r8, Z+
    184c:	91 90       	ld	r9, Z+
    184e:	a1 90       	ld	r10, Z+
    1850:	b1 90       	ld	r11, Z+
    1852:	6f 01       	movw	r12, r30
    1854:	c4 57       	subi	r28, 0x74	; 116
    1856:	df 4f       	sbci	r29, 0xFF	; 255
    1858:	28 81       	ld	r18, Y
    185a:	cc 58       	subi	r28, 0x8C	; 140
    185c:	d0 40       	sbci	r29, 0x00	; 0
    185e:	c1 57       	subi	r28, 0x71	; 113
    1860:	df 4f       	sbci	r29, 0xFF	; 255
    1862:	38 81       	ld	r19, Y
    1864:	cf 58       	subi	r28, 0x8F	; 143
    1866:	d0 40       	sbci	r29, 0x00	; 0
    1868:	c0 57       	subi	r28, 0x70	; 112
    186a:	df 4f       	sbci	r29, 0xFF	; 255
    186c:	48 81       	ld	r20, Y
    186e:	c0 59       	subi	r28, 0x90	; 144
    1870:	d0 40       	sbci	r29, 0x00	; 0
    1872:	cf 56       	subi	r28, 0x6F	; 111
    1874:	df 4f       	sbci	r29, 0xFF	; 255
    1876:	58 81       	ld	r21, Y
    1878:	c1 59       	subi	r28, 0x91	; 145
    187a:	d0 40       	sbci	r29, 0x00	; 0
    187c:	c5 01       	movw	r24, r10
    187e:	b4 01       	movw	r22, r8
    1880:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
    1884:	18 16       	cp	r1, r24
    1886:	a4 f4       	brge	.+40     	; 0x18b0 <_Z10graph_plotv+0x358>
    1888:	c4 57       	subi	r28, 0x74	; 116
    188a:	df 4f       	sbci	r29, 0xFF	; 255
    188c:	88 82       	st	Y, r8
    188e:	cc 58       	subi	r28, 0x8C	; 140
    1890:	d0 40       	sbci	r29, 0x00	; 0
    1892:	c1 57       	subi	r28, 0x71	; 113
    1894:	df 4f       	sbci	r29, 0xFF	; 255
    1896:	98 82       	st	Y, r9
    1898:	cf 58       	subi	r28, 0x8F	; 143
    189a:	d0 40       	sbci	r29, 0x00	; 0
    189c:	c0 57       	subi	r28, 0x70	; 112
    189e:	df 4f       	sbci	r29, 0xFF	; 255
    18a0:	a8 82       	st	Y, r10
    18a2:	c0 59       	subi	r28, 0x90	; 144
    18a4:	d0 40       	sbci	r29, 0x00	; 0
    18a6:	cf 56       	subi	r28, 0x6F	; 111
    18a8:	df 4f       	sbci	r29, 0xFF	; 255
    18aa:	b8 82       	st	Y, r11
    18ac:	c1 59       	subi	r28, 0x91	; 145
    18ae:	d0 40       	sbci	r29, 0x00	; 0
		
		if(l+i*(r-l)/(T-1)<mnX) mnX=l+i*(r-l)/(T-1);
    18b0:	e5 96       	adiw	r28, 0x35	; 53
    18b2:	2c ad       	ldd	r18, Y+60	; 0x3c
    18b4:	3d ad       	ldd	r19, Y+61	; 0x3d
    18b6:	4e ad       	ldd	r20, Y+62	; 0x3e
    18b8:	5f ad       	ldd	r21, Y+63	; 0x3f
    18ba:	e5 97       	sbiw	r28, 0x35	; 53
    18bc:	60 2f       	mov	r22, r16
    18be:	71 2f       	mov	r23, r17
    18c0:	8f 2d       	mov	r24, r15
    18c2:	9e 2d       	mov	r25, r14
    18c4:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <__cmpsf2>
    18c8:	88 23       	and	r24, r24
    18ca:	54 f4       	brge	.+20     	; 0x18e0 <_Z10graph_plotv+0x388>
    18cc:	80 2f       	mov	r24, r16
    18ce:	91 2f       	mov	r25, r17
    18d0:	af 2d       	mov	r26, r15
    18d2:	be 2d       	mov	r27, r14
    18d4:	e5 96       	adiw	r28, 0x35	; 53
    18d6:	8c af       	std	Y+60, r24	; 0x3c
    18d8:	9d af       	std	Y+61, r25	; 0x3d
    18da:	ae af       	std	Y+62, r26	; 0x3e
    18dc:	bf af       	std	Y+63, r27	; 0x3f
    18de:	e5 97       	sbiw	r28, 0x35	; 53
		if(save_y[i]<mnY) mnY=save_y[i];	
    18e0:	c0 58       	subi	r28, 0x80	; 128
    18e2:	df 4f       	sbci	r29, 0xFF	; 255
    18e4:	28 81       	ld	r18, Y
    18e6:	c0 58       	subi	r28, 0x80	; 128
    18e8:	d0 40       	sbci	r29, 0x00	; 0
    18ea:	cc 57       	subi	r28, 0x7C	; 124
    18ec:	df 4f       	sbci	r29, 0xFF	; 255
    18ee:	38 81       	ld	r19, Y
    18f0:	c4 58       	subi	r28, 0x84	; 132
    18f2:	d0 40       	sbci	r29, 0x00	; 0
    18f4:	c3 57       	subi	r28, 0x73	; 115
    18f6:	df 4f       	sbci	r29, 0xFF	; 255
    18f8:	48 81       	ld	r20, Y
    18fa:	cd 58       	subi	r28, 0x8D	; 141
    18fc:	d0 40       	sbci	r29, 0x00	; 0
    18fe:	c2 57       	subi	r28, 0x72	; 114
    1900:	df 4f       	sbci	r29, 0xFF	; 255
    1902:	58 81       	ld	r21, Y
    1904:	ce 58       	subi	r28, 0x8E	; 142
    1906:	d0 40       	sbci	r29, 0x00	; 0
    1908:	c5 01       	movw	r24, r10
    190a:	b4 01       	movw	r22, r8
    190c:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <__cmpsf2>
    1910:	88 23       	and	r24, r24
    1912:	a4 f4       	brge	.+40     	; 0x193c <_Z10graph_plotv+0x3e4>
    1914:	c0 58       	subi	r28, 0x80	; 128
    1916:	df 4f       	sbci	r29, 0xFF	; 255
    1918:	88 82       	st	Y, r8
    191a:	c0 58       	subi	r28, 0x80	; 128
    191c:	d0 40       	sbci	r29, 0x00	; 0
    191e:	cc 57       	subi	r28, 0x7C	; 124
    1920:	df 4f       	sbci	r29, 0xFF	; 255
    1922:	98 82       	st	Y, r9
    1924:	c4 58       	subi	r28, 0x84	; 132
    1926:	d0 40       	sbci	r29, 0x00	; 0
    1928:	c3 57       	subi	r28, 0x73	; 115
    192a:	df 4f       	sbci	r29, 0xFF	; 255
    192c:	a8 82       	st	Y, r10
    192e:	cd 58       	subi	r28, 0x8D	; 141
    1930:	d0 40       	sbci	r29, 0x00	; 0
    1932:	c2 57       	subi	r28, 0x72	; 114
    1934:	df 4f       	sbci	r29, 0xFF	; 255
    1936:	b8 82       	st	Y, r11
    1938:	ce 58       	subi	r28, 0x8E	; 142
    193a:	d0 40       	sbci	r29, 0x00	; 0
	}
	//l+i*(r-l)/(T-1)

	
	double mxX=0,mxY=0,mnX=0,mnY=0;
	for(int i=0;i<T;i++)
    193c:	ff ef       	ldi	r31, 0xFF	; 255
    193e:	6f 1a       	sub	r6, r31
    1940:	7f 0a       	sbc	r7, r31
    1942:	20 e1       	ldi	r18, 0x10	; 16
    1944:	62 16       	cp	r6, r18
    1946:	71 04       	cpc	r7, r1
    1948:	09 f0       	breq	.+2      	; 0x194c <_Z10graph_plotv+0x3f4>
    194a:	43 cf       	rjmp	.-378    	; 0x17d2 <_Z10graph_plotv+0x27a>
    194c:	14 2d       	mov	r17, r4
    194e:	03 2d       	mov	r16, r3
    1950:	cc 56       	subi	r28, 0x6C	; 108
    1952:	df 4f       	sbci	r29, 0xFF	; 255
    1954:	28 80       	ld	r2, Y
    1956:	39 80       	ldd	r3, Y+1	; 0x01
    1958:	c4 59       	subi	r28, 0x94	; 148
    195a:	d0 40       	sbci	r29, 0x00	; 0
    195c:	95 2c       	mov	r9, r5
    195e:	ce 56       	subi	r28, 0x6E	; 110
    1960:	df 4f       	sbci	r29, 0xFF	; 255
    1962:	48 80       	ld	r4, Y
    1964:	59 80       	ldd	r5, Y+1	; 0x01
    1966:	c2 59       	subi	r28, 0x92	; 146
    1968:	d0 40       	sbci	r29, 0x00	; 0
    196a:	72 01       	movw	r14, r4
    196c:	c0 58       	subi	r28, 0x80	; 128
    196e:	df 4f       	sbci	r29, 0xFF	; 255
    1970:	d8 80       	ld	r13, Y
    1972:	c0 58       	subi	r28, 0x80	; 128
    1974:	d0 40       	sbci	r29, 0x00	; 0
    1976:	cc 57       	subi	r28, 0x7C	; 124
    1978:	df 4f       	sbci	r29, 0xFF	; 255
    197a:	c8 80       	ld	r12, Y
    197c:	c4 58       	subi	r28, 0x84	; 132
    197e:	d0 40       	sbci	r29, 0x00	; 0
    1980:	c3 57       	subi	r28, 0x73	; 115
    1982:	df 4f       	sbci	r29, 0xFF	; 255
    1984:	b8 80       	ld	r11, Y
    1986:	cd 58       	subi	r28, 0x8D	; 141
    1988:	d0 40       	sbci	r29, 0x00	; 0
    198a:	c2 57       	subi	r28, 0x72	; 114
    198c:	df 4f       	sbci	r29, 0xFF	; 255
    198e:	a8 80       	ld	r10, Y
    1990:	ce 58       	subi	r28, 0x8E	; 142
    1992:	d0 40       	sbci	r29, 0x00	; 0
		if(l+i*(r-l)/(T-1)<mnX) mnX=l+i*(r-l)/(T-1);
		if(save_y[i]<mnY) mnY=save_y[i];	
	}
	for(int i=0;i<T;i++)
	{
		save_y[i]-=mnY;
    1994:	2d 2d       	mov	r18, r13
    1996:	3c 2d       	mov	r19, r12
    1998:	4b 2d       	mov	r20, r11
    199a:	5a 2d       	mov	r21, r10
    199c:	f7 01       	movw	r30, r14
    199e:	60 81       	ld	r22, Z
    19a0:	71 81       	ldd	r23, Z+1	; 0x01
    19a2:	82 81       	ldd	r24, Z+2	; 0x02
    19a4:	93 81       	ldd	r25, Z+3	; 0x03
    19a6:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    19aa:	f7 01       	movw	r30, r14
    19ac:	61 93       	st	Z+, r22
    19ae:	71 93       	st	Z+, r23
    19b0:	81 93       	st	Z+, r24
    19b2:	91 93       	st	Z+, r25
    19b4:	7f 01       	movw	r14, r30
		if(save_y[i]>mxY) mxY=save_y[i];
		
		if(l+i*(r-l)/(T-1)<mnX) mnX=l+i*(r-l)/(T-1);
		if(save_y[i]<mnY) mnY=save_y[i];	
	}
	for(int i=0;i<T;i++)
    19b6:	e2 15       	cp	r30, r2
    19b8:	f3 05       	cpc	r31, r3
    19ba:	61 f7       	brne	.-40     	; 0x1994 <_Z10graph_plotv+0x43c>
	{
		save_y[i]-=mnY;
	}
	//((l+i*(r-l)/(T-1))-mnX)
	double scaleX=120/(mxX-mnX);
    19bc:	e5 96       	adiw	r28, 0x35	; 53
    19be:	2c ad       	ldd	r18, Y+60	; 0x3c
    19c0:	3d ad       	ldd	r19, Y+61	; 0x3d
    19c2:	4e ad       	ldd	r20, Y+62	; 0x3e
    19c4:	5f ad       	ldd	r21, Y+63	; 0x3f
    19c6:	e5 97       	sbiw	r28, 0x35	; 53
    19c8:	60 2f       	mov	r22, r16
    19ca:	79 2d       	mov	r23, r9
    19cc:	e9 96       	adiw	r28, 0x39	; 57
    19ce:	8f ad       	ldd	r24, Y+63	; 0x3f
    19d0:	e9 97       	sbiw	r28, 0x39	; 57
    19d2:	ed 96       	adiw	r28, 0x3d	; 61
    19d4:	9f ad       	ldd	r25, Y+63	; 0x3f
    19d6:	ed 97       	sbiw	r28, 0x3d	; 61
    19d8:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    19dc:	9b 01       	movw	r18, r22
    19de:	ac 01       	movw	r20, r24
    19e0:	60 e0       	ldi	r22, 0x00	; 0
    19e2:	70 e0       	ldi	r23, 0x00	; 0
    19e4:	80 ef       	ldi	r24, 0xF0	; 240
    19e6:	92 e4       	ldi	r25, 0x42	; 66
    19e8:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    19ec:	ec 96       	adiw	r28, 0x3c	; 60
    19ee:	6c af       	std	Y+60, r22	; 0x3c
    19f0:	7d af       	std	Y+61, r23	; 0x3d
    19f2:	8e af       	std	Y+62, r24	; 0x3e
    19f4:	9f af       	std	Y+63, r25	; 0x3f
    19f6:	ec 97       	sbiw	r28, 0x3c	; 60
	double scaleY=60/(mxY-mnY);
    19f8:	c0 58       	subi	r28, 0x80	; 128
    19fa:	df 4f       	sbci	r29, 0xFF	; 255
    19fc:	28 81       	ld	r18, Y
    19fe:	c0 58       	subi	r28, 0x80	; 128
    1a00:	d0 40       	sbci	r29, 0x00	; 0
    1a02:	cc 57       	subi	r28, 0x7C	; 124
    1a04:	df 4f       	sbci	r29, 0xFF	; 255
    1a06:	38 81       	ld	r19, Y
    1a08:	c4 58       	subi	r28, 0x84	; 132
    1a0a:	d0 40       	sbci	r29, 0x00	; 0
    1a0c:	c3 57       	subi	r28, 0x73	; 115
    1a0e:	df 4f       	sbci	r29, 0xFF	; 255
    1a10:	48 81       	ld	r20, Y
    1a12:	cd 58       	subi	r28, 0x8D	; 141
    1a14:	d0 40       	sbci	r29, 0x00	; 0
    1a16:	c2 57       	subi	r28, 0x72	; 114
    1a18:	df 4f       	sbci	r29, 0xFF	; 255
    1a1a:	58 81       	ld	r21, Y
    1a1c:	ce 58       	subi	r28, 0x8E	; 142
    1a1e:	d0 40       	sbci	r29, 0x00	; 0
    1a20:	c4 57       	subi	r28, 0x74	; 116
    1a22:	df 4f       	sbci	r29, 0xFF	; 255
    1a24:	68 81       	ld	r22, Y
    1a26:	cc 58       	subi	r28, 0x8C	; 140
    1a28:	d0 40       	sbci	r29, 0x00	; 0
    1a2a:	c1 57       	subi	r28, 0x71	; 113
    1a2c:	df 4f       	sbci	r29, 0xFF	; 255
    1a2e:	78 81       	ld	r23, Y
    1a30:	cf 58       	subi	r28, 0x8F	; 143
    1a32:	d0 40       	sbci	r29, 0x00	; 0
    1a34:	c0 57       	subi	r28, 0x70	; 112
    1a36:	df 4f       	sbci	r29, 0xFF	; 255
    1a38:	88 81       	ld	r24, Y
    1a3a:	c0 59       	subi	r28, 0x90	; 144
    1a3c:	d0 40       	sbci	r29, 0x00	; 0
    1a3e:	cf 56       	subi	r28, 0x6F	; 111
    1a40:	df 4f       	sbci	r29, 0xFF	; 255
    1a42:	98 81       	ld	r25, Y
    1a44:	c1 59       	subi	r28, 0x91	; 145
    1a46:	d0 40       	sbci	r29, 0x00	; 0
    1a48:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1a4c:	9b 01       	movw	r18, r22
    1a4e:	ac 01       	movw	r20, r24
    1a50:	60 e0       	ldi	r22, 0x00	; 0
    1a52:	70 e0       	ldi	r23, 0x00	; 0
    1a54:	80 e7       	ldi	r24, 0x70	; 112
    1a56:	92 e4       	ldi	r25, 0x42	; 66
    1a58:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    1a5c:	c4 58       	subi	r28, 0x84	; 132
    1a5e:	df 4f       	sbci	r29, 0xFF	; 255
    1a60:	68 83       	st	Y, r22
    1a62:	79 83       	std	Y+1, r23	; 0x01
    1a64:	8a 83       	std	Y+2, r24	; 0x02
    1a66:	9b 83       	std	Y+3, r25	; 0x03
    1a68:	cc 57       	subi	r28, 0x7C	; 124
    1a6a:	d0 40       	sbci	r29, 0x00	; 0

	LCD_Clear();
    1a6c:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
    1a70:	ff ef       	ldi	r31, 0xFF	; 255
    1a72:	24 e3       	ldi	r18, 0x34	; 52
    1a74:	8c e0       	ldi	r24, 0x0C	; 12
    1a76:	f1 50       	subi	r31, 0x01	; 1
    1a78:	20 40       	sbci	r18, 0x00	; 0
    1a7a:	80 40       	sbci	r24, 0x00	; 0
    1a7c:	e1 f7       	brne	.-8      	; 0x1a76 <_Z10graph_plotv+0x51e>
    1a7e:	00 c0       	rjmp	.+0      	; 0x1a80 <_Z10graph_plotv+0x528>
    1a80:	00 00       	nop
		//i_x[i]=round(save_x[i]*scaleX);
		//i_y[i]=63-round(save_y[i]*scaleY);
	}
	for(int y=0;y<64;y++)
	{
		int x=round((-mnX)*scaleX);
    1a82:	ec 96       	adiw	r28, 0x3c	; 60
    1a84:	2c ad       	ldd	r18, Y+60	; 0x3c
    1a86:	3d ad       	ldd	r19, Y+61	; 0x3d
    1a88:	4e ad       	ldd	r20, Y+62	; 0x3e
    1a8a:	5f ad       	ldd	r21, Y+63	; 0x3f
    1a8c:	ec 97       	sbiw	r28, 0x3c	; 60
    1a8e:	e5 96       	adiw	r28, 0x35	; 53
    1a90:	6c ad       	ldd	r22, Y+60	; 0x3c
    1a92:	7d ad       	ldd	r23, Y+61	; 0x3d
    1a94:	8e ad       	ldd	r24, Y+62	; 0x3e
    1a96:	9f ad       	ldd	r25, Y+63	; 0x3f
    1a98:	e5 97       	sbiw	r28, 0x35	; 53
    1a9a:	90 58       	subi	r25, 0x80	; 128
    1a9c:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1aa0:	0e 94 ad 1e 	call	0x3d5a	; 0x3d5a <round>
		PutPixel(x,y,1);
    1aa4:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__fixsfsi>
    1aa8:	f6 2e       	mov	r15, r22
    1aaa:	00 e0       	ldi	r16, 0x00	; 0
    1aac:	41 e0       	ldi	r20, 0x01	; 1
    1aae:	60 2f       	mov	r22, r16
    1ab0:	8f 2d       	mov	r24, r15
    1ab2:	0e 94 9e 02 	call	0x53c	; 0x53c <_Z8PutPixelhhc>
    1ab6:	0f 5f       	subi	r16, 0xFF	; 255
	for(int i=0;i<T;i++)
	{
		//i_x[i]=round(save_x[i]*scaleX);
		//i_y[i]=63-round(save_y[i]*scaleY);
	}
	for(int y=0;y<64;y++)
    1ab8:	00 34       	cpi	r16, 0x40	; 64
    1aba:	c1 f7       	brne	.-16     	; 0x1aac <_Z10graph_plotv+0x554>
		int x=round((-mnX)*scaleX);
		PutPixel(x,y,1);
	}
	for(int x=0;x<128;x++)
	{
		int y=63-round((-mnY)*scaleY);
    1abc:	c4 58       	subi	r28, 0x84	; 132
    1abe:	df 4f       	sbci	r29, 0xFF	; 255
    1ac0:	28 81       	ld	r18, Y
    1ac2:	39 81       	ldd	r19, Y+1	; 0x01
    1ac4:	4a 81       	ldd	r20, Y+2	; 0x02
    1ac6:	5b 81       	ldd	r21, Y+3	; 0x03
    1ac8:	cc 57       	subi	r28, 0x7C	; 124
    1aca:	d0 40       	sbci	r29, 0x00	; 0
    1acc:	c0 58       	subi	r28, 0x80	; 128
    1ace:	df 4f       	sbci	r29, 0xFF	; 255
    1ad0:	68 81       	ld	r22, Y
    1ad2:	c0 58       	subi	r28, 0x80	; 128
    1ad4:	d0 40       	sbci	r29, 0x00	; 0
    1ad6:	cc 57       	subi	r28, 0x7C	; 124
    1ad8:	df 4f       	sbci	r29, 0xFF	; 255
    1ada:	78 81       	ld	r23, Y
    1adc:	c4 58       	subi	r28, 0x84	; 132
    1ade:	d0 40       	sbci	r29, 0x00	; 0
    1ae0:	c3 57       	subi	r28, 0x73	; 115
    1ae2:	df 4f       	sbci	r29, 0xFF	; 255
    1ae4:	88 81       	ld	r24, Y
    1ae6:	cd 58       	subi	r28, 0x8D	; 141
    1ae8:	d0 40       	sbci	r29, 0x00	; 0
    1aea:	c2 57       	subi	r28, 0x72	; 114
    1aec:	df 4f       	sbci	r29, 0xFF	; 255
    1aee:	98 81       	ld	r25, Y
    1af0:	ce 58       	subi	r28, 0x8E	; 142
    1af2:	d0 40       	sbci	r29, 0x00	; 0
    1af4:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1af8:	0e 94 ad 1e 	call	0x3d5a	; 0x3d5a <round>
		PutPixel(x,y,1);
    1afc:	20 e0       	ldi	r18, 0x00	; 0
    1afe:	30 e0       	ldi	r19, 0x00	; 0
    1b00:	4c e7       	ldi	r20, 0x7C	; 124
    1b02:	52 e4       	ldi	r21, 0x42	; 66
    1b04:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    1b08:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__fixsfsi>
    1b0c:	f6 2e       	mov	r15, r22
    1b0e:	00 e0       	ldi	r16, 0x00	; 0
    1b10:	41 e0       	ldi	r20, 0x01	; 1
    1b12:	6f 2d       	mov	r22, r15
    1b14:	80 2f       	mov	r24, r16
    1b16:	0e 94 9e 02 	call	0x53c	; 0x53c <_Z8PutPixelhhc>
    1b1a:	0f 5f       	subi	r16, 0xFF	; 255
	for(int y=0;y<64;y++)
	{
		int x=round((-mnX)*scaleX);
		PutPixel(x,y,1);
	}
	for(int x=0;x<128;x++)
    1b1c:	00 38       	cpi	r16, 0x80	; 128
    1b1e:	c1 f7       	brne	.-16     	; 0x1b10 <_Z10graph_plotv+0x5b8>
    1b20:	22 24       	eor	r2, r2
    1b22:	23 94       	inc	r2
    1b24:	31 2c       	mov	r3, r1
    1b26:	71 2e       	mov	r7, r17
	}
	
	for(int i=1;i<T;i++)
	{
		//PutPixel(i_x[i],i_y[i],1);
		line(round(((l+(i-1)*(r-l)/(T-1))-mnX)*scaleX),63-round(save_y[i-1]*scaleY),round(((l+i*(r-l)/(T-1))-mnX)*scaleX),63-round(save_y[i]*scaleY),1);
    1b28:	f2 01       	movw	r30, r4
    1b2a:	24 81       	ldd	r18, Z+4	; 0x04
    1b2c:	35 81       	ldd	r19, Z+5	; 0x05
    1b2e:	46 81       	ldd	r20, Z+6	; 0x06
    1b30:	57 81       	ldd	r21, Z+7	; 0x07
    1b32:	c4 58       	subi	r28, 0x84	; 132
    1b34:	df 4f       	sbci	r29, 0xFF	; 255
    1b36:	68 81       	ld	r22, Y
    1b38:	79 81       	ldd	r23, Y+1	; 0x01
    1b3a:	8a 81       	ldd	r24, Y+2	; 0x02
    1b3c:	9b 81       	ldd	r25, Y+3	; 0x03
    1b3e:	cc 57       	subi	r28, 0x7C	; 124
    1b40:	d0 40       	sbci	r29, 0x00	; 0
    1b42:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1b46:	0e 94 ad 1e 	call	0x3d5a	; 0x3d5a <round>
    1b4a:	c0 58       	subi	r28, 0x80	; 128
    1b4c:	df 4f       	sbci	r29, 0xFF	; 255
    1b4e:	68 83       	st	Y, r22
    1b50:	79 83       	std	Y+1, r23	; 0x01
    1b52:	8a 83       	std	Y+2, r24	; 0x02
    1b54:	9b 83       	std	Y+3, r25	; 0x03
    1b56:	c0 58       	subi	r28, 0x80	; 128
    1b58:	d0 40       	sbci	r29, 0x00	; 0
    1b5a:	b1 01       	movw	r22, r2
    1b5c:	03 2c       	mov	r0, r3
    1b5e:	00 0c       	add	r0, r0
    1b60:	88 0b       	sbc	r24, r24
    1b62:	99 0b       	sbc	r25, r25
    1b64:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    1b68:	c8 57       	subi	r28, 0x78	; 120
    1b6a:	df 4f       	sbci	r29, 0xFF	; 255
    1b6c:	28 81       	ld	r18, Y
    1b6e:	39 81       	ldd	r19, Y+1	; 0x01
    1b70:	4a 81       	ldd	r20, Y+2	; 0x02
    1b72:	5b 81       	ldd	r21, Y+3	; 0x03
    1b74:	c8 58       	subi	r28, 0x88	; 136
    1b76:	d0 40       	sbci	r29, 0x00	; 0
    1b78:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1b7c:	20 e0       	ldi	r18, 0x00	; 0
    1b7e:	30 e0       	ldi	r19, 0x00	; 0
    1b80:	40 e7       	ldi	r20, 0x70	; 112
    1b82:	51 e4       	ldi	r21, 0x41	; 65
    1b84:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    1b88:	e6 96       	adiw	r28, 0x36	; 54
    1b8a:	2f ad       	ldd	r18, Y+63	; 0x3f
    1b8c:	e6 97       	sbiw	r28, 0x36	; 54
    1b8e:	e7 96       	adiw	r28, 0x37	; 55
    1b90:	3f ad       	ldd	r19, Y+63	; 0x3f
    1b92:	e7 97       	sbiw	r28, 0x37	; 55
    1b94:	e8 96       	adiw	r28, 0x38	; 56
    1b96:	4f ad       	ldd	r20, Y+63	; 0x3f
    1b98:	e8 97       	sbiw	r28, 0x38	; 56
    1b9a:	57 2d       	mov	r21, r7
    1b9c:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    1ba0:	e5 96       	adiw	r28, 0x35	; 53
    1ba2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ba4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ba6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ba8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1baa:	e5 97       	sbiw	r28, 0x35	; 53
    1bac:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1bb0:	ec 96       	adiw	r28, 0x3c	; 60
    1bb2:	2c ad       	ldd	r18, Y+60	; 0x3c
    1bb4:	3d ad       	ldd	r19, Y+61	; 0x3d
    1bb6:	4e ad       	ldd	r20, Y+62	; 0x3e
    1bb8:	5f ad       	ldd	r21, Y+63	; 0x3f
    1bba:	ec 97       	sbiw	r28, 0x3c	; 60
    1bbc:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1bc0:	0e 94 ad 1e 	call	0x3d5a	; 0x3d5a <round>
    1bc4:	cc 57       	subi	r28, 0x7C	; 124
    1bc6:	df 4f       	sbci	r29, 0xFF	; 255
    1bc8:	68 83       	st	Y, r22
    1bca:	79 83       	std	Y+1, r23	; 0x01
    1bcc:	8a 83       	std	Y+2, r24	; 0x02
    1bce:	9b 83       	std	Y+3, r25	; 0x03
    1bd0:	c4 58       	subi	r28, 0x84	; 132
    1bd2:	d0 40       	sbci	r29, 0x00	; 0
    1bd4:	f2 01       	movw	r30, r4
    1bd6:	20 81       	ld	r18, Z
    1bd8:	31 81       	ldd	r19, Z+1	; 0x01
    1bda:	42 81       	ldd	r20, Z+2	; 0x02
    1bdc:	53 81       	ldd	r21, Z+3	; 0x03
    1bde:	f4 e0       	ldi	r31, 0x04	; 4
    1be0:	4f 0e       	add	r4, r31
    1be2:	51 1c       	adc	r5, r1
    1be4:	c4 58       	subi	r28, 0x84	; 132
    1be6:	df 4f       	sbci	r29, 0xFF	; 255
    1be8:	68 81       	ld	r22, Y
    1bea:	79 81       	ldd	r23, Y+1	; 0x01
    1bec:	8a 81       	ldd	r24, Y+2	; 0x02
    1bee:	9b 81       	ldd	r25, Y+3	; 0x03
    1bf0:	cc 57       	subi	r28, 0x7C	; 124
    1bf2:	d0 40       	sbci	r29, 0x00	; 0
    1bf4:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1bf8:	0e 94 ad 1e 	call	0x3d5a	; 0x3d5a <round>
    1bfc:	4b 01       	movw	r8, r22
    1bfe:	5c 01       	movw	r10, r24
    1c00:	b1 01       	movw	r22, r2
    1c02:	61 50       	subi	r22, 0x01	; 1
    1c04:	71 09       	sbc	r23, r1
    1c06:	07 2e       	mov	r0, r23
    1c08:	00 0c       	add	r0, r0
    1c0a:	88 0b       	sbc	r24, r24
    1c0c:	99 0b       	sbc	r25, r25
    1c0e:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    1c12:	c8 57       	subi	r28, 0x78	; 120
    1c14:	df 4f       	sbci	r29, 0xFF	; 255
    1c16:	28 81       	ld	r18, Y
    1c18:	39 81       	ldd	r19, Y+1	; 0x01
    1c1a:	4a 81       	ldd	r20, Y+2	; 0x02
    1c1c:	5b 81       	ldd	r21, Y+3	; 0x03
    1c1e:	c8 58       	subi	r28, 0x88	; 136
    1c20:	d0 40       	sbci	r29, 0x00	; 0
    1c22:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1c26:	20 e0       	ldi	r18, 0x00	; 0
    1c28:	30 e0       	ldi	r19, 0x00	; 0
    1c2a:	40 e7       	ldi	r20, 0x70	; 112
    1c2c:	51 e4       	ldi	r21, 0x41	; 65
    1c2e:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    1c32:	e6 96       	adiw	r28, 0x36	; 54
    1c34:	2f ad       	ldd	r18, Y+63	; 0x3f
    1c36:	e6 97       	sbiw	r28, 0x36	; 54
    1c38:	e7 96       	adiw	r28, 0x37	; 55
    1c3a:	3f ad       	ldd	r19, Y+63	; 0x3f
    1c3c:	e7 97       	sbiw	r28, 0x37	; 55
    1c3e:	e8 96       	adiw	r28, 0x38	; 56
    1c40:	4f ad       	ldd	r20, Y+63	; 0x3f
    1c42:	e8 97       	sbiw	r28, 0x38	; 56
    1c44:	57 2d       	mov	r21, r7
    1c46:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    1c4a:	e5 96       	adiw	r28, 0x35	; 53
    1c4c:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c4e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c50:	4e ad       	ldd	r20, Y+62	; 0x3e
    1c52:	5f ad       	ldd	r21, Y+63	; 0x3f
    1c54:	e5 97       	sbiw	r28, 0x35	; 53
    1c56:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1c5a:	ec 96       	adiw	r28, 0x3c	; 60
    1c5c:	2c ad       	ldd	r18, Y+60	; 0x3c
    1c5e:	3d ad       	ldd	r19, Y+61	; 0x3d
    1c60:	4e ad       	ldd	r20, Y+62	; 0x3e
    1c62:	5f ad       	ldd	r21, Y+63	; 0x3f
    1c64:	ec 97       	sbiw	r28, 0x3c	; 60
    1c66:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    1c6a:	0e 94 ad 1e 	call	0x3d5a	; 0x3d5a <round>
    1c6e:	6b 01       	movw	r12, r22
    1c70:	7c 01       	movw	r14, r24
    1c72:	c0 58       	subi	r28, 0x80	; 128
    1c74:	df 4f       	sbci	r29, 0xFF	; 255
    1c76:	28 81       	ld	r18, Y
    1c78:	39 81       	ldd	r19, Y+1	; 0x01
    1c7a:	4a 81       	ldd	r20, Y+2	; 0x02
    1c7c:	5b 81       	ldd	r21, Y+3	; 0x03
    1c7e:	c0 58       	subi	r28, 0x80	; 128
    1c80:	d0 40       	sbci	r29, 0x00	; 0
    1c82:	60 e0       	ldi	r22, 0x00	; 0
    1c84:	70 e0       	ldi	r23, 0x00	; 0
    1c86:	8c e7       	ldi	r24, 0x7C	; 124
    1c88:	92 e4       	ldi	r25, 0x42	; 66
    1c8a:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1c8e:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__fixunssfsi>
    1c92:	16 2f       	mov	r17, r22
    1c94:	cc 57       	subi	r28, 0x7C	; 124
    1c96:	df 4f       	sbci	r29, 0xFF	; 255
    1c98:	68 81       	ld	r22, Y
    1c9a:	79 81       	ldd	r23, Y+1	; 0x01
    1c9c:	8a 81       	ldd	r24, Y+2	; 0x02
    1c9e:	9b 81       	ldd	r25, Y+3	; 0x03
    1ca0:	c4 58       	subi	r28, 0x84	; 132
    1ca2:	d0 40       	sbci	r29, 0x00	; 0
    1ca4:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__fixunssfsi>
    1ca8:	66 2e       	mov	r6, r22
    1caa:	a5 01       	movw	r20, r10
    1cac:	94 01       	movw	r18, r8
    1cae:	60 e0       	ldi	r22, 0x00	; 0
    1cb0:	70 e0       	ldi	r23, 0x00	; 0
    1cb2:	8c e7       	ldi	r24, 0x7C	; 124
    1cb4:	92 e4       	ldi	r25, 0x42	; 66
    1cb6:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1cba:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__fixunssfsi>
    1cbe:	b6 2e       	mov	r11, r22
    1cc0:	c7 01       	movw	r24, r14
    1cc2:	b6 01       	movw	r22, r12
    1cc4:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__fixunssfsi>
    1cc8:	86 2f       	mov	r24, r22
    1cca:	01 e0       	ldi	r16, 0x01	; 1
    1ccc:	21 2f       	mov	r18, r17
    1cce:	46 2d       	mov	r20, r6
    1cd0:	6b 2d       	mov	r22, r11
    1cd2:	0e 94 5f 03 	call	0x6be	; 0x6be <_Z4lineccccc>
    1cd6:	2f e7       	ldi	r18, 0x7F	; 127
    1cd8:	88 e3       	ldi	r24, 0x38	; 56
    1cda:	91 e0       	ldi	r25, 0x01	; 1
    1cdc:	21 50       	subi	r18, 0x01	; 1
    1cde:	80 40       	sbci	r24, 0x00	; 0
    1ce0:	90 40       	sbci	r25, 0x00	; 0
    1ce2:	e1 f7       	brne	.-8      	; 0x1cdc <_Z10graph_plotv+0x784>
    1ce4:	00 c0       	rjmp	.+0      	; 0x1ce6 <_Z10graph_plotv+0x78e>
    1ce6:	00 00       	nop
	{
		int y=63-round((-mnY)*scaleY);
		PutPixel(x,y,1);
	}
	
	for(int i=1;i<T;i++)
    1ce8:	ef ef       	ldi	r30, 0xFF	; 255
    1cea:	2e 1a       	sub	r2, r30
    1cec:	3e 0a       	sbc	r3, r30
    1cee:	f0 e1       	ldi	r31, 0x10	; 16
    1cf0:	2f 16       	cp	r2, r31
    1cf2:	31 04       	cpc	r3, r1
    1cf4:	09 f0       	breq	.+2      	; 0x1cf8 <_Z10graph_plotv+0x7a0>
    1cf6:	18 cf       	rjmp	.-464    	; 0x1b28 <_Z10graph_plotv+0x5d0>
		line(round(((l+(i-1)*(r-l)/(T-1))-mnX)*scaleX),63-round(save_y[i-1]*scaleY),round(((l+i*(r-l)/(T-1))-mnX)*scaleX),63-round(save_y[i]*scaleY),1);
		_delay_ms(50);
	}

	
    1cf8:	cb 56       	subi	r28, 0x6B	; 107
    1cfa:	df 4f       	sbci	r29, 0xFF	; 255
    1cfc:	0f b6       	in	r0, 0x3f	; 63
    1cfe:	f8 94       	cli
    1d00:	de bf       	out	0x3e, r29	; 62
    1d02:	0f be       	out	0x3f, r0	; 63
    1d04:	cd bf       	out	0x3d, r28	; 61
    1d06:	df 91       	pop	r29
    1d08:	cf 91       	pop	r28
    1d0a:	1f 91       	pop	r17
    1d0c:	0f 91       	pop	r16
    1d0e:	ff 90       	pop	r15
    1d10:	ef 90       	pop	r14
    1d12:	df 90       	pop	r13
    1d14:	cf 90       	pop	r12
    1d16:	bf 90       	pop	r11
    1d18:	af 90       	pop	r10
    1d1a:	9f 90       	pop	r9
    1d1c:	8f 90       	pop	r8
    1d1e:	7f 90       	pop	r7
    1d20:	6f 90       	pop	r6
    1d22:	5f 90       	pop	r5
    1d24:	4f 90       	pop	r4
    1d26:	3f 90       	pop	r3
    1d28:	2f 90       	pop	r2
    1d2a:	08 95       	ret

00001d2c <_Z13diffentiationPcd>:
double diffentiation(char str[],double x)
{
    1d2c:	8f 92       	push	r8
    1d2e:	9f 92       	push	r9
    1d30:	af 92       	push	r10
    1d32:	bf 92       	push	r11
    1d34:	cf 92       	push	r12
    1d36:	df 92       	push	r13
    1d38:	ef 92       	push	r14
    1d3a:	ff 92       	push	r15
    1d3c:	cf 93       	push	r28
    1d3e:	df 93       	push	r29
    1d40:	ec 01       	movw	r28, r24
    1d42:	6a 01       	movw	r12, r20
    1d44:	7b 01       	movw	r14, r22
	double h = 1e-5;
	return (evaluate_function(str , x+h)-evaluate_function(str, x-h))/(2.00*h);
    1d46:	2c ea       	ldi	r18, 0xAC	; 172
    1d48:	35 ec       	ldi	r19, 0xC5	; 197
    1d4a:	47 e2       	ldi	r20, 0x27	; 39
    1d4c:	57 e3       	ldi	r21, 0x37	; 55
    1d4e:	c7 01       	movw	r24, r14
    1d50:	b6 01       	movw	r22, r12
    1d52:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    1d56:	ab 01       	movw	r20, r22
    1d58:	bc 01       	movw	r22, r24
    1d5a:	ce 01       	movw	r24, r28
    1d5c:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    1d60:	4b 01       	movw	r8, r22
    1d62:	5c 01       	movw	r10, r24
    1d64:	2c ea       	ldi	r18, 0xAC	; 172
    1d66:	35 ec       	ldi	r19, 0xC5	; 197
    1d68:	47 e2       	ldi	r20, 0x27	; 39
    1d6a:	57 e3       	ldi	r21, 0x37	; 55
    1d6c:	c7 01       	movw	r24, r14
    1d6e:	b6 01       	movw	r22, r12
    1d70:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1d74:	ab 01       	movw	r20, r22
    1d76:	bc 01       	movw	r22, r24
    1d78:	ce 01       	movw	r24, r28
    1d7a:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    1d7e:	9b 01       	movw	r18, r22
    1d80:	ac 01       	movw	r20, r24
    1d82:	c5 01       	movw	r24, r10
    1d84:	b4 01       	movw	r22, r8
    1d86:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    1d8a:	2c ea       	ldi	r18, 0xAC	; 172
    1d8c:	35 ec       	ldi	r19, 0xC5	; 197
    1d8e:	47 ea       	ldi	r20, 0xA7	; 167
    1d90:	57 e3       	ldi	r21, 0x37	; 55
    1d92:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
}
    1d96:	df 91       	pop	r29
    1d98:	cf 91       	pop	r28
    1d9a:	ff 90       	pop	r15
    1d9c:	ef 90       	pop	r14
    1d9e:	df 90       	pop	r13
    1da0:	cf 90       	pop	r12
    1da2:	bf 90       	pop	r11
    1da4:	af 90       	pop	r10
    1da6:	9f 90       	pop	r9
    1da8:	8f 90       	pop	r8
    1daa:	08 95       	ret

00001dac <_Z6newtonPcd>:

double newton(char str[],double guess)
{
    1dac:	8f 92       	push	r8
    1dae:	9f 92       	push	r9
    1db0:	af 92       	push	r10
    1db2:	bf 92       	push	r11
    1db4:	cf 92       	push	r12
    1db6:	df 92       	push	r13
    1db8:	ef 92       	push	r14
    1dba:	ff 92       	push	r15
    1dbc:	0f 93       	push	r16
    1dbe:	1f 93       	push	r17
    1dc0:	cf 93       	push	r28
    1dc2:	df 93       	push	r29
    1dc4:	8c 01       	movw	r16, r24
    1dc6:	e4 2e       	mov	r14, r20
    1dc8:	f5 2e       	mov	r15, r21
    1dca:	d6 2e       	mov	r13, r22
    1dcc:	c7 2e       	mov	r12, r23
    1dce:	c1 e5       	ldi	r28, 0x51	; 81
    1dd0:	d0 e0       	ldi	r29, 0x00	; 0
	double x = guess;
	for (int rep = 0; rep<=80; rep++)
	{
		double nx = x - (evaluate_function(str, x)/diffentiation(str , x));
    1dd2:	4e 2d       	mov	r20, r14
    1dd4:	5f 2d       	mov	r21, r15
    1dd6:	6d 2d       	mov	r22, r13
    1dd8:	7c 2d       	mov	r23, r12
    1dda:	c8 01       	movw	r24, r16
    1ddc:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    1de0:	4b 01       	movw	r8, r22
    1de2:	5c 01       	movw	r10, r24
    1de4:	4e 2d       	mov	r20, r14
    1de6:	5f 2d       	mov	r21, r15
    1de8:	6d 2d       	mov	r22, r13
    1dea:	7c 2d       	mov	r23, r12
    1dec:	c8 01       	movw	r24, r16
    1dee:	0e 94 96 0e 	call	0x1d2c	; 0x1d2c <_Z13diffentiationPcd>
    1df2:	9b 01       	movw	r18, r22
    1df4:	ac 01       	movw	r20, r24
    1df6:	c5 01       	movw	r24, r10
    1df8:	b4 01       	movw	r22, r8
    1dfa:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    1dfe:	9b 01       	movw	r18, r22
    1e00:	ac 01       	movw	r20, r24
    1e02:	6e 2d       	mov	r22, r14
    1e04:	7f 2d       	mov	r23, r15
    1e06:	8d 2d       	mov	r24, r13
    1e08:	9c 2d       	mov	r25, r12
    1e0a:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
	"mov	%0, %C1		\n\t"
	"lsl	%0		\n\t"
	"mov	%0, %D1		\n\t"
	"rol	%0		"
	: "=r" (__exp)
	: "r" (__x)	);
    1e0e:	28 2f       	mov	r18, r24
    1e10:	22 0f       	add	r18, r18
    1e12:	29 2f       	mov	r18, r25
    1e14:	22 1f       	adc	r18, r18
		if(!isfinite(nx))
    1e16:	2f 3f       	cpi	r18, 0xFF	; 255
    1e18:	31 f0       	breq	.+12     	; 0x1e26 <_Z6newtonPcd+0x7a>
    1e1a:	21 97       	sbiw	r28, 0x01	; 1
double newton(char str[],double guess)
{
	double x = guess;
	for (int rep = 0; rep<=80; rep++)
	{
		double nx = x - (evaluate_function(str, x)/diffentiation(str , x));
    1e1c:	e6 2e       	mov	r14, r22
    1e1e:	f7 2e       	mov	r15, r23
    1e20:	d8 2e       	mov	r13, r24
    1e22:	c9 2e       	mov	r12, r25
}

double newton(char str[],double guess)
{
	double x = guess;
	for (int rep = 0; rep<=80; rep++)
    1e24:	b1 f6       	brne	.-84     	; 0x1dd2 <_Z6newtonPcd+0x26>
		}
		x = nx;
	}
	
	return x;
}
    1e26:	6e 2d       	mov	r22, r14
    1e28:	7f 2d       	mov	r23, r15
    1e2a:	8d 2d       	mov	r24, r13
    1e2c:	9c 2d       	mov	r25, r12
    1e2e:	df 91       	pop	r29
    1e30:	cf 91       	pop	r28
    1e32:	1f 91       	pop	r17
    1e34:	0f 91       	pop	r16
    1e36:	ff 90       	pop	r15
    1e38:	ef 90       	pop	r14
    1e3a:	df 90       	pop	r13
    1e3c:	cf 90       	pop	r12
    1e3e:	bf 90       	pop	r11
    1e40:	af 90       	pop	r10
    1e42:	9f 90       	pop	r9
    1e44:	8f 90       	pop	r8
    1e46:	08 95       	ret

00001e48 <_Z14newton_raphsonv>:
void newton_raphson()
{
    1e48:	2f 92       	push	r2
    1e4a:	3f 92       	push	r3
    1e4c:	4f 92       	push	r4
    1e4e:	5f 92       	push	r5
    1e50:	6f 92       	push	r6
    1e52:	7f 92       	push	r7
    1e54:	8f 92       	push	r8
    1e56:	9f 92       	push	r9
    1e58:	af 92       	push	r10
    1e5a:	bf 92       	push	r11
    1e5c:	cf 92       	push	r12
    1e5e:	df 92       	push	r13
    1e60:	ef 92       	push	r14
    1e62:	ff 92       	push	r15
    1e64:	0f 93       	push	r16
    1e66:	1f 93       	push	r17
    1e68:	cf 93       	push	r28
    1e6a:	df 93       	push	r29
    1e6c:	cd b7       	in	r28, 0x3d	; 61
    1e6e:	de b7       	in	r29, 0x3e	; 62
    1e70:	ce 54       	subi	r28, 0x4E	; 78
    1e72:	d1 09       	sbc	r29, r1
    1e74:	0f b6       	in	r0, 0x3f	; 63
    1e76:	f8 94       	cli
    1e78:	de bf       	out	0x3e, r29	; 62
    1e7a:	0f be       	out	0x3f, r0	; 63
    1e7c:	cd bf       	out	0x3d, r28	; 61
	LCD_Clear();
    1e7e:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
	char text1[] = "Input F(x):";
    1e82:	8c e0       	ldi	r24, 0x0C	; 12
    1e84:	e5 e5       	ldi	r30, 0x55	; 85
    1e86:	f1 e0       	ldi	r31, 0x01	; 1
    1e88:	de 01       	movw	r26, r28
    1e8a:	11 96       	adiw	r26, 0x01	; 1
    1e8c:	01 90       	ld	r0, Z+
    1e8e:	0d 92       	st	X+, r0
    1e90:	8a 95       	dec	r24
    1e92:	e1 f7       	brne	.-8      	; 0x1e8c <_Z14newton_raphsonv+0x44>
	char text2[] = "Initial approx:";
    1e94:	80 e1       	ldi	r24, 0x10	; 16
    1e96:	e1 e6       	ldi	r30, 0x61	; 97
    1e98:	f1 e0       	ldi	r31, 0x01	; 1
    1e9a:	de 01       	movw	r26, r28
    1e9c:	1d 96       	adiw	r26, 0x0d	; 13
    1e9e:	01 90       	ld	r0, Z+
    1ea0:	0d 92       	st	X+, r0
    1ea2:	8a 95       	dec	r24
    1ea4:	e1 f7       	brne	.-8      	; 0x1e9e <_Z14newton_raphsonv+0x56>
	DisplayText(1,1,text1);
    1ea6:	ae 01       	movw	r20, r28
    1ea8:	4f 5f       	subi	r20, 0xFF	; 255
    1eaa:	5f 4f       	sbci	r21, 0xFF	; 255
    1eac:	61 e0       	ldi	r22, 0x01	; 1
    1eae:	81 e0       	ldi	r24, 0x01	; 1
    1eb0:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	//input function
	char s[20];
	int len=0;
	int where=12;
    1eb4:	0f 2e       	mov	r0, r31
    1eb6:	fc e0       	ldi	r31, 0x0C	; 12
    1eb8:	8f 2e       	mov	r8, r31
    1eba:	91 2c       	mov	r9, r1
    1ebc:	f0 2d       	mov	r31, r0
	char text1[] = "Input F(x):";
	char text2[] = "Initial approx:";
	DisplayText(1,1,text1);
	//input function
	char s[20];
	int len=0;
    1ebe:	e1 2c       	mov	r14, r1
    1ec0:	f1 2c       	mov	r15, r1
					else
					{
						append(s , len , mat2[r][c-4]);
						len = strlen(s);
					}
					DisplayText(1,where,s);
    1ec2:	2e 01       	movw	r4, r28
    1ec4:	2d e1       	ldi	r18, 0x1D	; 29
    1ec6:	42 0e       	add	r4, r18
    1ec8:	51 1c       	adc	r5, r1
    1eca:	2c 96       	adiw	r28, 0x0c	; 12
    1ecc:	4f ae       	std	Y+63, r4	; 0x3f
    1ece:	2c 97       	sbiw	r28, 0x0c	; 12
    1ed0:	2d 96       	adiw	r28, 0x0d	; 13
    1ed2:	5f ae       	std	Y+63, r5	; 0x3f
    1ed4:	2d 97       	sbiw	r28, 0x0d	; 13
    1ed6:	0f 2e       	mov	r0, r31
    1ed8:	f0 e6       	ldi	r31, 0x60	; 96
    1eda:	2f 2e       	mov	r2, r31
    1edc:	f0 e0       	ldi	r31, 0x00	; 0
    1ede:	3f 2e       	mov	r3, r31
    1ee0:	f0 2d       	mov	r31, r0
	int len=0;
	int where=12;
	while (1)
	{
		bool done = 0;
		for(int c=4;c<8;c++)
    1ee2:	68 94       	set
    1ee4:	66 24       	eor	r6, r6
    1ee6:	62 f8       	bld	r6, 2
    1ee8:	71 2c       	mov	r7, r1
		{
			PORTB=1<<c;
    1eea:	81 e0       	ldi	r24, 0x01	; 1
    1eec:	90 e0       	ldi	r25, 0x00	; 0
    1eee:	06 2c       	mov	r0, r6
    1ef0:	02 c0       	rjmp	.+4      	; 0x1ef6 <_Z14newton_raphsonv+0xae>
    1ef2:	88 0f       	add	r24, r24
    1ef4:	99 1f       	adc	r25, r25
    1ef6:	0a 94       	dec	r0
    1ef8:	e2 f7       	brpl	.-8      	; 0x1ef2 <_Z14newton_raphsonv+0xaa>
    1efa:	88 bb       	out	0x18, r24	; 24
			PORTA=1<<c;
    1efc:	8b bb       	out	0x1b, r24	; 27
    1efe:	c3 01       	movw	r24, r6
    1f00:	84 54       	subi	r24, 0x44	; 68
    1f02:	9f 4f       	sbci	r25, 0xFF	; 255
    1f04:	6c 01       	movw	r12, r24
    1f06:	51 01       	movw	r10, r2
			for(int r=0;r<4;r++)
    1f08:	00 e0       	ldi	r16, 0x00	; 0
    1f0a:	10 e0       	ldi	r17, 0x00	; 0
			{
				if(PINB&(1<<r))
    1f0c:	86 b3       	in	r24, 0x16	; 22
    1f0e:	90 e0       	ldi	r25, 0x00	; 0
    1f10:	00 2e       	mov	r0, r16
    1f12:	02 c0       	rjmp	.+4      	; 0x1f18 <_Z14newton_raphsonv+0xd0>
    1f14:	95 95       	asr	r25
    1f16:	87 95       	ror	r24
    1f18:	0a 94       	dec	r0
    1f1a:	e2 f7       	brpl	.-8      	; 0x1f14 <_Z14newton_raphsonv+0xcc>
    1f1c:	80 ff       	sbrs	r24, 0
    1f1e:	43 c0       	rjmp	.+134    	; 0x1fa6 <_Z14newton_raphsonv+0x15e>
				{
					if(mat[r][c-4]=='C')
    1f20:	f6 01       	movw	r30, r12
    1f22:	80 81       	ld	r24, Z
    1f24:	83 34       	cpi	r24, 0x43	; 67
    1f26:	99 f4       	brne	.+38     	; 0x1f4e <_Z14newton_raphsonv+0x106>
					{
						len=0;
						s[0]=0;
    1f28:	1d 8e       	std	Y+29, r1	; 0x1d
						where=1;
						LCD_Clear();
    1f2a:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
						}
						s[len]=mat[r][c-4];
						len+=1;
						s[len]=0;
					}
					DisplayText(1,where,s);
    1f2e:	2c 96       	adiw	r28, 0x0c	; 12
    1f30:	4f ad       	ldd	r20, Y+63	; 0x3f
    1f32:	2c 97       	sbiw	r28, 0x0c	; 12
    1f34:	2d 96       	adiw	r28, 0x0d	; 13
    1f36:	5f ad       	ldd	r21, Y+63	; 0x3f
    1f38:	2d 97       	sbiw	r28, 0x0d	; 13
    1f3a:	61 e0       	ldi	r22, 0x01	; 1
    1f3c:	81 e0       	ldi	r24, 0x01	; 1
    1f3e:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
						s[0]=0;
						where=1;
    1f42:	88 24       	eor	r8, r8
    1f44:	83 94       	inc	r8
    1f46:	91 2c       	mov	r9, r1
			{
				if(PINB&(1<<r))
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
    1f48:	e1 2c       	mov	r14, r1
    1f4a:	f1 2c       	mov	r15, r1
    1f4c:	22 c0       	rjmp	.+68     	; 0x1f92 <_Z14newton_raphsonv+0x14a>
						where=1;
						LCD_Clear();
					}
					else
					{
						if(mat[r][c-4]=='=')
    1f4e:	8d 33       	cpi	r24, 0x3D	; 61
    1f50:	09 f4       	brne	.+2      	; 0x1f54 <_Z14newton_raphsonv+0x10c>
    1f52:	ad c0       	rjmp	.+346    	; 0x20ae <_Z14newton_raphsonv+0x266>
						{
							done = 1;
							break;
						}
						s[len]=mat[r][c-4];
    1f54:	f2 01       	movw	r30, r4
    1f56:	ee 0d       	add	r30, r14
    1f58:	ff 1d       	adc	r31, r15
    1f5a:	80 83       	st	Z, r24
						len+=1;
    1f5c:	ff ef       	ldi	r31, 0xFF	; 255
    1f5e:	ef 1a       	sub	r14, r31
    1f60:	ff 0a       	sbc	r15, r31
						s[len]=0;
    1f62:	f2 01       	movw	r30, r4
    1f64:	ee 0d       	add	r30, r14
    1f66:	ff 1d       	adc	r31, r15
    1f68:	10 82       	st	Z, r1
					}
					DisplayText(1,where,s);
    1f6a:	2c 96       	adiw	r28, 0x0c	; 12
    1f6c:	4f ad       	ldd	r20, Y+63	; 0x3f
    1f6e:	2c 97       	sbiw	r28, 0x0c	; 12
    1f70:	2d 96       	adiw	r28, 0x0d	; 13
    1f72:	5f ad       	ldd	r21, Y+63	; 0x3f
    1f74:	2d 97       	sbiw	r28, 0x0d	; 13
    1f76:	68 2d       	mov	r22, r8
    1f78:	81 e0       	ldi	r24, 0x01	; 1
    1f7a:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    1f7e:	24 e1       	ldi	r18, 0x14	; 20
    1f80:	e2 16       	cp	r14, r18
    1f82:	f1 04       	cpc	r15, r1
    1f84:	31 f4       	brne	.+12     	; 0x1f92 <_Z14newton_raphsonv+0x14a>
					{
						where+=12;
    1f86:	8c e0       	ldi	r24, 0x0C	; 12
    1f88:	88 0e       	add	r8, r24
    1f8a:	91 1c       	adc	r9, r1
						len=0;
						s[0]=0;
    1f8c:	1d 8e       	std	Y+29, r1	; 0x1d
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    1f8e:	e1 2c       	mov	r14, r1
    1f90:	f1 2c       	mov	r15, r1
    1f92:	9f ef       	ldi	r25, 0xFF	; 255
    1f94:	e4 e3       	ldi	r30, 0x34	; 52
    1f96:	fc e0       	ldi	r31, 0x0C	; 12
    1f98:	91 50       	subi	r25, 0x01	; 1
    1f9a:	e0 40       	sbci	r30, 0x00	; 0
    1f9c:	f0 40       	sbci	r31, 0x00	; 0
    1f9e:	e1 f7       	brne	.-8      	; 0x1f98 <_Z14newton_raphsonv+0x150>
    1fa0:	00 c0       	rjmp	.+0      	; 0x1fa2 <_Z14newton_raphsonv+0x15a>
    1fa2:	00 00       	nop
    1fa4:	66 c0       	rjmp	.+204    	; 0x2072 <_Z14newton_raphsonv+0x22a>
						s[0]=0;
					}
					_delay_ms(500);
				}
				else if(PINA&(1<<r))
    1fa6:	89 b3       	in	r24, 0x19	; 25
    1fa8:	90 e0       	ldi	r25, 0x00	; 0
    1faa:	00 2e       	mov	r0, r16
    1fac:	02 c0       	rjmp	.+4      	; 0x1fb2 <_Z14newton_raphsonv+0x16a>
    1fae:	95 95       	asr	r25
    1fb0:	87 95       	ror	r24
    1fb2:	0a 94       	dec	r0
    1fb4:	e2 f7       	brpl	.-8      	; 0x1fae <_Z14newton_raphsonv+0x166>
    1fb6:	80 ff       	sbrs	r24, 0
    1fb8:	5c c0       	rjmp	.+184    	; 0x2072 <_Z14newton_raphsonv+0x22a>
				{
					if(mat2[r][c-4][0]=='<')
    1fba:	f5 01       	movw	r30, r10
    1fbc:	80 81       	ld	r24, Z
    1fbe:	8c 33       	cpi	r24, 0x3C	; 60
    1fc0:	49 f5       	brne	.+82     	; 0x2014 <_Z14newton_raphsonv+0x1cc>
					{
						if(len==0){
    1fc2:	e1 14       	cp	r14, r1
    1fc4:	f1 04       	cpc	r15, r1
    1fc6:	51 f4       	brne	.+20     	; 0x1fdc <_Z14newton_raphsonv+0x194>
    1fc8:	ff ef       	ldi	r31, 0xFF	; 255
    1fca:	24 e3       	ldi	r18, 0x34	; 52
    1fcc:	8c e0       	ldi	r24, 0x0C	; 12
    1fce:	f1 50       	subi	r31, 0x01	; 1
    1fd0:	20 40       	sbci	r18, 0x00	; 0
    1fd2:	80 40       	sbci	r24, 0x00	; 0
    1fd4:	e1 f7       	brne	.-8      	; 0x1fce <_Z14newton_raphsonv+0x186>
    1fd6:	00 c0       	rjmp	.+0      	; 0x1fd8 <_Z14newton_raphsonv+0x190>
    1fd8:	00 00       	nop
    1fda:	4b c0       	rjmp	.+150    	; 0x2072 <_Z14newton_raphsonv+0x22a>
							_delay_ms(500);
							continue;
						}
						s[len-1]=' ';
    1fdc:	91 e0       	ldi	r25, 0x01	; 1
    1fde:	e9 1a       	sub	r14, r25
    1fe0:	f1 08       	sbc	r15, r1
    1fe2:	f2 01       	movw	r30, r4
    1fe4:	ee 0d       	add	r30, r14
    1fe6:	ff 1d       	adc	r31, r15
    1fe8:	2f 96       	adiw	r28, 0x0f	; 15
    1fea:	ff af       	std	Y+63, r31	; 0x3f
    1fec:	ee af       	std	Y+62, r30	; 0x3e
    1fee:	2f 97       	sbiw	r28, 0x0f	; 15
    1ff0:	20 e2       	ldi	r18, 0x20	; 32
    1ff2:	20 83       	st	Z, r18
						DisplayText(1,where,s);
    1ff4:	2c 96       	adiw	r28, 0x0c	; 12
    1ff6:	4f ad       	ldd	r20, Y+63	; 0x3f
    1ff8:	2c 97       	sbiw	r28, 0x0c	; 12
    1ffa:	2d 96       	adiw	r28, 0x0d	; 13
    1ffc:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ffe:	2d 97       	sbiw	r28, 0x0d	; 13
    2000:	68 2d       	mov	r22, r8
    2002:	81 e0       	ldi	r24, 0x01	; 1
    2004:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
						len--;
						s[len]=0;
    2008:	2f 96       	adiw	r28, 0x0f	; 15
    200a:	ee ad       	ldd	r30, Y+62	; 0x3e
    200c:	ff ad       	ldd	r31, Y+63	; 0x3f
    200e:	2f 97       	sbiw	r28, 0x0f	; 15
    2010:	10 82       	st	Z, r1
    2012:	12 c0       	rjmp	.+36     	; 0x2038 <_Z14newton_raphsonv+0x1f0>
					}
					else
					{
						append(s , len , mat2[r][c-4]);
    2014:	a5 01       	movw	r20, r10
    2016:	b7 01       	movw	r22, r14
    2018:	2c 96       	adiw	r28, 0x0c	; 12
    201a:	8f ad       	ldd	r24, Y+63	; 0x3f
    201c:	2c 97       	sbiw	r28, 0x0c	; 12
    201e:	2d 96       	adiw	r28, 0x0d	; 13
    2020:	9f ad       	ldd	r25, Y+63	; 0x3f
    2022:	2d 97       	sbiw	r28, 0x0d	; 13
    2024:	0e 94 33 08 	call	0x1066	; 0x1066 <_Z6appendPciS_>
						len = strlen(s);
    2028:	f2 01       	movw	r30, r4
    202a:	01 90       	ld	r0, Z+
    202c:	00 20       	and	r0, r0
    202e:	e9 f7       	brne	.-6      	; 0x202a <_Z14newton_raphsonv+0x1e2>
    2030:	31 97       	sbiw	r30, 0x01	; 1
    2032:	7f 01       	movw	r14, r30
    2034:	e4 18       	sub	r14, r4
    2036:	f5 08       	sbc	r15, r5
					}
					DisplayText(1,where,s);
    2038:	2c 96       	adiw	r28, 0x0c	; 12
    203a:	4f ad       	ldd	r20, Y+63	; 0x3f
    203c:	2c 97       	sbiw	r28, 0x0c	; 12
    203e:	2d 96       	adiw	r28, 0x0d	; 13
    2040:	5f ad       	ldd	r21, Y+63	; 0x3f
    2042:	2d 97       	sbiw	r28, 0x0d	; 13
    2044:	68 2d       	mov	r22, r8
    2046:	81 e0       	ldi	r24, 0x01	; 1
    2048:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    204c:	f4 e1       	ldi	r31, 0x14	; 20
    204e:	ef 16       	cp	r14, r31
    2050:	f1 04       	cpc	r15, r1
    2052:	31 f4       	brne	.+12     	; 0x2060 <_Z14newton_raphsonv+0x218>
					{
						where+=12;
    2054:	2c e0       	ldi	r18, 0x0C	; 12
    2056:	82 0e       	add	r8, r18
    2058:	91 1c       	adc	r9, r1
						len=0;
						s[0]=0;
    205a:	1d 8e       	std	Y+29, r1	; 0x1d
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    205c:	e1 2c       	mov	r14, r1
    205e:	f1 2c       	mov	r15, r1
    2060:	8f ef       	ldi	r24, 0xFF	; 255
    2062:	94 e3       	ldi	r25, 0x34	; 52
    2064:	ec e0       	ldi	r30, 0x0C	; 12
    2066:	81 50       	subi	r24, 0x01	; 1
    2068:	90 40       	sbci	r25, 0x00	; 0
    206a:	e0 40       	sbci	r30, 0x00	; 0
    206c:	e1 f7       	brne	.-8      	; 0x2066 <_Z14newton_raphsonv+0x21e>
    206e:	00 c0       	rjmp	.+0      	; 0x2070 <_Z14newton_raphsonv+0x228>
    2070:	00 00       	nop
		bool done = 0;
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
			PORTA=1<<c;
			for(int r=0;r<4;r++)
    2072:	0f 5f       	subi	r16, 0xFF	; 255
    2074:	1f 4f       	sbci	r17, 0xFF	; 255
    2076:	f8 e1       	ldi	r31, 0x18	; 24
    2078:	af 0e       	add	r10, r31
    207a:	b1 1c       	adc	r11, r1
    207c:	24 e0       	ldi	r18, 0x04	; 4
    207e:	c2 0e       	add	r12, r18
    2080:	d1 1c       	adc	r13, r1
    2082:	04 30       	cpi	r16, 0x04	; 4
    2084:	11 05       	cpc	r17, r1
    2086:	09 f0       	breq	.+2      	; 0x208a <_Z14newton_raphsonv+0x242>
    2088:	41 cf       	rjmp	.-382    	; 0x1f0c <_Z14newton_raphsonv+0xc4>
    208a:	8f e1       	ldi	r24, 0x1F	; 31
    208c:	9e e4       	ldi	r25, 0x4E	; 78
    208e:	01 97       	sbiw	r24, 0x01	; 1
    2090:	f1 f7       	brne	.-4      	; 0x208e <_Z14newton_raphsonv+0x246>
    2092:	00 c0       	rjmp	.+0      	; 0x2094 <_Z14newton_raphsonv+0x24c>
    2094:	00 00       	nop
	int len=0;
	int where=12;
	while (1)
	{
		bool done = 0;
		for(int c=4;c<8;c++)
    2096:	9f ef       	ldi	r25, 0xFF	; 255
    2098:	69 1a       	sub	r6, r25
    209a:	79 0a       	sbc	r7, r25
    209c:	e6 e0       	ldi	r30, 0x06	; 6
    209e:	2e 0e       	add	r2, r30
    20a0:	31 1c       	adc	r3, r1
    20a2:	f8 e0       	ldi	r31, 0x08	; 8
    20a4:	6f 16       	cp	r6, r31
    20a6:	71 04       	cpc	r7, r1
    20a8:	09 f0       	breq	.+2      	; 0x20ac <_Z14newton_raphsonv+0x264>
    20aa:	1f cf       	rjmp	.-450    	; 0x1eea <_Z14newton_raphsonv+0xa2>
    20ac:	14 cf       	rjmp	.-472    	; 0x1ed6 <_Z14newton_raphsonv+0x8e>
    20ae:	8f e1       	ldi	r24, 0x1F	; 31
    20b0:	9e e4       	ldi	r25, 0x4E	; 78
    20b2:	01 97       	sbiw	r24, 0x01	; 1
    20b4:	f1 f7       	brne	.-4      	; 0x20b2 <_Z14newton_raphsonv+0x26a>
    20b6:	00 c0       	rjmp	.+0      	; 0x20b8 <_Z14newton_raphsonv+0x270>
    20b8:	00 00       	nop
		if(done)
		break;
	}
	double l;
	char s1[20];
	show_and_get(text2 , s1);
    20ba:	be 01       	movw	r22, r28
    20bc:	6f 5c       	subi	r22, 0xCF	; 207
    20be:	7f 4f       	sbci	r23, 0xFF	; 255
    20c0:	ce 01       	movw	r24, r28
    20c2:	0d 96       	adiw	r24, 0x0d	; 13
    20c4:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
	l = ob.eval_exp(s1);
    20c8:	be 01       	movw	r22, r28
    20ca:	6f 5c       	subi	r22, 0xCF	; 207
    20cc:	7f 4f       	sbci	r23, 0xFF	; 255
    20ce:	82 e6       	ldi	r24, 0x62	; 98
    20d0:	92 e0       	ldi	r25, 0x02	; 2
    20d2:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    20d6:	ab 01       	movw	r20, r22
    20d8:	bc 01       	movw	r22, r24
	double ans = newton(s,l);
    20da:	ce 01       	movw	r24, r28
    20dc:	4d 96       	adiw	r24, 0x1d	; 29
    20de:	0e 94 d6 0e 	call	0x1dac	; 0x1dac <_Z6newtonPcd>
    20e2:	6b 01       	movw	r12, r22
    20e4:	7c 01       	movw	r14, r24
	
	//printing ans
	char text[] = "Ans =";
    20e6:	86 e0       	ldi	r24, 0x06	; 6
    20e8:	e1 e7       	ldi	r30, 0x71	; 113
    20ea:	f1 e0       	ldi	r31, 0x01	; 1
    20ec:	de 01       	movw	r26, r28
    20ee:	ab 5b       	subi	r26, 0xBB	; 187
    20f0:	bf 4f       	sbci	r27, 0xFF	; 255
    20f2:	01 90       	ld	r0, Z+
    20f4:	0d 92       	st	X+, r0
    20f6:	8a 95       	dec	r24
    20f8:	e1 f7       	brne	.-8      	; 0x20f2 <_Z14newton_raphsonv+0x2aa>
	show_text(text,1);
    20fa:	61 e0       	ldi	r22, 0x01	; 1
    20fc:	70 e0       	ldi	r23, 0x00	; 0
    20fe:	ce 01       	movw	r24, r28
    2100:	8b 5b       	subi	r24, 0xBB	; 187
    2102:	9f 4f       	sbci	r25, 0xFF	; 255
    2104:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
	dtostrf(ans,1,2,s);
    2108:	8e 01       	movw	r16, r28
    210a:	03 5e       	subi	r16, 0xE3	; 227
    210c:	1f 4f       	sbci	r17, 0xFF	; 255
    210e:	22 e0       	ldi	r18, 0x02	; 2
    2110:	41 e0       	ldi	r20, 0x01	; 1
    2112:	c7 01       	movw	r24, r14
    2114:	b6 01       	movw	r22, r12
    2116:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <dtostrf>
	show_text(s,12);
    211a:	6c e0       	ldi	r22, 0x0C	; 12
    211c:	70 e0       	ldi	r23, 0x00	; 0
    211e:	c8 01       	movw	r24, r16
    2120:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
    2124:	9f ef       	ldi	r25, 0xFF	; 255
    2126:	e4 e3       	ldi	r30, 0x34	; 52
    2128:	fc e0       	ldi	r31, 0x0C	; 12
    212a:	91 50       	subi	r25, 0x01	; 1
    212c:	e0 40       	sbci	r30, 0x00	; 0
    212e:	f0 40       	sbci	r31, 0x00	; 0
    2130:	e1 f7       	brne	.-8      	; 0x212a <_Z14newton_raphsonv+0x2e2>
    2132:	00 c0       	rjmp	.+0      	; 0x2134 <_Z14newton_raphsonv+0x2ec>
    2134:	00 00       	nop
	_delay_ms(500);
    2136:	c2 5b       	subi	r28, 0xB2	; 178
    2138:	df 4f       	sbci	r29, 0xFF	; 255
    213a:	0f b6       	in	r0, 0x3f	; 63
    213c:	f8 94       	cli
    213e:	de bf       	out	0x3e, r29	; 62
    2140:	0f be       	out	0x3f, r0	; 63
    2142:	cd bf       	out	0x3d, r28	; 61
    2144:	df 91       	pop	r29
    2146:	cf 91       	pop	r28
    2148:	1f 91       	pop	r17
    214a:	0f 91       	pop	r16
    214c:	ff 90       	pop	r15
    214e:	ef 90       	pop	r14
    2150:	df 90       	pop	r13
    2152:	cf 90       	pop	r12
    2154:	bf 90       	pop	r11
    2156:	af 90       	pop	r10
    2158:	9f 90       	pop	r9
    215a:	8f 90       	pop	r8
    215c:	7f 90       	pop	r7
    215e:	6f 90       	pop	r6
    2160:	5f 90       	pop	r5
    2162:	4f 90       	pop	r4
    2164:	3f 90       	pop	r3
    2166:	2f 90       	pop	r2
    2168:	08 95       	ret

0000216a <_Z10calculatorv>:
void calculator()
{
    216a:	2f 92       	push	r2
    216c:	3f 92       	push	r3
    216e:	4f 92       	push	r4
    2170:	5f 92       	push	r5
    2172:	6f 92       	push	r6
    2174:	7f 92       	push	r7
    2176:	8f 92       	push	r8
    2178:	9f 92       	push	r9
    217a:	af 92       	push	r10
    217c:	bf 92       	push	r11
    217e:	cf 92       	push	r12
    2180:	df 92       	push	r13
    2182:	ef 92       	push	r14
    2184:	ff 92       	push	r15
    2186:	0f 93       	push	r16
    2188:	1f 93       	push	r17
    218a:	cf 93       	push	r28
    218c:	df 93       	push	r29
    218e:	cd b7       	in	r28, 0x3d	; 61
    2190:	de b7       	in	r29, 0x3e	; 62
    2192:	68 97       	sbiw	r28, 0x18	; 24
    2194:	0f b6       	in	r0, 0x3f	; 63
    2196:	f8 94       	cli
    2198:	de bf       	out	0x3e, r29	; 62
    219a:	0f be       	out	0x3f, r0	; 63
    219c:	cd bf       	out	0x3d, r28	; 61
	LCD_Clear();
    219e:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
	char s[20];
	int len=0;
	int where=1;
    21a2:	88 24       	eor	r8, r8
    21a4:	83 94       	inc	r8
    21a6:	91 2c       	mov	r9, r1
void calculator()
{
	LCD_Clear();
	char s[20];
	int len=0;
    21a8:	e1 2c       	mov	r14, r1
    21aa:	f1 2c       	mov	r15, r1
					else
					{
						append(s , len , mat2[r][c-4]);
						len = strlen(s);
					}
					DisplayText(1,where,s);
    21ac:	9e 01       	movw	r18, r28
    21ae:	2f 5f       	subi	r18, 0xFF	; 255
    21b0:	3f 4f       	sbci	r19, 0xFF	; 255
    21b2:	29 01       	movw	r4, r18
    21b4:	2d 8b       	std	Y+21, r18	; 0x15
    21b6:	5e 8a       	std	Y+22, r5	; 0x16
    21b8:	0f 2e       	mov	r0, r31
    21ba:	f0 e6       	ldi	r31, 0x60	; 96
    21bc:	2f 2e       	mov	r2, r31
    21be:	f0 e0       	ldi	r31, 0x00	; 0
    21c0:	3f 2e       	mov	r3, r31
    21c2:	f0 2d       	mov	r31, r0
	char s[20];
	int len=0;
	int where=1;
	while (1)
	{
		for(int c=4;c<8;c++)
    21c4:	68 94       	set
    21c6:	66 24       	eor	r6, r6
    21c8:	62 f8       	bld	r6, 2
    21ca:	71 2c       	mov	r7, r1
		{
			PORTB=1<<c;
    21cc:	81 e0       	ldi	r24, 0x01	; 1
    21ce:	90 e0       	ldi	r25, 0x00	; 0
    21d0:	06 2c       	mov	r0, r6
    21d2:	02 c0       	rjmp	.+4      	; 0x21d8 <_Z10calculatorv+0x6e>
    21d4:	88 0f       	add	r24, r24
    21d6:	99 1f       	adc	r25, r25
    21d8:	0a 94       	dec	r0
    21da:	e2 f7       	brpl	.-8      	; 0x21d4 <_Z10calculatorv+0x6a>
    21dc:	88 bb       	out	0x18, r24	; 24
			PORTA=1<<c;
    21de:	8b bb       	out	0x1b, r24	; 27
    21e0:	c3 01       	movw	r24, r6
    21e2:	84 54       	subi	r24, 0x44	; 68
    21e4:	9f 4f       	sbci	r25, 0xFF	; 255
    21e6:	6c 01       	movw	r12, r24
    21e8:	51 01       	movw	r10, r2
			for(int r=0;r<4;r++)
    21ea:	00 e0       	ldi	r16, 0x00	; 0
    21ec:	10 e0       	ldi	r17, 0x00	; 0
			{
				if(PINB&(1<<r))
    21ee:	86 b3       	in	r24, 0x16	; 22
    21f0:	90 e0       	ldi	r25, 0x00	; 0
    21f2:	00 2e       	mov	r0, r16
    21f4:	02 c0       	rjmp	.+4      	; 0x21fa <_Z10calculatorv+0x90>
    21f6:	95 95       	asr	r25
    21f8:	87 95       	ror	r24
    21fa:	0a 94       	dec	r0
    21fc:	e2 f7       	brpl	.-8      	; 0x21f6 <_Z10calculatorv+0x8c>
    21fe:	80 ff       	sbrs	r24, 0
    2200:	8b c0       	rjmp	.+278    	; 0x2318 <_Z10calculatorv+0x1ae>
				{
					if(mat[r][c-4]=='C')
    2202:	f6 01       	movw	r30, r12
    2204:	80 81       	ld	r24, Z
    2206:	83 34       	cpi	r24, 0x43	; 67
    2208:	79 f4       	brne	.+30     	; 0x2228 <_Z10calculatorv+0xbe>
					{
						len=0;
						s[0]=0;
    220a:	19 82       	std	Y+1, r1	; 0x01
						where=1;
						LCD_Clear();
    220c:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
						}
						s[len]=mat[r][c-4];
						len+=1;
						s[len]=0;
					}
					DisplayText(1,where,s);
    2210:	4d 89       	ldd	r20, Y+21	; 0x15
    2212:	5e 89       	ldd	r21, Y+22	; 0x16
    2214:	61 e0       	ldi	r22, 0x01	; 1
    2216:	81 e0       	ldi	r24, 0x01	; 1
    2218:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
						s[0]=0;
						where=1;
    221c:	88 24       	eor	r8, r8
    221e:	83 94       	inc	r8
    2220:	91 2c       	mov	r9, r1
			{
				if(PINB&(1<<r))
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
    2222:	e1 2c       	mov	r14, r1
    2224:	f1 2c       	mov	r15, r1
    2226:	6e c0       	rjmp	.+220    	; 0x2304 <_Z10calculatorv+0x19a>
						where=1;
						LCD_Clear();
					}
					else
					{	
						if(mat[r][c-4]=='=')
    2228:	8d 33       	cpi	r24, 0x3D	; 61
    222a:	09 f0       	breq	.+2      	; 0x222e <_Z10calculatorv+0xc4>
    222c:	50 c0       	rjmp	.+160    	; 0x22ce <_Z10calculatorv+0x164>
						{
							double ans=ob.eval_exp(s);
    222e:	be 01       	movw	r22, r28
    2230:	6f 5f       	subi	r22, 0xFF	; 255
    2232:	7f 4f       	sbci	r23, 0xFF	; 255
    2234:	82 e6       	ldi	r24, 0x62	; 98
    2236:	92 e0       	ldi	r25, 0x02	; 2
    2238:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
							 if (*ob.errormsg)
    223c:	20 91 9c 02 	lds	r18, 0x029C	; 0x80029c <ob+0x3a>
    2240:	22 23       	and	r18, r18
    2242:	d9 f0       	breq	.+54     	; 0x227a <_Z10calculatorv+0x110>
							 {
								 LCD_Clear();
    2244:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
    2248:	ff ef       	ldi	r31, 0xFF	; 255
    224a:	20 e7       	ldi	r18, 0x70	; 112
    224c:	32 e0       	ldi	r19, 0x02	; 2
    224e:	f1 50       	subi	r31, 0x01	; 1
    2250:	20 40       	sbci	r18, 0x00	; 0
    2252:	30 40       	sbci	r19, 0x00	; 0
    2254:	e1 f7       	brne	.-8      	; 0x224e <_Z10calculatorv+0xe4>
    2256:	00 c0       	rjmp	.+0      	; 0x2258 <_Z10calculatorv+0xee>
    2258:	00 00       	nop
								 _delay_ms(100);
								 DisplayText(1,1,"Error!");
    225a:	47 e7       	ldi	r20, 0x77	; 119
    225c:	51 e0       	ldi	r21, 0x01	; 1
    225e:	61 e0       	ldi	r22, 0x01	; 1
    2260:	81 e0       	ldi	r24, 0x01	; 1
    2262:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
    2266:	4f ef       	ldi	r20, 0xFF	; 255
    2268:	83 ec       	ldi	r24, 0xC3	; 195
    226a:	99 e0       	ldi	r25, 0x09	; 9
    226c:	41 50       	subi	r20, 0x01	; 1
    226e:	80 40       	sbci	r24, 0x00	; 0
    2270:	90 40       	sbci	r25, 0x00	; 0
    2272:	e1 f7       	brne	.-8      	; 0x226c <_Z10calculatorv+0x102>
    2274:	00 c0       	rjmp	.+0      	; 0x2276 <_Z10calculatorv+0x10c>
    2276:	00 00       	nop
    2278:	c4 c0       	rjmp	.+392    	; 0x2402 <_Z10calculatorv+0x298>
    227a:	ef ef       	ldi	r30, 0xFF	; 255
    227c:	f0 e7       	ldi	r31, 0x70	; 112
    227e:	22 e0       	ldi	r18, 0x02	; 2
    2280:	e1 50       	subi	r30, 0x01	; 1
    2282:	f0 40       	sbci	r31, 0x00	; 0
    2284:	20 40       	sbci	r18, 0x00	; 0
    2286:	e1 f7       	brne	.-8      	; 0x2280 <_Z10calculatorv+0x116>
    2288:	00 c0       	rjmp	.+0      	; 0x228a <_Z10calculatorv+0x120>
    228a:	00 00       	nop
								 _delay_ms(400);
							 }
							 else
							 {
								 _delay_ms(100);
								 dtostrf(ans,1,2,s);
    228c:	8e 01       	movw	r16, r28
    228e:	0f 5f       	subi	r16, 0xFF	; 255
    2290:	1f 4f       	sbci	r17, 0xFF	; 255
    2292:	22 e0       	ldi	r18, 0x02	; 2
    2294:	41 e0       	ldi	r20, 0x01	; 1
    2296:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <dtostrf>
    229a:	3f ef       	ldi	r19, 0xFF	; 255
    229c:	40 e7       	ldi	r20, 0x70	; 112
    229e:	82 e0       	ldi	r24, 0x02	; 2
    22a0:	31 50       	subi	r19, 0x01	; 1
    22a2:	40 40       	sbci	r20, 0x00	; 0
    22a4:	80 40       	sbci	r24, 0x00	; 0
    22a6:	e1 f7       	brne	.-8      	; 0x22a0 <_Z10calculatorv+0x136>
    22a8:	00 c0       	rjmp	.+0      	; 0x22aa <_Z10calculatorv+0x140>
    22aa:	00 00       	nop
								 _delay_ms(100);
								 LCD_Clear();
    22ac:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
    22b0:	9f ef       	ldi	r25, 0xFF	; 255
    22b2:	e0 e7       	ldi	r30, 0x70	; 112
    22b4:	f2 e0       	ldi	r31, 0x02	; 2
    22b6:	91 50       	subi	r25, 0x01	; 1
    22b8:	e0 40       	sbci	r30, 0x00	; 0
    22ba:	f0 40       	sbci	r31, 0x00	; 0
    22bc:	e1 f7       	brne	.-8      	; 0x22b6 <_Z10calculatorv+0x14c>
    22be:	00 c0       	rjmp	.+0      	; 0x22c0 <_Z10calculatorv+0x156>
    22c0:	00 00       	nop
								 _delay_ms(100);
								 DisplayText(1,1,s);
    22c2:	a8 01       	movw	r20, r16
    22c4:	61 e0       	ldi	r22, 0x01	; 1
    22c6:	81 e0       	ldi	r24, 0x01	; 1
    22c8:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
    22cc:	9a c0       	rjmp	.+308    	; 0x2402 <_Z10calculatorv+0x298>
							 }
							return;
						}
						s[len]=mat[r][c-4];
    22ce:	f2 01       	movw	r30, r4
    22d0:	ee 0d       	add	r30, r14
    22d2:	ff 1d       	adc	r31, r15
    22d4:	80 83       	st	Z, r24
						len+=1;
    22d6:	2f ef       	ldi	r18, 0xFF	; 255
    22d8:	e2 1a       	sub	r14, r18
    22da:	f2 0a       	sbc	r15, r18
						s[len]=0;
    22dc:	f2 01       	movw	r30, r4
    22de:	ee 0d       	add	r30, r14
    22e0:	ff 1d       	adc	r31, r15
    22e2:	10 82       	st	Z, r1
					}
					DisplayText(1,where,s);
    22e4:	4d 89       	ldd	r20, Y+21	; 0x15
    22e6:	5e 89       	ldd	r21, Y+22	; 0x16
    22e8:	68 2d       	mov	r22, r8
    22ea:	81 e0       	ldi	r24, 0x01	; 1
    22ec:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    22f0:	34 e1       	ldi	r19, 0x14	; 20
    22f2:	e3 16       	cp	r14, r19
    22f4:	f1 04       	cpc	r15, r1
    22f6:	31 f4       	brne	.+12     	; 0x2304 <_Z10calculatorv+0x19a>
					{
						where+=12;
    22f8:	4c e0       	ldi	r20, 0x0C	; 12
    22fa:	84 0e       	add	r8, r20
    22fc:	91 1c       	adc	r9, r1
						len=0;
						s[0]=0;
    22fe:	19 82       	std	Y+1, r1	; 0x01
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    2300:	e1 2c       	mov	r14, r1
    2302:	f1 2c       	mov	r15, r1
    2304:	8f ef       	ldi	r24, 0xFF	; 255
    2306:	94 e3       	ldi	r25, 0x34	; 52
    2308:	ec e0       	ldi	r30, 0x0C	; 12
    230a:	81 50       	subi	r24, 0x01	; 1
    230c:	90 40       	sbci	r25, 0x00	; 0
    230e:	e0 40       	sbci	r30, 0x00	; 0
    2310:	e1 f7       	brne	.-8      	; 0x230a <_Z10calculatorv+0x1a0>
    2312:	00 c0       	rjmp	.+0      	; 0x2314 <_Z10calculatorv+0x1aa>
    2314:	00 00       	nop
    2316:	57 c0       	rjmp	.+174    	; 0x23c6 <_Z10calculatorv+0x25c>
						s[0]=0;
					}
					_delay_ms(500);
				}
				else if(PINA&(1<<r))
    2318:	89 b3       	in	r24, 0x19	; 25
    231a:	90 e0       	ldi	r25, 0x00	; 0
    231c:	00 2e       	mov	r0, r16
    231e:	02 c0       	rjmp	.+4      	; 0x2324 <_Z10calculatorv+0x1ba>
    2320:	95 95       	asr	r25
    2322:	87 95       	ror	r24
    2324:	0a 94       	dec	r0
    2326:	e2 f7       	brpl	.-8      	; 0x2320 <_Z10calculatorv+0x1b6>
    2328:	80 ff       	sbrs	r24, 0
    232a:	4d c0       	rjmp	.+154    	; 0x23c6 <_Z10calculatorv+0x25c>
				{
					if(mat2[r][c-4][0]=='<')
    232c:	f5 01       	movw	r30, r10
    232e:	80 81       	ld	r24, Z
    2330:	8c 33       	cpi	r24, 0x3C	; 60
    2332:	11 f5       	brne	.+68     	; 0x2378 <_Z10calculatorv+0x20e>
					{
						if(len==0){
    2334:	e1 14       	cp	r14, r1
    2336:	f1 04       	cpc	r15, r1
    2338:	51 f4       	brne	.+20     	; 0x234e <_Z10calculatorv+0x1e4>
    233a:	ff ef       	ldi	r31, 0xFF	; 255
    233c:	24 e3       	ldi	r18, 0x34	; 52
    233e:	3c e0       	ldi	r19, 0x0C	; 12
    2340:	f1 50       	subi	r31, 0x01	; 1
    2342:	20 40       	sbci	r18, 0x00	; 0
    2344:	30 40       	sbci	r19, 0x00	; 0
    2346:	e1 f7       	brne	.-8      	; 0x2340 <_Z10calculatorv+0x1d6>
    2348:	00 c0       	rjmp	.+0      	; 0x234a <_Z10calculatorv+0x1e0>
    234a:	00 00       	nop
    234c:	3c c0       	rjmp	.+120    	; 0x23c6 <_Z10calculatorv+0x25c>
							_delay_ms(500);
							continue;
						}
						s[len-1]=' ';
    234e:	41 e0       	ldi	r20, 0x01	; 1
    2350:	e4 1a       	sub	r14, r20
    2352:	f1 08       	sbc	r15, r1
    2354:	c2 01       	movw	r24, r4
    2356:	8e 0d       	add	r24, r14
    2358:	9f 1d       	adc	r25, r15
    235a:	98 8f       	std	Y+24, r25	; 0x18
    235c:	8f 8b       	std	Y+23, r24	; 0x17
    235e:	20 e2       	ldi	r18, 0x20	; 32
    2360:	fc 01       	movw	r30, r24
    2362:	20 83       	st	Z, r18
						DisplayText(1,where,s);
    2364:	4d 89       	ldd	r20, Y+21	; 0x15
    2366:	5e 89       	ldd	r21, Y+22	; 0x16
    2368:	68 2d       	mov	r22, r8
    236a:	81 e0       	ldi	r24, 0x01	; 1
    236c:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
						len--;
						s[len]=0;
    2370:	ef 89       	ldd	r30, Y+23	; 0x17
    2372:	f8 8d       	ldd	r31, Y+24	; 0x18
    2374:	10 82       	st	Z, r1
    2376:	0e c0       	rjmp	.+28     	; 0x2394 <_Z10calculatorv+0x22a>
					}
					else
					{
						append(s , len , mat2[r][c-4]);
    2378:	a5 01       	movw	r20, r10
    237a:	b7 01       	movw	r22, r14
    237c:	8d 89       	ldd	r24, Y+21	; 0x15
    237e:	9e 89       	ldd	r25, Y+22	; 0x16
    2380:	0e 94 33 08 	call	0x1066	; 0x1066 <_Z6appendPciS_>
						len = strlen(s);
    2384:	f2 01       	movw	r30, r4
    2386:	01 90       	ld	r0, Z+
    2388:	00 20       	and	r0, r0
    238a:	e9 f7       	brne	.-6      	; 0x2386 <_Z10calculatorv+0x21c>
    238c:	31 97       	sbiw	r30, 0x01	; 1
    238e:	7f 01       	movw	r14, r30
    2390:	e4 18       	sub	r14, r4
    2392:	f5 08       	sbc	r15, r5
					}
					DisplayText(1,where,s);
    2394:	4d 89       	ldd	r20, Y+21	; 0x15
    2396:	5e 89       	ldd	r21, Y+22	; 0x16
    2398:	68 2d       	mov	r22, r8
    239a:	81 e0       	ldi	r24, 0x01	; 1
    239c:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    23a0:	f4 e1       	ldi	r31, 0x14	; 20
    23a2:	ef 16       	cp	r14, r31
    23a4:	f1 04       	cpc	r15, r1
    23a6:	31 f4       	brne	.+12     	; 0x23b4 <_Z10calculatorv+0x24a>
					{
						where+=12;
    23a8:	2c e0       	ldi	r18, 0x0C	; 12
    23aa:	82 0e       	add	r8, r18
    23ac:	91 1c       	adc	r9, r1
						len=0;
						s[0]=0;
    23ae:	19 82       	std	Y+1, r1	; 0x01
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    23b0:	e1 2c       	mov	r14, r1
    23b2:	f1 2c       	mov	r15, r1
    23b4:	3f ef       	ldi	r19, 0xFF	; 255
    23b6:	44 e3       	ldi	r20, 0x34	; 52
    23b8:	8c e0       	ldi	r24, 0x0C	; 12
    23ba:	31 50       	subi	r19, 0x01	; 1
    23bc:	40 40       	sbci	r20, 0x00	; 0
    23be:	80 40       	sbci	r24, 0x00	; 0
    23c0:	e1 f7       	brne	.-8      	; 0x23ba <_Z10calculatorv+0x250>
    23c2:	00 c0       	rjmp	.+0      	; 0x23c4 <_Z10calculatorv+0x25a>
    23c4:	00 00       	nop
	{
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
			PORTA=1<<c;
			for(int r=0;r<4;r++)
    23c6:	0f 5f       	subi	r16, 0xFF	; 255
    23c8:	1f 4f       	sbci	r17, 0xFF	; 255
    23ca:	98 e1       	ldi	r25, 0x18	; 24
    23cc:	a9 0e       	add	r10, r25
    23ce:	b1 1c       	adc	r11, r1
    23d0:	e4 e0       	ldi	r30, 0x04	; 4
    23d2:	ce 0e       	add	r12, r30
    23d4:	d1 1c       	adc	r13, r1
    23d6:	04 30       	cpi	r16, 0x04	; 4
    23d8:	11 05       	cpc	r17, r1
    23da:	09 f0       	breq	.+2      	; 0x23de <_Z10calculatorv+0x274>
    23dc:	08 cf       	rjmp	.-496    	; 0x21ee <_Z10calculatorv+0x84>
    23de:	8f e1       	ldi	r24, 0x1F	; 31
    23e0:	9e e4       	ldi	r25, 0x4E	; 78
    23e2:	01 97       	sbiw	r24, 0x01	; 1
    23e4:	f1 f7       	brne	.-4      	; 0x23e2 <_Z10calculatorv+0x278>
    23e6:	00 c0       	rjmp	.+0      	; 0x23e8 <_Z10calculatorv+0x27e>
    23e8:	00 00       	nop
	char s[20];
	int len=0;
	int where=1;
	while (1)
	{
		for(int c=4;c<8;c++)
    23ea:	9f ef       	ldi	r25, 0xFF	; 255
    23ec:	69 1a       	sub	r6, r25
    23ee:	79 0a       	sbc	r7, r25
    23f0:	e6 e0       	ldi	r30, 0x06	; 6
    23f2:	2e 0e       	add	r2, r30
    23f4:	31 1c       	adc	r3, r1
    23f6:	f8 e0       	ldi	r31, 0x08	; 8
    23f8:	6f 16       	cp	r6, r31
    23fa:	71 04       	cpc	r7, r1
    23fc:	09 f0       	breq	.+2      	; 0x2400 <_Z10calculatorv+0x296>
    23fe:	e6 ce       	rjmp	.-564    	; 0x21cc <_Z10calculatorv+0x62>
    2400:	db ce       	rjmp	.-586    	; 0x21b8 <_Z10calculatorv+0x4e>
			}
			
			_delay_ms(10);
		}
	}
    2402:	68 96       	adiw	r28, 0x18	; 24
    2404:	0f b6       	in	r0, 0x3f	; 63
    2406:	f8 94       	cli
    2408:	de bf       	out	0x3e, r29	; 62
    240a:	0f be       	out	0x3f, r0	; 63
    240c:	cd bf       	out	0x3d, r28	; 61
    240e:	df 91       	pop	r29
    2410:	cf 91       	pop	r28
    2412:	1f 91       	pop	r17
    2414:	0f 91       	pop	r16
    2416:	ff 90       	pop	r15
    2418:	ef 90       	pop	r14
    241a:	df 90       	pop	r13
    241c:	cf 90       	pop	r12
    241e:	bf 90       	pop	r11
    2420:	af 90       	pop	r10
    2422:	9f 90       	pop	r9
    2424:	8f 90       	pop	r8
    2426:	7f 90       	pop	r7
    2428:	6f 90       	pop	r6
    242a:	5f 90       	pop	r5
    242c:	4f 90       	pop	r4
    242e:	3f 90       	pop	r3
    2430:	2f 90       	pop	r2
    2432:	08 95       	ret

00002434 <_Z19simpson_integrationPcdd>:



double simpson_integration(char str[] , double a, double b){
    2434:	2f 92       	push	r2
    2436:	3f 92       	push	r3
    2438:	4f 92       	push	r4
    243a:	5f 92       	push	r5
    243c:	6f 92       	push	r6
    243e:	7f 92       	push	r7
    2440:	8f 92       	push	r8
    2442:	9f 92       	push	r9
    2444:	af 92       	push	r10
    2446:	bf 92       	push	r11
    2448:	cf 92       	push	r12
    244a:	df 92       	push	r13
    244c:	ef 92       	push	r14
    244e:	ff 92       	push	r15
    2450:	0f 93       	push	r16
    2452:	1f 93       	push	r17
    2454:	cf 93       	push	r28
    2456:	df 93       	push	r29
    2458:	cd b7       	in	r28, 0x3d	; 61
    245a:	de b7       	in	r29, 0x3e	; 62
    245c:	28 97       	sbiw	r28, 0x08	; 8
    245e:	0f b6       	in	r0, 0x3f	; 63
    2460:	f8 94       	cli
    2462:	de bf       	out	0x3e, r29	; 62
    2464:	0f be       	out	0x3f, r0	; 63
    2466:	cd bf       	out	0x3d, r28	; 61
    2468:	7c 01       	movw	r14, r24
    246a:	2a 01       	movw	r4, r20
    246c:	3b 01       	movw	r6, r22
    246e:	48 01       	movw	r8, r16
    2470:	59 01       	movw	r10, r18
	const int N = 50;
	double h = (b - a) / N;
    2472:	9a 01       	movw	r18, r20
    2474:	ab 01       	movw	r20, r22
    2476:	c5 01       	movw	r24, r10
    2478:	b4 01       	movw	r22, r8
    247a:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    247e:	20 e0       	ldi	r18, 0x00	; 0
    2480:	30 e0       	ldi	r19, 0x00	; 0
    2482:	48 e4       	ldi	r20, 0x48	; 72
    2484:	52 e4       	ldi	r21, 0x42	; 66
    2486:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    248a:	69 83       	std	Y+1, r22	; 0x01
    248c:	7a 83       	std	Y+2, r23	; 0x02
    248e:	8b 83       	std	Y+3, r24	; 0x03
    2490:	9c 83       	std	Y+4, r25	; 0x04
	double s = evaluate_function(str, a) + evaluate_function(str , b);
    2492:	b3 01       	movw	r22, r6
    2494:	a2 01       	movw	r20, r4
    2496:	c7 01       	movw	r24, r14
    2498:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    249c:	6d 83       	std	Y+5, r22	; 0x05
    249e:	7e 83       	std	Y+6, r23	; 0x06
    24a0:	8f 83       	std	Y+7, r24	; 0x07
    24a2:	98 87       	std	Y+8, r25	; 0x08
    24a4:	b5 01       	movw	r22, r10
    24a6:	a4 01       	movw	r20, r8
    24a8:	c7 01       	movw	r24, r14
    24aa:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    24ae:	9b 01       	movw	r18, r22
    24b0:	ac 01       	movw	r20, r24
    24b2:	6d 81       	ldd	r22, Y+5	; 0x05
    24b4:	7e 81       	ldd	r23, Y+6	; 0x06
    24b6:	8f 81       	ldd	r24, Y+7	; 0x07
    24b8:	98 85       	ldd	r25, Y+8	; 0x08
    24ba:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    24be:	4b 01       	movw	r8, r22
    24c0:	5c 01       	movw	r10, r24
	for (int i = 1; i <= N - 1; ++i) {
		double x = a + h * i;
		s += evaluate_function(str , x) * ((i & 1) ? 4 : 2);
    24c2:	29 81       	ldd	r18, Y+1	; 0x01
    24c4:	3a 81       	ldd	r19, Y+2	; 0x02
    24c6:	4b 81       	ldd	r20, Y+3	; 0x03
    24c8:	5c 81       	ldd	r21, Y+4	; 0x04
    24ca:	c3 01       	movw	r24, r6
    24cc:	b2 01       	movw	r22, r4
    24ce:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    24d2:	ab 01       	movw	r20, r22
    24d4:	bc 01       	movw	r22, r24
    24d6:	c7 01       	movw	r24, r14
    24d8:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    24dc:	9b 01       	movw	r18, r22
    24de:	ac 01       	movw	r20, r24

double simpson_integration(char str[] , double a, double b){
	const int N = 50;
	double h = (b - a) / N;
	double s = evaluate_function(str, a) + evaluate_function(str , b);
	for (int i = 1; i <= N - 1; ++i) {
    24e0:	81 e0       	ldi	r24, 0x01	; 1
    24e2:	90 e0       	ldi	r25, 0x00	; 0
		double x = a + h * i;
		s += evaluate_function(str , x) * ((i & 1) ? 4 : 2);
    24e4:	b0 e0       	ldi	r27, 0x00	; 0
    24e6:	a0 e0       	ldi	r26, 0x00	; 0
    24e8:	f0 e8       	ldi	r31, 0x80	; 128
    24ea:	e0 e4       	ldi	r30, 0x40	; 64
    24ec:	d1 2c       	mov	r13, r1
    24ee:	00 e8       	ldi	r16, 0x80	; 128
    24f0:	c1 2c       	mov	r12, r1
    24f2:	31 2c       	mov	r3, r1
    24f4:	21 2c       	mov	r2, r1
    24f6:	10 e4       	ldi	r17, 0x40	; 64
    24f8:	9e 83       	std	Y+6, r25	; 0x06
    24fa:	8d 83       	std	Y+5, r24	; 0x05
    24fc:	25 c0       	rjmp	.+74     	; 0x2548 <_Z19simpson_integrationPcdd+0x114>
    24fe:	2d 81       	ldd	r18, Y+5	; 0x05
    2500:	3e 81       	ldd	r19, Y+6	; 0x06
    2502:	b9 01       	movw	r22, r18
    2504:	33 0f       	add	r19, r19
    2506:	88 0b       	sbc	r24, r24
    2508:	99 0b       	sbc	r25, r25
    250a:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    250e:	29 81       	ldd	r18, Y+1	; 0x01
    2510:	3a 81       	ldd	r19, Y+2	; 0x02
    2512:	4b 81       	ldd	r20, Y+3	; 0x03
    2514:	5c 81       	ldd	r21, Y+4	; 0x04
    2516:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    251a:	a3 01       	movw	r20, r6
    251c:	92 01       	movw	r18, r4
    251e:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    2522:	ab 01       	movw	r20, r22
    2524:	bc 01       	movw	r22, r24
    2526:	c7 01       	movw	r24, r14
    2528:	0e 94 47 08 	call	0x108e	; 0x108e <_Z17evaluate_functionPcd>
    252c:	9b 01       	movw	r18, r22
    252e:	ac 01       	movw	r20, r24
    2530:	8d 81       	ldd	r24, Y+5	; 0x05
    2532:	80 fd       	sbrc	r24, 0
    2534:	05 c0       	rjmp	.+10     	; 0x2540 <_Z19simpson_integrationPcdd+0x10c>
    2536:	bc 2d       	mov	r27, r12
    2538:	a3 2d       	mov	r26, r3
    253a:	f2 2d       	mov	r31, r2
    253c:	e1 2f       	mov	r30, r17
    253e:	04 c0       	rjmp	.+8      	; 0x2548 <_Z19simpson_integrationPcdd+0x114>
    2540:	b0 e0       	ldi	r27, 0x00	; 0
    2542:	ad 2d       	mov	r26, r13
    2544:	f0 2f       	mov	r31, r16
    2546:	e0 e4       	ldi	r30, 0x40	; 64
    2548:	6b 2f       	mov	r22, r27
    254a:	7a 2f       	mov	r23, r26
    254c:	8f 2f       	mov	r24, r31
    254e:	9e 2f       	mov	r25, r30
    2550:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    2554:	9b 01       	movw	r18, r22
    2556:	ac 01       	movw	r20, r24
    2558:	c5 01       	movw	r24, r10
    255a:	b4 01       	movw	r22, r8
    255c:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    2560:	4b 01       	movw	r8, r22
    2562:	5c 01       	movw	r10, r24

double simpson_integration(char str[] , double a, double b){
	const int N = 50;
	double h = (b - a) / N;
	double s = evaluate_function(str, a) + evaluate_function(str , b);
	for (int i = 1; i <= N - 1; ++i) {
    2564:	2d 81       	ldd	r18, Y+5	; 0x05
    2566:	3e 81       	ldd	r19, Y+6	; 0x06
    2568:	2f 5f       	subi	r18, 0xFF	; 255
    256a:	3f 4f       	sbci	r19, 0xFF	; 255
    256c:	3e 83       	std	Y+6, r19	; 0x06
    256e:	2d 83       	std	Y+5, r18	; 0x05
    2570:	22 33       	cpi	r18, 0x32	; 50
    2572:	31 05       	cpc	r19, r1
    2574:	21 f6       	brne	.-120    	; 0x24fe <_Z19simpson_integrationPcdd+0xca>
		double x = a + h * i;
		s += evaluate_function(str , x) * ((i & 1) ? 4 : 2);
	}
	s *= h / 3;
	return s;
    2576:	20 e0       	ldi	r18, 0x00	; 0
    2578:	30 e0       	ldi	r19, 0x00	; 0
    257a:	40 e4       	ldi	r20, 0x40	; 64
    257c:	50 e4       	ldi	r21, 0x40	; 64
    257e:	69 81       	ldd	r22, Y+1	; 0x01
    2580:	7a 81       	ldd	r23, Y+2	; 0x02
    2582:	8b 81       	ldd	r24, Y+3	; 0x03
    2584:	9c 81       	ldd	r25, Y+4	; 0x04
    2586:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    258a:	a5 01       	movw	r20, r10
    258c:	94 01       	movw	r18, r8
    258e:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
}
    2592:	28 96       	adiw	r28, 0x08	; 8
    2594:	0f b6       	in	r0, 0x3f	; 63
    2596:	f8 94       	cli
    2598:	de bf       	out	0x3e, r29	; 62
    259a:	0f be       	out	0x3f, r0	; 63
    259c:	cd bf       	out	0x3d, r28	; 61
    259e:	df 91       	pop	r29
    25a0:	cf 91       	pop	r28
    25a2:	1f 91       	pop	r17
    25a4:	0f 91       	pop	r16
    25a6:	ff 90       	pop	r15
    25a8:	ef 90       	pop	r14
    25aa:	df 90       	pop	r13
    25ac:	cf 90       	pop	r12
    25ae:	bf 90       	pop	r11
    25b0:	af 90       	pop	r10
    25b2:	9f 90       	pop	r9
    25b4:	8f 90       	pop	r8
    25b6:	7f 90       	pop	r7
    25b8:	6f 90       	pop	r6
    25ba:	5f 90       	pop	r5
    25bc:	4f 90       	pop	r4
    25be:	3f 90       	pop	r3
    25c0:	2f 90       	pop	r2
    25c2:	08 95       	ret

000025c4 <_Z7simpsonv>:
void simpson()
{
    25c4:	2f 92       	push	r2
    25c6:	3f 92       	push	r3
    25c8:	4f 92       	push	r4
    25ca:	5f 92       	push	r5
    25cc:	6f 92       	push	r6
    25ce:	7f 92       	push	r7
    25d0:	8f 92       	push	r8
    25d2:	9f 92       	push	r9
    25d4:	af 92       	push	r10
    25d6:	bf 92       	push	r11
    25d8:	cf 92       	push	r12
    25da:	df 92       	push	r13
    25dc:	ef 92       	push	r14
    25de:	ff 92       	push	r15
    25e0:	0f 93       	push	r16
    25e2:	1f 93       	push	r17
    25e4:	cf 93       	push	r28
    25e6:	df 93       	push	r29
    25e8:	cd b7       	in	r28, 0x3d	; 61
    25ea:	de b7       	in	r29, 0x3e	; 62
    25ec:	c9 55       	subi	r28, 0x59	; 89
    25ee:	d1 09       	sbc	r29, r1
    25f0:	0f b6       	in	r0, 0x3f	; 63
    25f2:	f8 94       	cli
    25f4:	de bf       	out	0x3e, r29	; 62
    25f6:	0f be       	out	0x3f, r0	; 63
    25f8:	cd bf       	out	0x3d, r28	; 61
	LCD_Clear();
    25fa:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
	char text1[] = "Input F(x):";
    25fe:	8c e0       	ldi	r24, 0x0C	; 12
    2600:	e5 e5       	ldi	r30, 0x55	; 85
    2602:	f1 e0       	ldi	r31, 0x01	; 1
    2604:	de 01       	movw	r26, r28
    2606:	11 96       	adiw	r26, 0x01	; 1
    2608:	01 90       	ld	r0, Z+
    260a:	0d 92       	st	X+, r0
    260c:	8a 95       	dec	r24
    260e:	e1 f7       	brne	.-8      	; 0x2608 <_Z7simpsonv+0x44>
	char text2[] = "Lower limit:";
    2610:	8d e0       	ldi	r24, 0x0D	; 13
    2612:	ee e7       	ldi	r30, 0x7E	; 126
    2614:	f1 e0       	ldi	r31, 0x01	; 1
    2616:	de 01       	movw	r26, r28
    2618:	1d 96       	adiw	r26, 0x0d	; 13
    261a:	01 90       	ld	r0, Z+
    261c:	0d 92       	st	X+, r0
    261e:	8a 95       	dec	r24
    2620:	e1 f7       	brne	.-8      	; 0x261a <_Z7simpsonv+0x56>
	char text3[] = "Upper limit:";
    2622:	8d e0       	ldi	r24, 0x0D	; 13
    2624:	eb e8       	ldi	r30, 0x8B	; 139
    2626:	f1 e0       	ldi	r31, 0x01	; 1
    2628:	de 01       	movw	r26, r28
    262a:	5a 96       	adiw	r26, 0x1a	; 26
    262c:	01 90       	ld	r0, Z+
    262e:	0d 92       	st	X+, r0
    2630:	8a 95       	dec	r24
    2632:	e1 f7       	brne	.-8      	; 0x262c <_Z7simpsonv+0x68>
	DisplayText(1,1,text1);
    2634:	ae 01       	movw	r20, r28
    2636:	4f 5f       	subi	r20, 0xFF	; 255
    2638:	5f 4f       	sbci	r21, 0xFF	; 255
    263a:	61 e0       	ldi	r22, 0x01	; 1
    263c:	81 e0       	ldi	r24, 0x01	; 1
    263e:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	//input function
	char s[21];
	int len=0;
	int where=12;
    2642:	0f 2e       	mov	r0, r31
    2644:	fc e0       	ldi	r31, 0x0C	; 12
    2646:	8f 2e       	mov	r8, r31
    2648:	91 2c       	mov	r9, r1
    264a:	f0 2d       	mov	r31, r0
	char text2[] = "Lower limit:";
	char text3[] = "Upper limit:";
	DisplayText(1,1,text1);
	//input function
	char s[21];
	int len=0;
    264c:	e1 2c       	mov	r14, r1
    264e:	f1 2c       	mov	r15, r1
					else
					{
						append(s , len , mat2[r][c-4]);
						len = strlen(s);
					}
					DisplayText(1,where,s);
    2650:	2e 01       	movw	r4, r28
    2652:	27 e2       	ldi	r18, 0x27	; 39
    2654:	42 0e       	add	r4, r18
    2656:	51 1c       	adc	r5, r1
    2658:	67 96       	adiw	r28, 0x17	; 23
    265a:	4f ae       	std	Y+63, r4	; 0x3f
    265c:	67 97       	sbiw	r28, 0x17	; 23
    265e:	68 96       	adiw	r28, 0x18	; 24
    2660:	5f ae       	std	Y+63, r5	; 0x3f
    2662:	68 97       	sbiw	r28, 0x18	; 24
    2664:	0f 2e       	mov	r0, r31
    2666:	f0 e6       	ldi	r31, 0x60	; 96
    2668:	2f 2e       	mov	r2, r31
    266a:	f0 e0       	ldi	r31, 0x00	; 0
    266c:	3f 2e       	mov	r3, r31
    266e:	f0 2d       	mov	r31, r0
	int len=0;
	int where=12;
	while (1)
	{
		bool done = 0;
		for(int c=4;c<8;c++)
    2670:	68 94       	set
    2672:	66 24       	eor	r6, r6
    2674:	62 f8       	bld	r6, 2
    2676:	71 2c       	mov	r7, r1
		{
			PORTB=1<<c;
    2678:	81 e0       	ldi	r24, 0x01	; 1
    267a:	90 e0       	ldi	r25, 0x00	; 0
    267c:	06 2c       	mov	r0, r6
    267e:	02 c0       	rjmp	.+4      	; 0x2684 <_Z7simpsonv+0xc0>
    2680:	88 0f       	add	r24, r24
    2682:	99 1f       	adc	r25, r25
    2684:	0a 94       	dec	r0
    2686:	e2 f7       	brpl	.-8      	; 0x2680 <_Z7simpsonv+0xbc>
    2688:	88 bb       	out	0x18, r24	; 24
			PORTA=1<<c;
    268a:	8b bb       	out	0x1b, r24	; 27
    268c:	c3 01       	movw	r24, r6
    268e:	84 54       	subi	r24, 0x44	; 68
    2690:	9f 4f       	sbci	r25, 0xFF	; 255
    2692:	6c 01       	movw	r12, r24
    2694:	51 01       	movw	r10, r2
			for(int r=0;r<4;r++)
    2696:	00 e0       	ldi	r16, 0x00	; 0
    2698:	10 e0       	ldi	r17, 0x00	; 0
			{
				if(PINB&(1<<r))
    269a:	86 b3       	in	r24, 0x16	; 22
    269c:	90 e0       	ldi	r25, 0x00	; 0
    269e:	00 2e       	mov	r0, r16
    26a0:	02 c0       	rjmp	.+4      	; 0x26a6 <_Z7simpsonv+0xe2>
    26a2:	95 95       	asr	r25
    26a4:	87 95       	ror	r24
    26a6:	0a 94       	dec	r0
    26a8:	e2 f7       	brpl	.-8      	; 0x26a2 <_Z7simpsonv+0xde>
    26aa:	80 ff       	sbrs	r24, 0
    26ac:	43 c0       	rjmp	.+134    	; 0x2734 <_Z7simpsonv+0x170>
				{
					if(mat[r][c-4]=='C')
    26ae:	f6 01       	movw	r30, r12
    26b0:	80 81       	ld	r24, Z
    26b2:	83 34       	cpi	r24, 0x43	; 67
    26b4:	99 f4       	brne	.+38     	; 0x26dc <_Z7simpsonv+0x118>
					{
						len=0;
						s[0]=0;
    26b6:	1f a2       	std	Y+39, r1	; 0x27
						where=1;
						LCD_Clear();
    26b8:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
						}
						s[len]=mat[r][c-4];
						len+=1;
						s[len]=0;
					}
					DisplayText(1,where,s);
    26bc:	67 96       	adiw	r28, 0x17	; 23
    26be:	4f ad       	ldd	r20, Y+63	; 0x3f
    26c0:	67 97       	sbiw	r28, 0x17	; 23
    26c2:	68 96       	adiw	r28, 0x18	; 24
    26c4:	5f ad       	ldd	r21, Y+63	; 0x3f
    26c6:	68 97       	sbiw	r28, 0x18	; 24
    26c8:	61 e0       	ldi	r22, 0x01	; 1
    26ca:	81 e0       	ldi	r24, 0x01	; 1
    26cc:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
						s[0]=0;
						where=1;
    26d0:	88 24       	eor	r8, r8
    26d2:	83 94       	inc	r8
    26d4:	91 2c       	mov	r9, r1
			{
				if(PINB&(1<<r))
				{
					if(mat[r][c-4]=='C')
					{
						len=0;
    26d6:	e1 2c       	mov	r14, r1
    26d8:	f1 2c       	mov	r15, r1
    26da:	22 c0       	rjmp	.+68     	; 0x2720 <_Z7simpsonv+0x15c>
						where=1;
						LCD_Clear();
					}
					else
					{
						if(mat[r][c-4]=='=')
    26dc:	8d 33       	cpi	r24, 0x3D	; 61
    26de:	09 f4       	brne	.+2      	; 0x26e2 <_Z7simpsonv+0x11e>
    26e0:	ad c0       	rjmp	.+346    	; 0x283c <_Z7simpsonv+0x278>
						{
							done = 1;
							break;
						}
						s[len]=mat[r][c-4];
    26e2:	f2 01       	movw	r30, r4
    26e4:	ee 0d       	add	r30, r14
    26e6:	ff 1d       	adc	r31, r15
    26e8:	80 83       	st	Z, r24
						len+=1;
    26ea:	ff ef       	ldi	r31, 0xFF	; 255
    26ec:	ef 1a       	sub	r14, r31
    26ee:	ff 0a       	sbc	r15, r31
						s[len]=0;
    26f0:	f2 01       	movw	r30, r4
    26f2:	ee 0d       	add	r30, r14
    26f4:	ff 1d       	adc	r31, r15
    26f6:	10 82       	st	Z, r1
					}
					DisplayText(1,where,s);
    26f8:	67 96       	adiw	r28, 0x17	; 23
    26fa:	4f ad       	ldd	r20, Y+63	; 0x3f
    26fc:	67 97       	sbiw	r28, 0x17	; 23
    26fe:	68 96       	adiw	r28, 0x18	; 24
    2700:	5f ad       	ldd	r21, Y+63	; 0x3f
    2702:	68 97       	sbiw	r28, 0x18	; 24
    2704:	68 2d       	mov	r22, r8
    2706:	81 e0       	ldi	r24, 0x01	; 1
    2708:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    270c:	24 e1       	ldi	r18, 0x14	; 20
    270e:	e2 16       	cp	r14, r18
    2710:	f1 04       	cpc	r15, r1
    2712:	31 f4       	brne	.+12     	; 0x2720 <_Z7simpsonv+0x15c>
					{
						where+=12;
    2714:	8c e0       	ldi	r24, 0x0C	; 12
    2716:	88 0e       	add	r8, r24
    2718:	91 1c       	adc	r9, r1
						len=0;
						s[0]=0;
    271a:	1f a2       	std	Y+39, r1	; 0x27
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    271c:	e1 2c       	mov	r14, r1
    271e:	f1 2c       	mov	r15, r1
    2720:	9f ef       	ldi	r25, 0xFF	; 255
    2722:	e4 e3       	ldi	r30, 0x34	; 52
    2724:	fc e0       	ldi	r31, 0x0C	; 12
    2726:	91 50       	subi	r25, 0x01	; 1
    2728:	e0 40       	sbci	r30, 0x00	; 0
    272a:	f0 40       	sbci	r31, 0x00	; 0
    272c:	e1 f7       	brne	.-8      	; 0x2726 <_Z7simpsonv+0x162>
    272e:	00 c0       	rjmp	.+0      	; 0x2730 <_Z7simpsonv+0x16c>
    2730:	00 00       	nop
    2732:	66 c0       	rjmp	.+204    	; 0x2800 <_Z7simpsonv+0x23c>
						s[0]=0;
					}
					_delay_ms(500);
				}
				else if(PINA&(1<<r))
    2734:	89 b3       	in	r24, 0x19	; 25
    2736:	90 e0       	ldi	r25, 0x00	; 0
    2738:	00 2e       	mov	r0, r16
    273a:	02 c0       	rjmp	.+4      	; 0x2740 <_Z7simpsonv+0x17c>
    273c:	95 95       	asr	r25
    273e:	87 95       	ror	r24
    2740:	0a 94       	dec	r0
    2742:	e2 f7       	brpl	.-8      	; 0x273c <_Z7simpsonv+0x178>
    2744:	80 ff       	sbrs	r24, 0
    2746:	5c c0       	rjmp	.+184    	; 0x2800 <_Z7simpsonv+0x23c>
				{
					if(mat2[r][c-4][0]=='<')
    2748:	f5 01       	movw	r30, r10
    274a:	80 81       	ld	r24, Z
    274c:	8c 33       	cpi	r24, 0x3C	; 60
    274e:	49 f5       	brne	.+82     	; 0x27a2 <_Z7simpsonv+0x1de>
					{
						if(len==0){
    2750:	e1 14       	cp	r14, r1
    2752:	f1 04       	cpc	r15, r1
    2754:	51 f4       	brne	.+20     	; 0x276a <_Z7simpsonv+0x1a6>
    2756:	ff ef       	ldi	r31, 0xFF	; 255
    2758:	24 e3       	ldi	r18, 0x34	; 52
    275a:	8c e0       	ldi	r24, 0x0C	; 12
    275c:	f1 50       	subi	r31, 0x01	; 1
    275e:	20 40       	sbci	r18, 0x00	; 0
    2760:	80 40       	sbci	r24, 0x00	; 0
    2762:	e1 f7       	brne	.-8      	; 0x275c <_Z7simpsonv+0x198>
    2764:	00 c0       	rjmp	.+0      	; 0x2766 <_Z7simpsonv+0x1a2>
    2766:	00 00       	nop
    2768:	4b c0       	rjmp	.+150    	; 0x2800 <_Z7simpsonv+0x23c>
							_delay_ms(500);
							continue;
						}
						s[len-1]=' ';
    276a:	91 e0       	ldi	r25, 0x01	; 1
    276c:	e9 1a       	sub	r14, r25
    276e:	f1 08       	sbc	r15, r1
    2770:	f2 01       	movw	r30, r4
    2772:	ee 0d       	add	r30, r14
    2774:	ff 1d       	adc	r31, r15
    2776:	6a 96       	adiw	r28, 0x1a	; 26
    2778:	ff af       	std	Y+63, r31	; 0x3f
    277a:	ee af       	std	Y+62, r30	; 0x3e
    277c:	6a 97       	sbiw	r28, 0x1a	; 26
    277e:	20 e2       	ldi	r18, 0x20	; 32
    2780:	20 83       	st	Z, r18
						DisplayText(1,where,s);
    2782:	67 96       	adiw	r28, 0x17	; 23
    2784:	4f ad       	ldd	r20, Y+63	; 0x3f
    2786:	67 97       	sbiw	r28, 0x17	; 23
    2788:	68 96       	adiw	r28, 0x18	; 24
    278a:	5f ad       	ldd	r21, Y+63	; 0x3f
    278c:	68 97       	sbiw	r28, 0x18	; 24
    278e:	68 2d       	mov	r22, r8
    2790:	81 e0       	ldi	r24, 0x01	; 1
    2792:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
						len--;
						s[len]=0;
    2796:	6a 96       	adiw	r28, 0x1a	; 26
    2798:	ee ad       	ldd	r30, Y+62	; 0x3e
    279a:	ff ad       	ldd	r31, Y+63	; 0x3f
    279c:	6a 97       	sbiw	r28, 0x1a	; 26
    279e:	10 82       	st	Z, r1
    27a0:	12 c0       	rjmp	.+36     	; 0x27c6 <_Z7simpsonv+0x202>
					}
					else
					{
						append(s , len , mat2[r][c-4]);
    27a2:	a5 01       	movw	r20, r10
    27a4:	b7 01       	movw	r22, r14
    27a6:	67 96       	adiw	r28, 0x17	; 23
    27a8:	8f ad       	ldd	r24, Y+63	; 0x3f
    27aa:	67 97       	sbiw	r28, 0x17	; 23
    27ac:	68 96       	adiw	r28, 0x18	; 24
    27ae:	9f ad       	ldd	r25, Y+63	; 0x3f
    27b0:	68 97       	sbiw	r28, 0x18	; 24
    27b2:	0e 94 33 08 	call	0x1066	; 0x1066 <_Z6appendPciS_>
						len = strlen(s);
    27b6:	f2 01       	movw	r30, r4
    27b8:	01 90       	ld	r0, Z+
    27ba:	00 20       	and	r0, r0
    27bc:	e9 f7       	brne	.-6      	; 0x27b8 <_Z7simpsonv+0x1f4>
    27be:	31 97       	sbiw	r30, 0x01	; 1
    27c0:	7f 01       	movw	r14, r30
    27c2:	e4 18       	sub	r14, r4
    27c4:	f5 08       	sbc	r15, r5
					}
					DisplayText(1,where,s);
    27c6:	67 96       	adiw	r28, 0x17	; 23
    27c8:	4f ad       	ldd	r20, Y+63	; 0x3f
    27ca:	67 97       	sbiw	r28, 0x17	; 23
    27cc:	68 96       	adiw	r28, 0x18	; 24
    27ce:	5f ad       	ldd	r21, Y+63	; 0x3f
    27d0:	68 97       	sbiw	r28, 0x18	; 24
    27d2:	68 2d       	mov	r22, r8
    27d4:	81 e0       	ldi	r24, 0x01	; 1
    27d6:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
					if(len==20)
    27da:	f4 e1       	ldi	r31, 0x14	; 20
    27dc:	ef 16       	cp	r14, r31
    27de:	f1 04       	cpc	r15, r1
    27e0:	31 f4       	brne	.+12     	; 0x27ee <_Z7simpsonv+0x22a>
					{
						where+=12;
    27e2:	2c e0       	ldi	r18, 0x0C	; 12
    27e4:	82 0e       	add	r8, r18
    27e6:	91 1c       	adc	r9, r1
						len=0;
						s[0]=0;
    27e8:	1f a2       	std	Y+39, r1	; 0x27
					}
					DisplayText(1,where,s);
					if(len==20)
					{
						where+=12;
						len=0;
    27ea:	e1 2c       	mov	r14, r1
    27ec:	f1 2c       	mov	r15, r1
    27ee:	8f ef       	ldi	r24, 0xFF	; 255
    27f0:	94 e3       	ldi	r25, 0x34	; 52
    27f2:	ec e0       	ldi	r30, 0x0C	; 12
    27f4:	81 50       	subi	r24, 0x01	; 1
    27f6:	90 40       	sbci	r25, 0x00	; 0
    27f8:	e0 40       	sbci	r30, 0x00	; 0
    27fa:	e1 f7       	brne	.-8      	; 0x27f4 <_Z7simpsonv+0x230>
    27fc:	00 c0       	rjmp	.+0      	; 0x27fe <_Z7simpsonv+0x23a>
    27fe:	00 00       	nop
		bool done = 0;
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
			PORTA=1<<c;
			for(int r=0;r<4;r++)
    2800:	0f 5f       	subi	r16, 0xFF	; 255
    2802:	1f 4f       	sbci	r17, 0xFF	; 255
    2804:	f8 e1       	ldi	r31, 0x18	; 24
    2806:	af 0e       	add	r10, r31
    2808:	b1 1c       	adc	r11, r1
    280a:	24 e0       	ldi	r18, 0x04	; 4
    280c:	c2 0e       	add	r12, r18
    280e:	d1 1c       	adc	r13, r1
    2810:	04 30       	cpi	r16, 0x04	; 4
    2812:	11 05       	cpc	r17, r1
    2814:	09 f0       	breq	.+2      	; 0x2818 <_Z7simpsonv+0x254>
    2816:	41 cf       	rjmp	.-382    	; 0x269a <_Z7simpsonv+0xd6>
    2818:	8f e1       	ldi	r24, 0x1F	; 31
    281a:	9e e4       	ldi	r25, 0x4E	; 78
    281c:	01 97       	sbiw	r24, 0x01	; 1
    281e:	f1 f7       	brne	.-4      	; 0x281c <_Z7simpsonv+0x258>
    2820:	00 c0       	rjmp	.+0      	; 0x2822 <_Z7simpsonv+0x25e>
    2822:	00 00       	nop
	int len=0;
	int where=12;
	while (1)
	{
		bool done = 0;
		for(int c=4;c<8;c++)
    2824:	9f ef       	ldi	r25, 0xFF	; 255
    2826:	69 1a       	sub	r6, r25
    2828:	79 0a       	sbc	r7, r25
    282a:	e6 e0       	ldi	r30, 0x06	; 6
    282c:	2e 0e       	add	r2, r30
    282e:	31 1c       	adc	r3, r1
    2830:	f8 e0       	ldi	r31, 0x08	; 8
    2832:	6f 16       	cp	r6, r31
    2834:	71 04       	cpc	r7, r1
    2836:	09 f0       	breq	.+2      	; 0x283a <_Z7simpsonv+0x276>
    2838:	1f cf       	rjmp	.-450    	; 0x2678 <_Z7simpsonv+0xb4>
    283a:	14 cf       	rjmp	.-472    	; 0x2664 <_Z7simpsonv+0xa0>
    283c:	8f e1       	ldi	r24, 0x1F	; 31
    283e:	9e e4       	ldi	r25, 0x4E	; 78
    2840:	01 97       	sbiw	r24, 0x01	; 1
    2842:	f1 f7       	brne	.-4      	; 0x2840 <_Z7simpsonv+0x27c>
    2844:	00 c0       	rjmp	.+0      	; 0x2846 <_Z7simpsonv+0x282>
    2846:	00 00       	nop
			break;
		}
		if(done)
		break;
	}
	LCD_Clear();
    2848:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
	double l , r;
	char s1[20];
	show_and_get(text2 , s1);
    284c:	be 01       	movw	r22, r28
    284e:	64 5c       	subi	r22, 0xC4	; 196
    2850:	7f 4f       	sbci	r23, 0xFF	; 255
    2852:	ce 01       	movw	r24, r28
    2854:	0d 96       	adiw	r24, 0x0d	; 13
    2856:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
	l = ob.eval_exp(s1);
    285a:	be 01       	movw	r22, r28
    285c:	64 5c       	subi	r22, 0xC4	; 196
    285e:	7f 4f       	sbci	r23, 0xFF	; 255
    2860:	82 e6       	ldi	r24, 0x62	; 98
    2862:	92 e0       	ldi	r25, 0x02	; 2
    2864:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    2868:	6b 01       	movw	r12, r22
    286a:	7c 01       	movw	r14, r24
	show_and_get(text3 , s1);
    286c:	be 01       	movw	r22, r28
    286e:	64 5c       	subi	r22, 0xC4	; 196
    2870:	7f 4f       	sbci	r23, 0xFF	; 255
    2872:	ce 01       	movw	r24, r28
    2874:	4a 96       	adiw	r24, 0x1a	; 26
    2876:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
	r = ob.eval_exp(s1);
    287a:	be 01       	movw	r22, r28
    287c:	64 5c       	subi	r22, 0xC4	; 196
    287e:	7f 4f       	sbci	r23, 0xFF	; 255
    2880:	82 e6       	ldi	r24, 0x62	; 98
    2882:	92 e0       	ldi	r25, 0x02	; 2
    2884:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    2888:	8b 01       	movw	r16, r22
    288a:	9c 01       	movw	r18, r24
	double ans = simpson_integration(s,l,r);
    288c:	b7 01       	movw	r22, r14
    288e:	a6 01       	movw	r20, r12
    2890:	ce 01       	movw	r24, r28
    2892:	87 96       	adiw	r24, 0x27	; 39
    2894:	0e 94 1a 12 	call	0x2434	; 0x2434 <_Z19simpson_integrationPcdd>
    2898:	6b 01       	movw	r12, r22
    289a:	7c 01       	movw	r14, r24
	
	//printing ans
	char text[] = "Ans =";
    289c:	86 e0       	ldi	r24, 0x06	; 6
    289e:	e1 e7       	ldi	r30, 0x71	; 113
    28a0:	f1 e0       	ldi	r31, 0x01	; 1
    28a2:	de 01       	movw	r26, r28
    28a4:	a0 5b       	subi	r26, 0xB0	; 176
    28a6:	bf 4f       	sbci	r27, 0xFF	; 255
    28a8:	01 90       	ld	r0, Z+
    28aa:	0d 92       	st	X+, r0
    28ac:	8a 95       	dec	r24
    28ae:	e1 f7       	brne	.-8      	; 0x28a8 <_Z7simpsonv+0x2e4>
	show_text(text,1);
    28b0:	61 e0       	ldi	r22, 0x01	; 1
    28b2:	70 e0       	ldi	r23, 0x00	; 0
    28b4:	ce 01       	movw	r24, r28
    28b6:	80 5b       	subi	r24, 0xB0	; 176
    28b8:	9f 4f       	sbci	r25, 0xFF	; 255
    28ba:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
	dtostrf(ans,1,2,s);
    28be:	8e 01       	movw	r16, r28
    28c0:	09 5d       	subi	r16, 0xD9	; 217
    28c2:	1f 4f       	sbci	r17, 0xFF	; 255
    28c4:	22 e0       	ldi	r18, 0x02	; 2
    28c6:	41 e0       	ldi	r20, 0x01	; 1
    28c8:	c7 01       	movw	r24, r14
    28ca:	b6 01       	movw	r22, r12
    28cc:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <dtostrf>
	show_text(s,12);
    28d0:	6c e0       	ldi	r22, 0x0C	; 12
    28d2:	70 e0       	ldi	r23, 0x00	; 0
    28d4:	c8 01       	movw	r24, r16
    28d6:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
    28da:	9f ef       	ldi	r25, 0xFF	; 255
    28dc:	e4 e3       	ldi	r30, 0x34	; 52
    28de:	fc e0       	ldi	r31, 0x0C	; 12
    28e0:	91 50       	subi	r25, 0x01	; 1
    28e2:	e0 40       	sbci	r30, 0x00	; 0
    28e4:	f0 40       	sbci	r31, 0x00	; 0
    28e6:	e1 f7       	brne	.-8      	; 0x28e0 <_Z7simpsonv+0x31c>
    28e8:	00 c0       	rjmp	.+0      	; 0x28ea <_Z7simpsonv+0x326>
    28ea:	00 00       	nop
	_delay_ms(500);
    28ec:	c7 5a       	subi	r28, 0xA7	; 167
    28ee:	df 4f       	sbci	r29, 0xFF	; 255
    28f0:	0f b6       	in	r0, 0x3f	; 63
    28f2:	f8 94       	cli
    28f4:	de bf       	out	0x3e, r29	; 62
    28f6:	0f be       	out	0x3f, r0	; 63
    28f8:	cd bf       	out	0x3d, r28	; 61
    28fa:	df 91       	pop	r29
    28fc:	cf 91       	pop	r28
    28fe:	1f 91       	pop	r17
    2900:	0f 91       	pop	r16
    2902:	ff 90       	pop	r15
    2904:	ef 90       	pop	r14
    2906:	df 90       	pop	r13
    2908:	cf 90       	pop	r12
    290a:	bf 90       	pop	r11
    290c:	af 90       	pop	r10
    290e:	9f 90       	pop	r9
    2910:	8f 90       	pop	r8
    2912:	7f 90       	pop	r7
    2914:	6f 90       	pop	r6
    2916:	5f 90       	pop	r5
    2918:	4f 90       	pop	r4
    291a:	3f 90       	pop	r3
    291c:	2f 90       	pop	r2
    291e:	08 95       	ret

00002920 <_Z10gauss_algoii>:
double ans[3];
double a[3][4];
int where[3];

int gauss_algo (int n, int m)
{
    2920:	2f 92       	push	r2
    2922:	3f 92       	push	r3
    2924:	4f 92       	push	r4
    2926:	5f 92       	push	r5
    2928:	6f 92       	push	r6
    292a:	7f 92       	push	r7
    292c:	8f 92       	push	r8
    292e:	9f 92       	push	r9
    2930:	af 92       	push	r10
    2932:	bf 92       	push	r11
    2934:	cf 92       	push	r12
    2936:	df 92       	push	r13
    2938:	ef 92       	push	r14
    293a:	ff 92       	push	r15
    293c:	0f 93       	push	r16
    293e:	1f 93       	push	r17
    2940:	cf 93       	push	r28
    2942:	df 93       	push	r29
    2944:	cd b7       	in	r28, 0x3d	; 61
    2946:	de b7       	in	r29, 0x3e	; 62
    2948:	2e 97       	sbiw	r28, 0x0e	; 14
    294a:	0f b6       	in	r0, 0x3f	; 63
    294c:	f8 94       	cli
    294e:	de bf       	out	0x3e, r29	; 62
    2950:	0f be       	out	0x3f, r0	; 63
    2952:	cd bf       	out	0x3d, r28	; 61
    2954:	2c 01       	movw	r4, r24
    2956:	1b 01       	movw	r2, r22
	//returns 1 if a single solution
	//returns 2 if infinite solution
	//returns 0 if no solution
	//returns a solution if there is at least one solution
	const double EPS = 1e-5;
	for(int i=0; i<m; i++)
    2958:	16 16       	cp	r1, r22
    295a:	17 06       	cpc	r1, r23
    295c:	0c f0       	brlt	.+2      	; 0x2960 <_Z10gauss_algoii+0x40>
    295e:	32 c1       	rjmp	.+612    	; 0x2bc4 <_Z10gauss_algoii+0x2a4>
		where[i] = -1;
    2960:	8f ef       	ldi	r24, 0xFF	; 255
    2962:	9f ef       	ldi	r25, 0xFF	; 255
    2964:	90 93 21 02 	sts	0x0221, r25	; 0x800221 <__data_end+0x1>
    2968:	80 93 20 02 	sts	0x0220, r24	; 0x800220 <__data_end>
	//returns 1 if a single solution
	//returns 2 if infinite solution
	//returns 0 if no solution
	//returns a solution if there is at least one solution
	const double EPS = 1e-5;
	for(int i=0; i<m; i++)
    296c:	62 30       	cpi	r22, 0x02	; 2
    296e:	71 05       	cpc	r23, r1
    2970:	0c f4       	brge	.+2      	; 0x2974 <_Z10gauss_algoii+0x54>
    2972:	17 c2       	rjmp	.+1070   	; 0x2da2 <_Z10gauss_algoii+0x482>
		where[i] = -1;
    2974:	90 93 23 02 	sts	0x0223, r25	; 0x800223 <__data_end+0x3>
    2978:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <__data_end+0x2>
	//returns 1 if a single solution
	//returns 2 if infinite solution
	//returns 0 if no solution
	//returns a solution if there is at least one solution
	const double EPS = 1e-5;
	for(int i=0; i<m; i++)
    297c:	63 30       	cpi	r22, 0x03	; 3
    297e:	71 05       	cpc	r23, r1
    2980:	0c f4       	brge	.+2      	; 0x2984 <_Z10gauss_algoii+0x64>
    2982:	0f c2       	rjmp	.+1054   	; 0x2da2 <_Z10gauss_algoii+0x482>
		where[i] = -1;
    2984:	90 93 25 02 	sts	0x0225, r25	; 0x800225 <__data_end+0x5>
    2988:	80 93 24 02 	sts	0x0224, r24	; 0x800224 <__data_end+0x4>
    298c:	0a c2       	rjmp	.+1044   	; 0x2da2 <_Z10gauss_algoii+0x482>
    298e:	89 85       	ldd	r24, Y+9	; 0x09
    2990:	9a 85       	ldd	r25, Y+10	; 0x0a
    2992:	04 96       	adiw	r24, 0x04	; 4
    2994:	9a 87       	std	Y+10, r25	; 0x0a
    2996:	89 87       	std	Y+9, r24	; 0x09
    2998:	eb 85       	ldd	r30, Y+11	; 0x0b
    299a:	fc 85       	ldd	r31, Y+12	; 0x0c
    299c:	32 96       	adiw	r30, 0x02	; 2
    299e:	fc 87       	std	Y+12, r31	; 0x0c
    29a0:	eb 87       	std	Y+11, r30	; 0x0b
	for (int col=0, row=0; col<m && row<n; ++col)
    29a2:	c4 14       	cp	r12, r4
    29a4:	d5 04       	cpc	r13, r5
    29a6:	0c f0       	brlt	.+2      	; 0x29aa <_Z10gauss_algoii+0x8a>
    29a8:	10 c2       	rjmp	.+1056   	; 0x2dca <_Z10gauss_algoii+0x4aa>
    29aa:	56 01       	movw	r10, r12
    29ac:	c6 01       	movw	r24, r12
	{
		int sel = row;
		for (int i=row; i<n; ++i)
    29ae:	84 15       	cp	r24, r4
    29b0:	95 05       	cpc	r25, r5
    29b2:	0c f0       	brlt	.+2      	; 0x29b6 <_Z10gauss_algoii+0x96>
    29b4:	4a c0       	rjmp	.+148    	; 0x2a4a <_Z10gauss_algoii+0x12a>
    29b6:	96 01       	movw	r18, r12
    29b8:	22 0f       	add	r18, r18
    29ba:	33 1f       	adc	r19, r19
    29bc:	22 0f       	add	r18, r18
    29be:	33 1f       	adc	r19, r19
    29c0:	28 0d       	add	r18, r8
    29c2:	39 1d       	adc	r19, r9
    29c4:	22 0f       	add	r18, r18
    29c6:	33 1f       	adc	r19, r19
    29c8:	22 0f       	add	r18, r18
    29ca:	33 1f       	adc	r19, r19
    29cc:	2a 5d       	subi	r18, 0xDA	; 218
    29ce:	3d 4f       	sbci	r19, 0xFD	; 253
    29d0:	86 01       	movw	r16, r12
    29d2:	36 01       	movw	r6, r12
    29d4:	3a 83       	std	Y+2, r19	; 0x02
    29d6:	29 83       	std	Y+1, r18	; 0x01
		if (abs (a[i][col]) > abs (a[sel][col]))
    29d8:	e9 81       	ldd	r30, Y+1	; 0x01
    29da:	fa 81       	ldd	r31, Y+2	; 0x02
    29dc:	60 81       	ld	r22, Z
    29de:	71 81       	ldd	r23, Z+1	; 0x01
    29e0:	82 81       	ldd	r24, Z+2	; 0x02
    29e2:	93 81       	ldd	r25, Z+3	; 0x03
    29e4:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__fixsfsi>
    29e8:	7b 01       	movw	r14, r22
    29ea:	77 23       	and	r23, r23
    29ec:	24 f4       	brge	.+8      	; 0x29f6 <_Z10gauss_algoii+0xd6>
    29ee:	ee 24       	eor	r14, r14
    29f0:	ff 24       	eor	r15, r15
    29f2:	e6 1a       	sub	r14, r22
    29f4:	f7 0a       	sbc	r15, r23
    29f6:	f3 01       	movw	r30, r6
    29f8:	ee 0f       	add	r30, r30
    29fa:	ff 1f       	adc	r31, r31
    29fc:	ee 0f       	add	r30, r30
    29fe:	ff 1f       	adc	r31, r31
    2a00:	e8 0d       	add	r30, r8
    2a02:	f9 1d       	adc	r31, r9
    2a04:	ee 0f       	add	r30, r30
    2a06:	ff 1f       	adc	r31, r31
    2a08:	ee 0f       	add	r30, r30
    2a0a:	ff 1f       	adc	r31, r31
    2a0c:	ea 5d       	subi	r30, 0xDA	; 218
    2a0e:	fd 4f       	sbci	r31, 0xFD	; 253
    2a10:	60 81       	ld	r22, Z
    2a12:	71 81       	ldd	r23, Z+1	; 0x01
    2a14:	82 81       	ldd	r24, Z+2	; 0x02
    2a16:	93 81       	ldd	r25, Z+3	; 0x03
    2a18:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__fixsfsi>
    2a1c:	9b 01       	movw	r18, r22
    2a1e:	77 23       	and	r23, r23
    2a20:	24 f4       	brge	.+8      	; 0x2a2a <_Z10gauss_algoii+0x10a>
    2a22:	22 27       	eor	r18, r18
    2a24:	33 27       	eor	r19, r19
    2a26:	26 1b       	sub	r18, r22
    2a28:	37 0b       	sbc	r19, r23
    2a2a:	2e 15       	cp	r18, r14
    2a2c:	3f 05       	cpc	r19, r15
    2a2e:	0c f4       	brge	.+2      	; 0x2a32 <_Z10gauss_algoii+0x112>
    2a30:	38 01       	movw	r6, r16
	for(int i=0; i<m; i++)
		where[i] = -1;
	for (int col=0, row=0; col<m && row<n; ++col)
	{
		int sel = row;
		for (int i=row; i<n; ++i)
    2a32:	0f 5f       	subi	r16, 0xFF	; 255
    2a34:	1f 4f       	sbci	r17, 0xFF	; 255
    2a36:	29 81       	ldd	r18, Y+1	; 0x01
    2a38:	3a 81       	ldd	r19, Y+2	; 0x02
    2a3a:	20 5f       	subi	r18, 0xF0	; 240
    2a3c:	3f 4f       	sbci	r19, 0xFF	; 255
    2a3e:	3a 83       	std	Y+2, r19	; 0x02
    2a40:	29 83       	std	Y+1, r18	; 0x01
    2a42:	04 15       	cp	r16, r4
    2a44:	15 05       	cpc	r17, r5
    2a46:	44 f2       	brlt	.-112    	; 0x29d8 <_Z10gauss_algoii+0xb8>
    2a48:	01 c0       	rjmp	.+2      	; 0x2a4c <_Z10gauss_algoii+0x12c>
    2a4a:	36 01       	movw	r6, r12
		if (abs (a[i][col]) > abs (a[sel][col]))
		sel = i;
		if (abs (a[sel][col]) < EPS)
    2a4c:	f3 01       	movw	r30, r6
    2a4e:	ee 0f       	add	r30, r30
    2a50:	ff 1f       	adc	r31, r31
    2a52:	ee 0f       	add	r30, r30
    2a54:	ff 1f       	adc	r31, r31
    2a56:	e8 0d       	add	r30, r8
    2a58:	f9 1d       	adc	r31, r9
    2a5a:	ee 0f       	add	r30, r30
    2a5c:	ff 1f       	adc	r31, r31
    2a5e:	ee 0f       	add	r30, r30
    2a60:	ff 1f       	adc	r31, r31
    2a62:	ea 5d       	subi	r30, 0xDA	; 218
    2a64:	fd 4f       	sbci	r31, 0xFD	; 253
    2a66:	60 81       	ld	r22, Z
    2a68:	71 81       	ldd	r23, Z+1	; 0x01
    2a6a:	82 81       	ldd	r24, Z+2	; 0x02
    2a6c:	93 81       	ldd	r25, Z+3	; 0x03
    2a6e:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__fixsfsi>
    2a72:	9b 01       	movw	r18, r22
    2a74:	77 23       	and	r23, r23
    2a76:	24 f4       	brge	.+8      	; 0x2a80 <_Z10gauss_algoii+0x160>
    2a78:	22 27       	eor	r18, r18
    2a7a:	33 27       	eor	r19, r19
    2a7c:	26 1b       	sub	r18, r22
    2a7e:	37 0b       	sbc	r19, r23
    2a80:	b9 01       	movw	r22, r18
    2a82:	33 0f       	add	r19, r19
    2a84:	88 0b       	sbc	r24, r24
    2a86:	99 0b       	sbc	r25, r25
    2a88:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    2a8c:	2c ea       	ldi	r18, 0xAC	; 172
    2a8e:	35 ec       	ldi	r19, 0xC5	; 197
    2a90:	47 e2       	ldi	r20, 0x27	; 39
    2a92:	57 e3       	ldi	r21, 0x37	; 55
    2a94:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <__cmpsf2>
    2a98:	88 23       	and	r24, r24
    2a9a:	0c f4       	brge	.+2      	; 0x2a9e <_Z10gauss_algoii+0x17e>
    2a9c:	82 c0       	rjmp	.+260    	; 0x2ba2 <_Z10gauss_algoii+0x282>
		continue;
		for (int i=col; i<=m; ++i)
    2a9e:	28 14       	cp	r2, r8
    2aa0:	39 04       	cpc	r3, r9
    2aa2:	0c f4       	brge	.+2      	; 0x2aa6 <_Z10gauss_algoii+0x186>
    2aa4:	98 c1       	rjmp	.+816    	; 0x2dd6 <_Z10gauss_algoii+0x4b6>
    2aa6:	f3 01       	movw	r30, r6
    2aa8:	ee 0f       	add	r30, r30
    2aaa:	ff 1f       	adc	r31, r31
    2aac:	ee 0f       	add	r30, r30
    2aae:	ff 1f       	adc	r31, r31
    2ab0:	e8 0d       	add	r30, r8
    2ab2:	f9 1d       	adc	r31, r9
    2ab4:	ee 0f       	add	r30, r30
    2ab6:	ff 1f       	adc	r31, r31
    2ab8:	ee 0f       	add	r30, r30
    2aba:	ff 1f       	adc	r31, r31
    2abc:	ea 5d       	subi	r30, 0xDA	; 218
    2abe:	fd 4f       	sbci	r31, 0xFD	; 253
    2ac0:	d5 01       	movw	r26, r10
    2ac2:	aa 0f       	add	r26, r26
    2ac4:	bb 1f       	adc	r27, r27
    2ac6:	aa 0f       	add	r26, r26
    2ac8:	bb 1f       	adc	r27, r27
    2aca:	a8 0d       	add	r26, r8
    2acc:	b9 1d       	adc	r27, r9
    2ace:	aa 0f       	add	r26, r26
    2ad0:	bb 1f       	adc	r27, r27
    2ad2:	aa 0f       	add	r26, r26
    2ad4:	bb 1f       	adc	r27, r27
    2ad6:	aa 5d       	subi	r26, 0xDA	; 218
    2ad8:	bd 4f       	sbci	r27, 0xFD	; 253
    2ada:	c4 01       	movw	r24, r8
		{
			double tmp = a[sel][i];
    2adc:	40 81       	ld	r20, Z
    2ade:	51 81       	ldd	r21, Z+1	; 0x01
    2ae0:	62 81       	ldd	r22, Z+2	; 0x02
    2ae2:	73 81       	ldd	r23, Z+3	; 0x03
			a[sel][i] = a[row][i];
    2ae4:	0d 91       	ld	r16, X+
    2ae6:	1d 91       	ld	r17, X+
    2ae8:	2d 91       	ld	r18, X+
    2aea:	3c 91       	ld	r19, X
    2aec:	13 97       	sbiw	r26, 0x03	; 3
    2aee:	01 93       	st	Z+, r16
    2af0:	11 93       	st	Z+, r17
    2af2:	21 93       	st	Z+, r18
    2af4:	31 93       	st	Z+, r19
			a[row][i] = tmp;
    2af6:	4d 93       	st	X+, r20
    2af8:	5d 93       	st	X+, r21
    2afa:	6d 93       	st	X+, r22
    2afc:	7d 93       	st	X+, r23
		for (int i=row; i<n; ++i)
		if (abs (a[i][col]) > abs (a[sel][col]))
		sel = i;
		if (abs (a[sel][col]) < EPS)
		continue;
		for (int i=col; i<=m; ++i)
    2afe:	01 96       	adiw	r24, 0x01	; 1
    2b00:	28 16       	cp	r2, r24
    2b02:	39 06       	cpc	r3, r25
    2b04:	5c f7       	brge	.-42     	; 0x2adc <_Z10gauss_algoii+0x1bc>
    2b06:	67 c1       	rjmp	.+718    	; 0x2dd6 <_Z10gauss_algoii+0x4b6>
			a[sel][i] = a[row][i];
			a[row][i] = tmp;
		}
		where[col] = row;
		for (int i=0; i<n; ++i)
		if (i != row)
    2b08:	ae 14       	cp	r10, r14
    2b0a:	bf 04       	cpc	r11, r15
    2b0c:	e1 f1       	breq	.+120    	; 0x2b86 <_Z10gauss_algoii+0x266>
		{
			double c = a[i][col] / a[row][col];
    2b0e:	ed 81       	ldd	r30, Y+5	; 0x05
    2b10:	fe 81       	ldd	r31, Y+6	; 0x06
    2b12:	20 81       	ld	r18, Z
    2b14:	31 81       	ldd	r19, Z+1	; 0x01
    2b16:	42 81       	ldd	r20, Z+2	; 0x02
    2b18:	53 81       	ldd	r21, Z+3	; 0x03
    2b1a:	f6 01       	movw	r30, r12
    2b1c:	60 81       	ld	r22, Z
    2b1e:	71 81       	ldd	r23, Z+1	; 0x01
    2b20:	82 81       	ldd	r24, Z+2	; 0x02
    2b22:	93 81       	ldd	r25, Z+3	; 0x03
    2b24:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    2b28:	69 83       	std	Y+1, r22	; 0x01
    2b2a:	7a 83       	std	Y+2, r23	; 0x02
    2b2c:	8b 83       	std	Y+3, r24	; 0x03
    2b2e:	9c 83       	std	Y+4, r25	; 0x04
			for (int j=col; j<=m; ++j)
    2b30:	28 14       	cp	r2, r8
    2b32:	39 04       	cpc	r3, r9
    2b34:	44 f1       	brlt	.+80     	; 0x2b86 <_Z10gauss_algoii+0x266>
    2b36:	de 86       	std	Y+14, r13	; 0x0e
    2b38:	cd 86       	std	Y+13, r12	; 0x0d
    2b3a:	6f 80       	ldd	r6, Y+7	; 0x07
    2b3c:	78 84       	ldd	r7, Y+8	; 0x08
    2b3e:	84 01       	movw	r16, r8
			a[i][j] -= a[row][j] * c;
    2b40:	f3 01       	movw	r30, r6
    2b42:	21 91       	ld	r18, Z+
    2b44:	31 91       	ld	r19, Z+
    2b46:	41 91       	ld	r20, Z+
    2b48:	51 91       	ld	r21, Z+
    2b4a:	3f 01       	movw	r6, r30
    2b4c:	69 81       	ldd	r22, Y+1	; 0x01
    2b4e:	7a 81       	ldd	r23, Y+2	; 0x02
    2b50:	8b 81       	ldd	r24, Y+3	; 0x03
    2b52:	9c 81       	ldd	r25, Y+4	; 0x04
    2b54:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    2b58:	9b 01       	movw	r18, r22
    2b5a:	ac 01       	movw	r20, r24
    2b5c:	ed 85       	ldd	r30, Y+13	; 0x0d
    2b5e:	fe 85       	ldd	r31, Y+14	; 0x0e
    2b60:	60 81       	ld	r22, Z
    2b62:	71 81       	ldd	r23, Z+1	; 0x01
    2b64:	82 81       	ldd	r24, Z+2	; 0x02
    2b66:	93 81       	ldd	r25, Z+3	; 0x03
    2b68:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    2b6c:	ed 85       	ldd	r30, Y+13	; 0x0d
    2b6e:	fe 85       	ldd	r31, Y+14	; 0x0e
    2b70:	61 93       	st	Z+, r22
    2b72:	71 93       	st	Z+, r23
    2b74:	81 93       	st	Z+, r24
    2b76:	91 93       	st	Z+, r25
    2b78:	fe 87       	std	Y+14, r31	; 0x0e
    2b7a:	ed 87       	std	Y+13, r30	; 0x0d
		where[col] = row;
		for (int i=0; i<n; ++i)
		if (i != row)
		{
			double c = a[i][col] / a[row][col];
			for (int j=col; j<=m; ++j)
    2b7c:	0f 5f       	subi	r16, 0xFF	; 255
    2b7e:	1f 4f       	sbci	r17, 0xFF	; 255
    2b80:	20 16       	cp	r2, r16
    2b82:	31 06       	cpc	r3, r17
    2b84:	ec f6       	brge	.-70     	; 0x2b40 <_Z10gauss_algoii+0x220>
			double tmp = a[sel][i];
			a[sel][i] = a[row][i];
			a[row][i] = tmp;
		}
		where[col] = row;
		for (int i=0; i<n; ++i)
    2b86:	ff ef       	ldi	r31, 0xFF	; 255
    2b88:	ef 1a       	sub	r14, r31
    2b8a:	ff 0a       	sbc	r15, r31
    2b8c:	20 e1       	ldi	r18, 0x10	; 16
    2b8e:	c2 0e       	add	r12, r18
    2b90:	d1 1c       	adc	r13, r1
    2b92:	4e 14       	cp	r4, r14
    2b94:	5f 04       	cpc	r5, r15
    2b96:	09 f0       	breq	.+2      	; 0x2b9a <_Z10gauss_algoii+0x27a>
    2b98:	b7 cf       	rjmp	.-146    	; 0x2b08 <_Z10gauss_algoii+0x1e8>
		{
			double c = a[i][col] / a[row][col];
			for (int j=col; j<=m; ++j)
			a[i][j] -= a[row][j] * c;
		}
		++row;
    2b9a:	65 01       	movw	r12, r10
    2b9c:	3f ef       	ldi	r19, 0xFF	; 255
    2b9e:	c3 1a       	sub	r12, r19
    2ba0:	d3 0a       	sbc	r13, r19
	//returns 0 if no solution
	//returns a solution if there is at least one solution
	const double EPS = 1e-5;
	for(int i=0; i<m; i++)
		where[i] = -1;
	for (int col=0, row=0; col<m && row<n; ++col)
    2ba2:	4f ef       	ldi	r20, 0xFF	; 255
    2ba4:	84 1a       	sub	r8, r20
    2ba6:	94 0a       	sbc	r9, r20
    2ba8:	28 14       	cp	r2, r8
    2baa:	39 04       	cpc	r3, r9
    2bac:	09 f0       	breq	.+2      	; 0x2bb0 <_Z10gauss_algoii+0x290>
    2bae:	ef ce       	rjmp	.-546    	; 0x298e <_Z10gauss_algoii+0x6e>
    2bb0:	0c c1       	rjmp	.+536    	; 0x2dca <_Z10gauss_algoii+0x4aa>
		}
		++row;
	}

	for(int i=0; i<m; i++)
	ans[i] =0;
    2bb2:	11 92       	st	Z+, r1
    2bb4:	11 92       	st	Z+, r1
    2bb6:	11 92       	st	Z+, r1
    2bb8:	11 92       	st	Z+, r1
			a[i][j] -= a[row][j] * c;
		}
		++row;
	}

	for(int i=0; i<m; i++)
    2bba:	01 96       	adiw	r24, 0x01	; 1
    2bbc:	82 15       	cp	r24, r2
    2bbe:	93 05       	cpc	r25, r3
    2bc0:	c4 f3       	brlt	.-16     	; 0x2bb2 <_Z10gauss_algoii+0x292>
    2bc2:	05 c0       	rjmp	.+10     	; 0x2bce <_Z10gauss_algoii+0x2ae>
	ans[i] =0;
	for (int i=0; i<m; ++i)
	if (where[i] != -1)
	ans[i] = a[where[i]][m] / a[where[i]][i];
	for (int i=0; i<n; ++i)
    2bc4:	18 16       	cp	r1, r24
    2bc6:	19 06       	cpc	r1, r25
    2bc8:	0c f4       	brge	.+2      	; 0x2bcc <_Z10gauss_algoii+0x2ac>
    2bca:	44 c0       	rjmp	.+136    	; 0x2c54 <_Z10gauss_algoii+0x334>
    2bcc:	db c0       	rjmp	.+438    	; 0x2d84 <_Z10gauss_algoii+0x464>
    2bce:	0f 2e       	mov	r0, r31
    2bd0:	f0 e2       	ldi	r31, 0x20	; 32
    2bd2:	ef 2e       	mov	r14, r31
    2bd4:	f2 e0       	ldi	r31, 0x02	; 2
    2bd6:	ff 2e       	mov	r15, r31
    2bd8:	f0 2d       	mov	r31, r0
			a[i][j] -= a[row][j] * c;
		}
		++row;
	}

	for(int i=0; i<m; i++)
    2bda:	1a 82       	std	Y+2, r1	; 0x02
    2bdc:	19 82       	std	Y+1, r1	; 0x01
	ans[i] =0;
	for (int i=0; i<m; ++i)
	if (where[i] != -1)
    2bde:	f7 01       	movw	r30, r14
    2be0:	81 91       	ld	r24, Z+
    2be2:	91 91       	ld	r25, Z+
    2be4:	7f 01       	movw	r14, r30
    2be6:	8f 3f       	cpi	r24, 0xFF	; 255
    2be8:	ff ef       	ldi	r31, 0xFF	; 255
    2bea:	9f 07       	cpc	r25, r31
    2bec:	39 f1       	breq	.+78     	; 0x2c3c <_Z10gauss_algoii+0x31c>
	ans[i] = a[where[i]][m] / a[where[i]][i];
    2bee:	88 0f       	add	r24, r24
    2bf0:	99 1f       	adc	r25, r25
    2bf2:	88 0f       	add	r24, r24
    2bf4:	99 1f       	adc	r25, r25
    2bf6:	dc 01       	movw	r26, r24
    2bf8:	a2 0d       	add	r26, r2
    2bfa:	b3 1d       	adc	r27, r3
    2bfc:	aa 0f       	add	r26, r26
    2bfe:	bb 1f       	adc	r27, r27
    2c00:	aa 0f       	add	r26, r26
    2c02:	bb 1f       	adc	r27, r27
    2c04:	aa 5d       	subi	r26, 0xDA	; 218
    2c06:	bd 4f       	sbci	r27, 0xFD	; 253
    2c08:	29 81       	ldd	r18, Y+1	; 0x01
    2c0a:	3a 81       	ldd	r19, Y+2	; 0x02
    2c0c:	82 0f       	add	r24, r18
    2c0e:	93 1f       	adc	r25, r19
    2c10:	fc 01       	movw	r30, r24
    2c12:	ee 0f       	add	r30, r30
    2c14:	ff 1f       	adc	r31, r31
    2c16:	ee 0f       	add	r30, r30
    2c18:	ff 1f       	adc	r31, r31
    2c1a:	ea 5d       	subi	r30, 0xDA	; 218
    2c1c:	fd 4f       	sbci	r31, 0xFD	; 253
    2c1e:	20 81       	ld	r18, Z
    2c20:	31 81       	ldd	r19, Z+1	; 0x01
    2c22:	42 81       	ldd	r20, Z+2	; 0x02
    2c24:	53 81       	ldd	r21, Z+3	; 0x03
    2c26:	6d 91       	ld	r22, X+
    2c28:	7d 91       	ld	r23, X+
    2c2a:	8d 91       	ld	r24, X+
    2c2c:	9c 91       	ld	r25, X
    2c2e:	0e 94 ef 1a 	call	0x35de	; 0x35de <__divsf3>
    2c32:	f8 01       	movw	r30, r16
    2c34:	60 83       	st	Z, r22
    2c36:	71 83       	std	Z+1, r23	; 0x01
    2c38:	82 83       	std	Z+2, r24	; 0x02
    2c3a:	93 83       	std	Z+3, r25	; 0x03
		++row;
	}

	for(int i=0; i<m; i++)
	ans[i] =0;
	for (int i=0; i<m; ++i)
    2c3c:	29 81       	ldd	r18, Y+1	; 0x01
    2c3e:	3a 81       	ldd	r19, Y+2	; 0x02
    2c40:	2f 5f       	subi	r18, 0xFF	; 255
    2c42:	3f 4f       	sbci	r19, 0xFF	; 255
    2c44:	3a 83       	std	Y+2, r19	; 0x02
    2c46:	29 83       	std	Y+1, r18	; 0x01
    2c48:	0c 5f       	subi	r16, 0xFC	; 252
    2c4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2c4c:	22 15       	cp	r18, r2
    2c4e:	33 05       	cpc	r19, r3
    2c50:	34 f2       	brlt	.-116    	; 0x2bde <_Z10gauss_algoii+0x2be>
    2c52:	dc c0       	rjmp	.+440    	; 0x2e0c <_Z10gauss_algoii+0x4ec>
    2c54:	c1 01       	movw	r24, r2
    2c56:	88 0f       	add	r24, r24
    2c58:	99 1f       	adc	r25, r25
    2c5a:	88 0f       	add	r24, r24
    2c5c:	99 1f       	adc	r25, r25
    2c5e:	fc 01       	movw	r30, r24
    2c60:	ea 5d       	subi	r30, 0xDA	; 218
    2c62:	fd 4f       	sbci	r31, 0xFD	; 253
    2c64:	4f 01       	movw	r8, r30
    2c66:	06 e2       	ldi	r16, 0x26	; 38
    2c68:	12 e0       	ldi	r17, 0x02	; 2
    2c6a:	9c 01       	movw	r18, r24
    2c6c:	2a 5a       	subi	r18, 0xAA	; 170
    2c6e:	3d 4f       	sbci	r19, 0xFD	; 253
    2c70:	59 01       	movw	r10, r18
			a[i][j] -= a[row][j] * c;
		}
		++row;
	}

	for(int i=0; i<m; i++)
    2c72:	61 2c       	mov	r6, r1
    2c74:	71 2c       	mov	r7, r1
	if (where[i] != -1)
	ans[i] = a[where[i]][m] / a[where[i]][i];
	for (int i=0; i<n; ++i)
	{
		double sum = 0;
		for (int j=0; j<m; ++j)
    2c76:	78 01       	movw	r14, r16
    2c78:	5e 82       	std	Y+6, r5	; 0x06
    2c7a:	4d 82       	std	Y+5, r4	; 0x05
    2c7c:	3a 82       	std	Y+2, r3	; 0x02
    2c7e:	29 82       	std	Y+1, r2	; 0x01
    2c80:	89 81       	ldd	r24, Y+1	; 0x01
    2c82:	9a 81       	ldd	r25, Y+2	; 0x02
    2c84:	18 16       	cp	r1, r24
    2c86:	19 06       	cpc	r1, r25
    2c88:	44 f0       	brlt	.+16     	; 0x2c9a <_Z10gauss_algoii+0x37a>
    2c8a:	2f c0       	rjmp	.+94     	; 0x2cea <_Z10gauss_algoii+0x3ca>
    2c8c:	29 80       	ldd	r2, Y+1	; 0x01
    2c8e:	3a 80       	ldd	r3, Y+2	; 0x02
		sum += ans[j] * a[i][j];
		if (abs (sum - a[i][m]) > EPS)
		return 0;
	}

	for (int i=0; i<m; ++i){
    2c90:	12 14       	cp	r1, r2
    2c92:	13 04       	cpc	r1, r3
    2c94:	0c f4       	brge	.+2      	; 0x2c98 <_Z10gauss_algoii+0x378>
    2c96:	5f c0       	rjmp	.+190    	; 0x2d56 <_Z10gauss_algoii+0x436>
    2c98:	78 c0       	rjmp	.+240    	; 0x2d8a <_Z10gauss_algoii+0x46a>
    2c9a:	06 e5       	ldi	r16, 0x56	; 86
    2c9c:	12 e0       	ldi	r17, 0x02	; 2
	if (where[i] != -1)
	ans[i] = a[where[i]][m] / a[where[i]][i];
	for (int i=0; i<n; ++i)
	{
		double sum = 0;
		for (int j=0; j<m; ++j)
    2c9e:	f8 86       	std	Y+8, r15	; 0x08
    2ca0:	ef 82       	std	Y+7, r14	; 0x07
    2ca2:	31 2c       	mov	r3, r1
    2ca4:	51 2c       	mov	r5, r1
    2ca6:	c1 2c       	mov	r12, r1
    2ca8:	d1 2c       	mov	r13, r1
		sum += ans[j] * a[i][j];
    2caa:	f8 01       	movw	r30, r16
    2cac:	61 91       	ld	r22, Z+
    2cae:	71 91       	ld	r23, Z+
    2cb0:	81 91       	ld	r24, Z+
    2cb2:	91 91       	ld	r25, Z+
    2cb4:	8f 01       	movw	r16, r30
    2cb6:	ef 81       	ldd	r30, Y+7	; 0x07
    2cb8:	f8 85       	ldd	r31, Y+8	; 0x08
    2cba:	21 91       	ld	r18, Z+
    2cbc:	31 91       	ld	r19, Z+
    2cbe:	41 91       	ld	r20, Z+
    2cc0:	51 91       	ld	r21, Z+
    2cc2:	f8 87       	std	Y+8, r31	; 0x08
    2cc4:	ef 83       	std	Y+7, r30	; 0x07
    2cc6:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    2cca:	9b 01       	movw	r18, r22
    2ccc:	ac 01       	movw	r20, r24
    2cce:	63 2d       	mov	r22, r3
    2cd0:	75 2d       	mov	r23, r5
    2cd2:	8c 2d       	mov	r24, r12
    2cd4:	9d 2d       	mov	r25, r13
    2cd6:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    2cda:	36 2e       	mov	r3, r22
    2cdc:	57 2e       	mov	r5, r23
    2cde:	c8 2e       	mov	r12, r24
    2ce0:	d9 2e       	mov	r13, r25
	if (where[i] != -1)
	ans[i] = a[where[i]][m] / a[where[i]][i];
	for (int i=0; i<n; ++i)
	{
		double sum = 0;
		for (int j=0; j<m; ++j)
    2ce2:	a0 16       	cp	r10, r16
    2ce4:	b1 06       	cpc	r11, r17
    2ce6:	09 f7       	brne	.-62     	; 0x2caa <_Z10gauss_algoii+0x38a>
    2ce8:	04 c0       	rjmp	.+8      	; 0x2cf2 <_Z10gauss_algoii+0x3d2>
    2cea:	31 2c       	mov	r3, r1
    2cec:	51 2c       	mov	r5, r1
    2cee:	c1 2c       	mov	r12, r1
    2cf0:	d1 2c       	mov	r13, r1
		sum += ans[j] * a[i][j];
		if (abs (sum - a[i][m]) > EPS)
    2cf2:	f4 01       	movw	r30, r8
    2cf4:	20 81       	ld	r18, Z
    2cf6:	31 81       	ldd	r19, Z+1	; 0x01
    2cf8:	42 81       	ldd	r20, Z+2	; 0x02
    2cfa:	53 81       	ldd	r21, Z+3	; 0x03
    2cfc:	63 2d       	mov	r22, r3
    2cfe:	75 2d       	mov	r23, r5
    2d00:	8c 2d       	mov	r24, r12
    2d02:	9d 2d       	mov	r25, r13
    2d04:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    2d08:	0e 94 9b 1b 	call	0x3736	; 0x3736 <__fixsfsi>
    2d0c:	9b 01       	movw	r18, r22
    2d0e:	77 23       	and	r23, r23
    2d10:	24 f4       	brge	.+8      	; 0x2d1a <_Z10gauss_algoii+0x3fa>
    2d12:	22 27       	eor	r18, r18
    2d14:	33 27       	eor	r19, r19
    2d16:	26 1b       	sub	r18, r22
    2d18:	37 0b       	sbc	r19, r23
    2d1a:	b9 01       	movw	r22, r18
    2d1c:	33 0f       	add	r19, r19
    2d1e:	88 0b       	sbc	r24, r24
    2d20:	99 0b       	sbc	r25, r25
    2d22:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    2d26:	2c ea       	ldi	r18, 0xAC	; 172
    2d28:	35 ec       	ldi	r19, 0xC5	; 197
    2d2a:	47 e2       	ldi	r20, 0x27	; 39
    2d2c:	57 e3       	ldi	r21, 0x37	; 55
    2d2e:	0e 94 1d 1d 	call	0x3a3a	; 0x3a3a <__gesf2>
    2d32:	18 16       	cp	r1, r24
    2d34:	6c f1       	brlt	.+90     	; 0x2d90 <_Z10gauss_algoii+0x470>
	for(int i=0; i<m; i++)
	ans[i] =0;
	for (int i=0; i<m; ++i)
	if (where[i] != -1)
	ans[i] = a[where[i]][m] / a[where[i]][i];
	for (int i=0; i<n; ++i)
    2d36:	ff ef       	ldi	r31, 0xFF	; 255
    2d38:	6f 1a       	sub	r6, r31
    2d3a:	7f 0a       	sbc	r7, r31
    2d3c:	20 e1       	ldi	r18, 0x10	; 16
    2d3e:	82 0e       	add	r8, r18
    2d40:	91 1c       	adc	r9, r1
    2d42:	30 e1       	ldi	r19, 0x10	; 16
    2d44:	e3 0e       	add	r14, r19
    2d46:	f1 1c       	adc	r15, r1
    2d48:	8d 81       	ldd	r24, Y+5	; 0x05
    2d4a:	9e 81       	ldd	r25, Y+6	; 0x06
    2d4c:	68 16       	cp	r6, r24
    2d4e:	79 06       	cpc	r7, r25
    2d50:	0c f4       	brge	.+2      	; 0x2d54 <_Z10gauss_algoii+0x434>
    2d52:	96 cf       	rjmp	.-212    	; 0x2c80 <_Z10gauss_algoii+0x360>
    2d54:	9b cf       	rjmp	.-202    	; 0x2c8c <_Z10gauss_algoii+0x36c>
		if (abs (sum - a[i][m]) > EPS)
		return 0;
	}

	for (int i=0; i<m; ++i){
		if (where[i] == -1){
    2d56:	80 91 20 02 	lds	r24, 0x0220	; 0x800220 <__data_end>
    2d5a:	90 91 21 02 	lds	r25, 0x0221	; 0x800221 <__data_end+0x1>
    2d5e:	01 96       	adiw	r24, 0x01	; 1
    2d60:	d1 f0       	breq	.+52     	; 0x2d96 <_Z10gauss_algoii+0x476>
    2d62:	e2 e2       	ldi	r30, 0x22	; 34
    2d64:	f2 e0       	ldi	r31, 0x02	; 2
    2d66:	80 e0       	ldi	r24, 0x00	; 0
    2d68:	90 e0       	ldi	r25, 0x00	; 0
    2d6a:	05 c0       	rjmp	.+10     	; 0x2d76 <_Z10gauss_algoii+0x456>
    2d6c:	21 91       	ld	r18, Z+
    2d6e:	31 91       	ld	r19, Z+
    2d70:	2f 3f       	cpi	r18, 0xFF	; 255
    2d72:	3f 4f       	sbci	r19, 0xFF	; 255
    2d74:	99 f0       	breq	.+38     	; 0x2d9c <_Z10gauss_algoii+0x47c>
		sum += ans[j] * a[i][j];
		if (abs (sum - a[i][m]) > EPS)
		return 0;
	}

	for (int i=0; i<m; ++i){
    2d76:	01 96       	adiw	r24, 0x01	; 1
    2d78:	82 15       	cp	r24, r2
    2d7a:	93 05       	cpc	r25, r3
    2d7c:	bc f3       	brlt	.-18     	; 0x2d6c <_Z10gauss_algoii+0x44c>
		if (where[i] == -1){
			return 2;
		}
	}
	return 1;
    2d7e:	81 e0       	ldi	r24, 0x01	; 1
    2d80:	90 e0       	ldi	r25, 0x00	; 0
    2d82:	49 c0       	rjmp	.+146    	; 0x2e16 <_Z10gauss_algoii+0x4f6>
    2d84:	81 e0       	ldi	r24, 0x01	; 1
    2d86:	90 e0       	ldi	r25, 0x00	; 0
    2d88:	46 c0       	rjmp	.+140    	; 0x2e16 <_Z10gauss_algoii+0x4f6>
    2d8a:	81 e0       	ldi	r24, 0x01	; 1
    2d8c:	90 e0       	ldi	r25, 0x00	; 0
    2d8e:	43 c0       	rjmp	.+134    	; 0x2e16 <_Z10gauss_algoii+0x4f6>
	{
		double sum = 0;
		for (int j=0; j<m; ++j)
		sum += ans[j] * a[i][j];
		if (abs (sum - a[i][m]) > EPS)
		return 0;
    2d90:	80 e0       	ldi	r24, 0x00	; 0
    2d92:	90 e0       	ldi	r25, 0x00	; 0
    2d94:	40 c0       	rjmp	.+128    	; 0x2e16 <_Z10gauss_algoii+0x4f6>
	}

	for (int i=0; i<m; ++i){
		if (where[i] == -1){
			return 2;
    2d96:	82 e0       	ldi	r24, 0x02	; 2
    2d98:	90 e0       	ldi	r25, 0x00	; 0
    2d9a:	3d c0       	rjmp	.+122    	; 0x2e16 <_Z10gauss_algoii+0x4f6>
    2d9c:	82 e0       	ldi	r24, 0x02	; 2
    2d9e:	90 e0       	ldi	r25, 0x00	; 0
    2da0:	3a c0       	rjmp	.+116    	; 0x2e16 <_Z10gauss_algoii+0x4f6>
	//returns 0 if no solution
	//returns a solution if there is at least one solution
	const double EPS = 1e-5;
	for(int i=0; i<m; i++)
		where[i] = -1;
	for (int col=0, row=0; col<m && row<n; ++col)
    2da2:	14 14       	cp	r1, r4
    2da4:	15 04       	cpc	r1, r5
    2da6:	8c f4       	brge	.+34     	; 0x2dca <_Z10gauss_algoii+0x4aa>
    2da8:	86 e2       	ldi	r24, 0x26	; 38
    2daa:	92 e0       	ldi	r25, 0x02	; 2
    2dac:	9a 87       	std	Y+10, r25	; 0x0a
    2dae:	89 87       	std	Y+9, r24	; 0x09
    2db0:	e0 e2       	ldi	r30, 0x20	; 32
    2db2:	f2 e0       	ldi	r31, 0x02	; 2
    2db4:	fc 87       	std	Y+12, r31	; 0x0c
    2db6:	eb 87       	std	Y+11, r30	; 0x0b
    2db8:	a1 2c       	mov	r10, r1
    2dba:	b1 2c       	mov	r11, r1
    2dbc:	81 2c       	mov	r8, r1
    2dbe:	91 2c       	mov	r9, r1
    2dc0:	80 e0       	ldi	r24, 0x00	; 0
    2dc2:	90 e0       	ldi	r25, 0x00	; 0
    2dc4:	c1 2c       	mov	r12, r1
    2dc6:	d1 2c       	mov	r13, r1
    2dc8:	f2 cd       	rjmp	.-1052   	; 0x29ae <_Z10gauss_algoii+0x8e>
    2dca:	06 e5       	ldi	r16, 0x56	; 86
    2dcc:	12 e0       	ldi	r17, 0x02	; 2
		where[col] = row;
		for (int i=0; i<n; ++i)
		if (i != row)
		{
			double c = a[i][col] / a[row][col];
			for (int j=col; j<=m; ++j)
    2dce:	f8 01       	movw	r30, r16
    2dd0:	80 e0       	ldi	r24, 0x00	; 0
    2dd2:	90 e0       	ldi	r25, 0x00	; 0
    2dd4:	ee ce       	rjmp	.-548    	; 0x2bb2 <_Z10gauss_algoii+0x292>
		{
			double tmp = a[sel][i];
			a[sel][i] = a[row][i];
			a[row][i] = tmp;
		}
		where[col] = row;
    2dd6:	eb 85       	ldd	r30, Y+11	; 0x0b
    2dd8:	fc 85       	ldd	r31, Y+12	; 0x0c
    2dda:	b1 82       	std	Z+1, r11	; 0x01
    2ddc:	a0 82       	st	Z, r10
    2dde:	c5 01       	movw	r24, r10
    2de0:	88 0f       	add	r24, r24
    2de2:	99 1f       	adc	r25, r25
    2de4:	88 0f       	add	r24, r24
    2de6:	99 1f       	adc	r25, r25
    2de8:	88 0d       	add	r24, r8
    2dea:	99 1d       	adc	r25, r9
    2dec:	88 0f       	add	r24, r24
    2dee:	99 1f       	adc	r25, r25
    2df0:	88 0f       	add	r24, r24
    2df2:	99 1f       	adc	r25, r25
    2df4:	9c 01       	movw	r18, r24
    2df6:	2a 5d       	subi	r18, 0xDA	; 218
    2df8:	3d 4f       	sbci	r19, 0xFD	; 253
    2dfa:	38 87       	std	Y+8, r19	; 0x08
    2dfc:	2f 83       	std	Y+7, r18	; 0x07
    2dfe:	c9 84       	ldd	r12, Y+9	; 0x09
    2e00:	da 84       	ldd	r13, Y+10	; 0x0a
    2e02:	e1 2c       	mov	r14, r1
    2e04:	f1 2c       	mov	r15, r1
		for (int i=0; i<n; ++i)
		if (i != row)
		{
			double c = a[i][col] / a[row][col];
    2e06:	3e 83       	std	Y+6, r19	; 0x06
    2e08:	2d 83       	std	Y+5, r18	; 0x05
    2e0a:	7e ce       	rjmp	.-772    	; 0x2b08 <_Z10gauss_algoii+0x1e8>
	for(int i=0; i<m; i++)
	ans[i] =0;
	for (int i=0; i<m; ++i)
	if (where[i] != -1)
	ans[i] = a[where[i]][m] / a[where[i]][i];
	for (int i=0; i<n; ++i)
    2e0c:	14 14       	cp	r1, r4
    2e0e:	15 04       	cpc	r1, r5
    2e10:	0c f4       	brge	.+2      	; 0x2e14 <_Z10gauss_algoii+0x4f4>
    2e12:	20 cf       	rjmp	.-448    	; 0x2c54 <_Z10gauss_algoii+0x334>
    2e14:	a0 cf       	rjmp	.-192    	; 0x2d56 <_Z10gauss_algoii+0x436>
		if (where[i] == -1){
			return 2;
		}
	}
	return 1;
}
    2e16:	2e 96       	adiw	r28, 0x0e	; 14
    2e18:	0f b6       	in	r0, 0x3f	; 63
    2e1a:	f8 94       	cli
    2e1c:	de bf       	out	0x3e, r29	; 62
    2e1e:	0f be       	out	0x3f, r0	; 63
    2e20:	cd bf       	out	0x3d, r28	; 61
    2e22:	df 91       	pop	r29
    2e24:	cf 91       	pop	r28
    2e26:	1f 91       	pop	r17
    2e28:	0f 91       	pop	r16
    2e2a:	ff 90       	pop	r15
    2e2c:	ef 90       	pop	r14
    2e2e:	df 90       	pop	r13
    2e30:	cf 90       	pop	r12
    2e32:	bf 90       	pop	r11
    2e34:	af 90       	pop	r10
    2e36:	9f 90       	pop	r9
    2e38:	8f 90       	pop	r8
    2e3a:	7f 90       	pop	r7
    2e3c:	6f 90       	pop	r6
    2e3e:	5f 90       	pop	r5
    2e40:	4f 90       	pop	r4
    2e42:	3f 90       	pop	r3
    2e44:	2f 90       	pop	r2
    2e46:	08 95       	ret

00002e48 <_Z5gaussv>:
void gauss()
{
    2e48:	2f 92       	push	r2
    2e4a:	3f 92       	push	r3
    2e4c:	4f 92       	push	r4
    2e4e:	5f 92       	push	r5
    2e50:	6f 92       	push	r6
    2e52:	7f 92       	push	r7
    2e54:	8f 92       	push	r8
    2e56:	9f 92       	push	r9
    2e58:	af 92       	push	r10
    2e5a:	bf 92       	push	r11
    2e5c:	cf 92       	push	r12
    2e5e:	df 92       	push	r13
    2e60:	ef 92       	push	r14
    2e62:	ff 92       	push	r15
    2e64:	0f 93       	push	r16
    2e66:	1f 93       	push	r17
    2e68:	cf 93       	push	r28
    2e6a:	df 93       	push	r29
    2e6c:	cd b7       	in	r28, 0x3d	; 61
    2e6e:	de b7       	in	r29, 0x3e	; 62
    2e70:	c1 55       	subi	r28, 0x51	; 81
    2e72:	d1 09       	sbc	r29, r1
    2e74:	0f b6       	in	r0, 0x3f	; 63
    2e76:	f8 94       	cli
    2e78:	de bf       	out	0x3e, r29	; 62
    2e7a:	0f be       	out	0x3f, r0	; 63
    2e7c:	cd bf       	out	0x3d, r28	; 61
	char text1[] = "# Variables?";
    2e7e:	8d e0       	ldi	r24, 0x0D	; 13
    2e80:	eb ea       	ldi	r30, 0xAB	; 171
    2e82:	f1 e0       	ldi	r31, 0x01	; 1
    2e84:	de 01       	movw	r26, r28
    2e86:	11 96       	adiw	r26, 0x01	; 1
    2e88:	01 90       	ld	r0, Z+
    2e8a:	0d 92       	st	X+, r0
    2e8c:	8a 95       	dec	r24
    2e8e:	e1 f7       	brne	.-8      	; 0x2e88 <_Z5gaussv+0x40>
	show_text(text1,1);
    2e90:	61 e0       	ldi	r22, 0x01	; 1
    2e92:	70 e0       	ldi	r23, 0x00	; 0
    2e94:	ce 01       	movw	r24, r28
    2e96:	01 96       	adiw	r24, 0x01	; 1
    2e98:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
	int m = int_number_input(12);
    2e9c:	8c e0       	ldi	r24, 0x0C	; 12
    2e9e:	90 e0       	ldi	r25, 0x00	; 0
    2ea0:	0e 94 b5 08 	call	0x116a	; 0x116a <_Z16int_number_inputi>
    2ea4:	5c 01       	movw	r10, r24
	strcpy(text1,"# equations?");
    2ea6:	8d e0       	ldi	r24, 0x0D	; 13
    2ea8:	e8 eb       	ldi	r30, 0xB8	; 184
    2eaa:	f1 e0       	ldi	r31, 0x01	; 1
    2eac:	de 01       	movw	r26, r28
    2eae:	11 96       	adiw	r26, 0x01	; 1
    2eb0:	01 90       	ld	r0, Z+
    2eb2:	0d 92       	st	X+, r0
    2eb4:	8a 95       	dec	r24
    2eb6:	e1 f7       	brne	.-8      	; 0x2eb0 <_Z5gaussv+0x68>
	show_text(text1,1);
    2eb8:	61 e0       	ldi	r22, 0x01	; 1
    2eba:	70 e0       	ldi	r23, 0x00	; 0
    2ebc:	ce 01       	movw	r24, r28
    2ebe:	01 96       	adiw	r24, 0x01	; 1
    2ec0:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
	int n = int_number_input(12);
    2ec4:	8c e0       	ldi	r24, 0x0C	; 12
    2ec6:	90 e0       	ldi	r25, 0x00	; 0
    2ec8:	0e 94 b5 08 	call	0x116a	; 0x116a <_Z16int_number_inputi>
    2ecc:	62 96       	adiw	r28, 0x12	; 18
    2ece:	9f af       	std	Y+63, r25	; 0x3f
    2ed0:	8e af       	std	Y+62, r24	; 0x3e
    2ed2:	62 97       	sbiw	r28, 0x12	; 18
	

	
	char s1[20];
	for(int i=0;i<n;i++)
    2ed4:	18 16       	cp	r1, r24
    2ed6:	19 06       	cpc	r1, r25
    2ed8:	0c f0       	brlt	.+2      	; 0x2edc <_Z5gaussv+0x94>
    2eda:	e3 c0       	rjmp	.+454    	; 0x30a2 <_Z5gaussv+0x25a>
    2edc:	c5 01       	movw	r24, r10
    2ede:	88 0f       	add	r24, r24
    2ee0:	99 1f       	adc	r25, r25
    2ee2:	88 0f       	add	r24, r24
    2ee4:	99 1f       	adc	r25, r25
    2ee6:	9c 01       	movw	r18, r24
    2ee8:	2a 5d       	subi	r18, 0xDA	; 218
    2eea:	3d 4f       	sbci	r19, 0xFD	; 253
    2eec:	2e 96       	adiw	r28, 0x0e	; 14
    2eee:	3f af       	std	Y+63, r19	; 0x3f
    2ef0:	2e af       	std	Y+62, r18	; 0x3e
    2ef2:	2e 97       	sbiw	r28, 0x0e	; 14
    2ef4:	86 e2       	ldi	r24, 0x26	; 38
    2ef6:	92 e0       	ldi	r25, 0x02	; 2
    2ef8:	60 96       	adiw	r28, 0x10	; 16
    2efa:	9f af       	std	Y+63, r25	; 0x3f
    2efc:	8e af       	std	Y+62, r24	; 0x3e
    2efe:	60 97       	sbiw	r28, 0x10	; 16
    2f00:	0f 2e       	mov	r0, r31
    2f02:	f0 e3       	ldi	r31, 0x30	; 48
    2f04:	3f 2e       	mov	r3, r31
    2f06:	f0 2d       	mov	r31, r0
    2f08:	81 2c       	mov	r8, r1
    2f0a:	91 2c       	mov	r9, r1
	{
		for(int j=0;j<m;j++)
		{
			char text[14] = "Input a[";
    2f0c:	0f 2e       	mov	r0, r31
    2f0e:	f5 e0       	ldi	r31, 0x05	; 5
    2f10:	2f 2e       	mov	r2, r31
    2f12:	f0 2d       	mov	r31, r0
    2f14:	fe 01       	movw	r30, r28
    2f16:	ff 96       	adiw	r30, 0x3f	; 63
    2f18:	2c 96       	adiw	r28, 0x0c	; 12
    2f1a:	ff af       	std	Y+63, r31	; 0x3f
    2f1c:	ee af       	std	Y+62, r30	; 0x3e
    2f1e:	2c 97       	sbiw	r28, 0x0c	; 12
			char ek[2];
			ek[0] = (char)(i+'0');
    2f20:	8e 01       	movw	r16, r28
    2f22:	08 5b       	subi	r16, 0xB8	; 184
    2f24:	1f 4f       	sbci	r17, 0xFF	; 255
			ek[1] = 0;
			strcat(text , ek);
			ek[0] = ']';
    2f26:	0f 2e       	mov	r0, r31
    2f28:	fd e5       	ldi	r31, 0x5D	; 93
    2f2a:	4f 2e       	mov	r4, r31
    2f2c:	f0 2d       	mov	r31, r0
	{
		for(int j=0;j<m;j++)
		{
			char text[14] = "Input a[";
			char ek[2];
			ek[0] = (char)(i+'0');
    2f2e:	e0 2e       	mov	r14, r16
    2f30:	f1 2e       	mov	r15, r17

	
	char s1[20];
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
    2f32:	1a 14       	cp	r1, r10
    2f34:	1b 04       	cpc	r1, r11
    2f36:	0c f0       	brlt	.+2      	; 0x2f3a <_Z5gaussv+0xf2>
    2f38:	61 c0       	rjmp	.+194    	; 0x2ffc <_Z5gaussv+0x1b4>
    2f3a:	60 96       	adiw	r28, 0x10	; 16
    2f3c:	ce ac       	ldd	r12, Y+62	; 0x3e
    2f3e:	df ac       	ldd	r13, Y+63	; 0x3f
    2f40:	60 97       	sbiw	r28, 0x10	; 16
    2f42:	0f 2e       	mov	r0, r31
    2f44:	f0 e3       	ldi	r31, 0x30	; 48
    2f46:	5f 2e       	mov	r5, r31
    2f48:	f0 2d       	mov	r31, r0
    2f4a:	61 2c       	mov	r6, r1
    2f4c:	71 2c       	mov	r7, r1
		{
			char text[14] = "Input a[";
    2f4e:	89 e0       	ldi	r24, 0x09	; 9
    2f50:	e0 ed       	ldi	r30, 0xD0	; 208
    2f52:	f0 e0       	ldi	r31, 0x00	; 0
    2f54:	de 01       	movw	r26, r28
    2f56:	d6 96       	adiw	r26, 0x36	; 54
    2f58:	01 90       	ld	r0, Z+
    2f5a:	0d 92       	st	X+, r0
    2f5c:	8a 95       	dec	r24
    2f5e:	e1 f7       	brne	.-8      	; 0x2f58 <_Z5gaussv+0x110>
    2f60:	2c 96       	adiw	r28, 0x0c	; 12
    2f62:	ee ad       	ldd	r30, Y+62	; 0x3e
    2f64:	ff ad       	ldd	r31, Y+63	; 0x3f
    2f66:	2c 97       	sbiw	r28, 0x0c	; 12
    2f68:	22 2d       	mov	r18, r2
    2f6a:	11 92       	st	Z+, r1
    2f6c:	2a 95       	dec	r18
    2f6e:	e9 f7       	brne	.-6      	; 0x2f6a <_Z5gaussv+0x122>
			char ek[2];
			ek[0] = (char)(i+'0');
    2f70:	f8 01       	movw	r30, r16
    2f72:	30 82       	st	Z, r3
			ek[1] = 0;
    2f74:	11 82       	std	Z+1, r1	; 0x01
			strcat(text , ek);
    2f76:	6e 2d       	mov	r22, r14
    2f78:	7f 2d       	mov	r23, r15
    2f7a:	ce 01       	movw	r24, r28
    2f7c:	c6 96       	adiw	r24, 0x36	; 54
    2f7e:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			ek[0] = ']';
    2f82:	f8 01       	movw	r30, r16
    2f84:	40 82       	st	Z, r4
			strcat(text , ek);
    2f86:	6e 2d       	mov	r22, r14
    2f88:	7f 2d       	mov	r23, r15
    2f8a:	ce 01       	movw	r24, r28
    2f8c:	c6 96       	adiw	r24, 0x36	; 54
    2f8e:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			ek[0] = '[';
    2f92:	2b e5       	ldi	r18, 0x5B	; 91
    2f94:	f8 01       	movw	r30, r16
    2f96:	20 83       	st	Z, r18
			strcat(text , ek);
    2f98:	6e 2d       	mov	r22, r14
    2f9a:	7f 2d       	mov	r23, r15
    2f9c:	ce 01       	movw	r24, r28
    2f9e:	c6 96       	adiw	r24, 0x36	; 54
    2fa0:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			ek[0] = (char)(j+'0');
    2fa4:	f8 01       	movw	r30, r16
    2fa6:	50 82       	st	Z, r5
			strcat(text , ek);
    2fa8:	6e 2d       	mov	r22, r14
    2faa:	7f 2d       	mov	r23, r15
    2fac:	ce 01       	movw	r24, r28
    2fae:	c6 96       	adiw	r24, 0x36	; 54
    2fb0:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			ek[0] = ']';
    2fb4:	f8 01       	movw	r30, r16
    2fb6:	40 82       	st	Z, r4
			strcat(text , ek);
    2fb8:	6e 2d       	mov	r22, r14
    2fba:	7f 2d       	mov	r23, r15
    2fbc:	ce 01       	movw	r24, r28
    2fbe:	c6 96       	adiw	r24, 0x36	; 54
    2fc0:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			show_and_get(text , s1);
    2fc4:	be 01       	movw	r22, r28
    2fc6:	62 5f       	subi	r22, 0xF2	; 242
    2fc8:	7f 4f       	sbci	r23, 0xFF	; 255
    2fca:	ce 01       	movw	r24, r28
    2fcc:	c6 96       	adiw	r24, 0x36	; 54
    2fce:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
			a[i][j] = ob.eval_exp(s1);
    2fd2:	be 01       	movw	r22, r28
    2fd4:	62 5f       	subi	r22, 0xF2	; 242
    2fd6:	7f 4f       	sbci	r23, 0xFF	; 255
    2fd8:	82 e6       	ldi	r24, 0x62	; 98
    2fda:	92 e0       	ldi	r25, 0x02	; 2
    2fdc:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    2fe0:	f6 01       	movw	r30, r12
    2fe2:	61 93       	st	Z+, r22
    2fe4:	71 93       	st	Z+, r23
    2fe6:	81 93       	st	Z+, r24
    2fe8:	91 93       	st	Z+, r25
    2fea:	6f 01       	movw	r12, r30

	
	char s1[20];
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<m;j++)
    2fec:	ff ef       	ldi	r31, 0xFF	; 255
    2fee:	6f 1a       	sub	r6, r31
    2ff0:	7f 0a       	sbc	r7, r31
    2ff2:	53 94       	inc	r5
    2ff4:	a6 14       	cp	r10, r6
    2ff6:	b7 04       	cpc	r11, r7
    2ff8:	09 f0       	breq	.+2      	; 0x2ffc <_Z5gaussv+0x1b4>
    2ffa:	a9 cf       	rjmp	.-174    	; 0x2f4e <_Z5gaussv+0x106>
			strcat(text , ek);
			show_and_get(text , s1);
			a[i][j] = ob.eval_exp(s1);
		}
		{
			char text[18] = "Input column d[";
    2ffc:	80 e1       	ldi	r24, 0x10	; 16
    2ffe:	ee ed       	ldi	r30, 0xDE	; 222
    3000:	f0 e0       	ldi	r31, 0x00	; 0
    3002:	de 01       	movw	r26, r28
    3004:	d6 96       	adiw	r26, 0x36	; 54
    3006:	01 90       	ld	r0, Z+
    3008:	0d 92       	st	X+, r0
    300a:	8a 95       	dec	r24
    300c:	e1 f7       	brne	.-8      	; 0x3006 <_Z5gaussv+0x1be>
    300e:	28 96       	adiw	r28, 0x08	; 8
    3010:	1f ae       	std	Y+63, r1	; 0x3f
    3012:	1e ae       	std	Y+62, r1	; 0x3e
    3014:	28 97       	sbiw	r28, 0x08	; 8
			char ek[2];
			ek[0] = (char)(i+'0');
    3016:	f8 01       	movw	r30, r16
    3018:	30 82       	st	Z, r3
			ek[1] = 0;
    301a:	11 82       	std	Z+1, r1	; 0x01
			strcat(text , ek);
    301c:	6e 2d       	mov	r22, r14
    301e:	7f 2d       	mov	r23, r15
    3020:	ce 01       	movw	r24, r28
    3022:	c6 96       	adiw	r24, 0x36	; 54
    3024:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			ek[0] = ']';
    3028:	f8 01       	movw	r30, r16
    302a:	40 82       	st	Z, r4
			strcat(text , ek);
    302c:	6e 2d       	mov	r22, r14
    302e:	7f 2d       	mov	r23, r15
    3030:	ce 01       	movw	r24, r28
    3032:	c6 96       	adiw	r24, 0x36	; 54
    3034:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
			show_and_get(text , s1);
    3038:	be 01       	movw	r22, r28
    303a:	62 5f       	subi	r22, 0xF2	; 242
    303c:	7f 4f       	sbci	r23, 0xFF	; 255
    303e:	ce 01       	movw	r24, r28
    3040:	c6 96       	adiw	r24, 0x36	; 54
    3042:	0e 94 96 09 	call	0x132c	; 0x132c <_Z12show_and_getPcS_>
			a[i][m] = ob.eval_exp(s1);
    3046:	be 01       	movw	r22, r28
    3048:	62 5f       	subi	r22, 0xF2	; 242
    304a:	7f 4f       	sbci	r23, 0xFF	; 255
    304c:	82 e6       	ldi	r24, 0x62	; 98
    304e:	92 e0       	ldi	r25, 0x02	; 2
    3050:	0e 94 f3 07 	call	0xfe6	; 0xfe6 <_ZN6parser8eval_expEPc>
    3054:	2e 96       	adiw	r28, 0x0e	; 14
    3056:	ee ad       	ldd	r30, Y+62	; 0x3e
    3058:	ff ad       	ldd	r31, Y+63	; 0x3f
    305a:	2e 97       	sbiw	r28, 0x0e	; 14
    305c:	60 83       	st	Z, r22
    305e:	71 83       	std	Z+1, r23	; 0x01
    3060:	82 83       	std	Z+2, r24	; 0x02
    3062:	93 83       	std	Z+3, r25	; 0x03
	int n = int_number_input(12);
	

	
	char s1[20];
	for(int i=0;i<n;i++)
    3064:	ff ef       	ldi	r31, 0xFF	; 255
    3066:	8f 1a       	sub	r8, r31
    3068:	9f 0a       	sbc	r9, r31
    306a:	33 94       	inc	r3
    306c:	2e 96       	adiw	r28, 0x0e	; 14
    306e:	2e ad       	ldd	r18, Y+62	; 0x3e
    3070:	3f ad       	ldd	r19, Y+63	; 0x3f
    3072:	2e 97       	sbiw	r28, 0x0e	; 14
    3074:	20 5f       	subi	r18, 0xF0	; 240
    3076:	3f 4f       	sbci	r19, 0xFF	; 255
    3078:	2e 96       	adiw	r28, 0x0e	; 14
    307a:	3f af       	std	Y+63, r19	; 0x3f
    307c:	2e af       	std	Y+62, r18	; 0x3e
    307e:	2e 97       	sbiw	r28, 0x0e	; 14
    3080:	60 96       	adiw	r28, 0x10	; 16
    3082:	8e ad       	ldd	r24, Y+62	; 0x3e
    3084:	9f ad       	ldd	r25, Y+63	; 0x3f
    3086:	60 97       	sbiw	r28, 0x10	; 16
    3088:	40 96       	adiw	r24, 0x10	; 16
    308a:	60 96       	adiw	r28, 0x10	; 16
    308c:	9f af       	std	Y+63, r25	; 0x3f
    308e:	8e af       	std	Y+62, r24	; 0x3e
    3090:	60 97       	sbiw	r28, 0x10	; 16
    3092:	62 96       	adiw	r28, 0x12	; 18
    3094:	ee ad       	ldd	r30, Y+62	; 0x3e
    3096:	ff ad       	ldd	r31, Y+63	; 0x3f
    3098:	62 97       	sbiw	r28, 0x12	; 18
    309a:	e8 15       	cp	r30, r8
    309c:	f9 05       	cpc	r31, r9
    309e:	09 f0       	breq	.+2      	; 0x30a2 <_Z5gaussv+0x25a>
    30a0:	48 cf       	rjmp	.-368    	; 0x2f32 <_Z5gaussv+0xea>
			strcat(text , ek);
			show_and_get(text , s1);
			a[i][m] = ob.eval_exp(s1);
		}
	}
	int koto = gauss_algo(n,m);
    30a2:	b5 01       	movw	r22, r10
    30a4:	62 96       	adiw	r28, 0x12	; 18
    30a6:	8e ad       	ldd	r24, Y+62	; 0x3e
    30a8:	9f ad       	ldd	r25, Y+63	; 0x3f
    30aa:	62 97       	sbiw	r28, 0x12	; 18
    30ac:	0e 94 90 14 	call	0x2920	; 0x2920 <_Z10gauss_algoii>
	if(koto==0)
    30b0:	00 97       	sbiw	r24, 0x00	; 0
    30b2:	c9 f4       	brne	.+50     	; 0x30e6 <_Z5gaussv+0x29e>
	{
		strcpy(text1,"No Solution!");
    30b4:	8d e0       	ldi	r24, 0x0D	; 13
    30b6:	e5 ec       	ldi	r30, 0xC5	; 197
    30b8:	f1 e0       	ldi	r31, 0x01	; 1
    30ba:	de 01       	movw	r26, r28
    30bc:	11 96       	adiw	r26, 0x01	; 1
    30be:	01 90       	ld	r0, Z+
    30c0:	0d 92       	st	X+, r0
    30c2:	8a 95       	dec	r24
    30c4:	e1 f7       	brne	.-8      	; 0x30be <_Z5gaussv+0x276>
		show_text(text1,1);
    30c6:	61 e0       	ldi	r22, 0x01	; 1
    30c8:	70 e0       	ldi	r23, 0x00	; 0
    30ca:	ce 01       	movw	r24, r28
    30cc:	01 96       	adiw	r24, 0x01	; 1
    30ce:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
    30d2:	ff ef       	ldi	r31, 0xFF	; 255
    30d4:	2e e9       	ldi	r18, 0x9E	; 158
    30d6:	34 e2       	ldi	r19, 0x24	; 36
    30d8:	f1 50       	subi	r31, 0x01	; 1
    30da:	20 40       	sbci	r18, 0x00	; 0
    30dc:	30 40       	sbci	r19, 0x00	; 0
    30de:	e1 f7       	brne	.-8      	; 0x30d8 <_Z5gaussv+0x290>
    30e0:	00 c0       	rjmp	.+0      	; 0x30e2 <_Z5gaussv+0x29a>
    30e2:	00 00       	nop
    30e4:	bf c0       	rjmp	.+382    	; 0x3264 <_Z5gaussv+0x41c>
		_delay_ms(1500);
		return;
	}
	else if(koto==1)
    30e6:	81 30       	cpi	r24, 0x01	; 1
    30e8:	91 05       	cpc	r25, r1
    30ea:	69 f4       	brne	.+26     	; 0x3106 <_Z5gaussv+0x2be>
    30ec:	8f ef       	ldi	r24, 0xFF	; 255
    30ee:	9e e9       	ldi	r25, 0x9E	; 158
    30f0:	e4 e2       	ldi	r30, 0x24	; 36
    30f2:	81 50       	subi	r24, 0x01	; 1
    30f4:	90 40       	sbci	r25, 0x00	; 0
    30f6:	e0 40       	sbci	r30, 0x00	; 0
    30f8:	e1 f7       	brne	.-8      	; 0x30f2 <_Z5gaussv+0x2aa>
    30fa:	00 c0       	rjmp	.+0      	; 0x30fc <_Z5gaussv+0x2b4>
    30fc:	00 00       	nop
		strcpy(text1,"Infinite Solution!");
		show_text(text1,1);
		_delay_ms(1500);
	}
	char s[20];
	for(int i=0;i<m;i++)
    30fe:	1a 14       	cp	r1, r10
    3100:	1b 04       	cpc	r1, r11
    3102:	e4 f0       	brlt	.+56     	; 0x313c <_Z5gaussv+0x2f4>
    3104:	af c0       	rjmp	.+350    	; 0x3264 <_Z5gaussv+0x41c>
	}
	else if(koto==1)
	{
		_delay_ms(1500);
	}
	else if(koto==2)
    3106:	02 97       	sbiw	r24, 0x02	; 2
    3108:	d1 f7       	brne	.-12     	; 0x30fe <_Z5gaussv+0x2b6>
	{
		strcpy(text1,"Infinite Solution!");
    310a:	83 e1       	ldi	r24, 0x13	; 19
    310c:	e8 e9       	ldi	r30, 0x98	; 152
    310e:	f1 e0       	ldi	r31, 0x01	; 1
    3110:	de 01       	movw	r26, r28
    3112:	11 96       	adiw	r26, 0x01	; 1
    3114:	01 90       	ld	r0, Z+
    3116:	0d 92       	st	X+, r0
    3118:	8a 95       	dec	r24
    311a:	e1 f7       	brne	.-8      	; 0x3114 <_Z5gaussv+0x2cc>
		show_text(text1,1);
    311c:	61 e0       	ldi	r22, 0x01	; 1
    311e:	70 e0       	ldi	r23, 0x00	; 0
    3120:	ce 01       	movw	r24, r28
    3122:	01 96       	adiw	r24, 0x01	; 1
    3124:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
    3128:	ff ef       	ldi	r31, 0xFF	; 255
    312a:	2e e9       	ldi	r18, 0x9E	; 158
    312c:	34 e2       	ldi	r19, 0x24	; 36
    312e:	f1 50       	subi	r31, 0x01	; 1
    3130:	20 40       	sbci	r18, 0x00	; 0
    3132:	30 40       	sbci	r19, 0x00	; 0
    3134:	e1 f7       	brne	.-8      	; 0x312e <_Z5gaussv+0x2e6>
    3136:	00 c0       	rjmp	.+0      	; 0x3138 <_Z5gaussv+0x2f0>
    3138:	00 00       	nop
    313a:	e1 cf       	rjmp	.-62     	; 0x30fe <_Z5gaussv+0x2b6>
    313c:	0f 2e       	mov	r0, r31
    313e:	f6 e5       	ldi	r31, 0x56	; 86
    3140:	8f 2e       	mov	r8, r31
    3142:	f2 e0       	ldi	r31, 0x02	; 2
    3144:	9f 2e       	mov	r9, r31
    3146:	f0 2d       	mov	r31, r0
		_delay_ms(1500);
	}
	char s[20];
	for(int i=0;i<m;i++)
    3148:	0f 2e       	mov	r0, r31
    314a:	f0 e3       	ldi	r31, 0x30	; 48
    314c:	3f 2e       	mov	r3, r31
    314e:	f0 2d       	mov	r31, r0
    3150:	c1 2c       	mov	r12, r1
    3152:	d1 2c       	mov	r13, r1
	{
		char text[14] = "Ans x[";
    3154:	0f 2e       	mov	r0, r31
    3156:	f7 e0       	ldi	r31, 0x07	; 7
    3158:	2f 2e       	mov	r2, r31
    315a:	f0 2d       	mov	r31, r0
    315c:	2e 01       	movw	r4, r28
    315e:	8d e3       	ldi	r24, 0x3D	; 61
    3160:	48 0e       	add	r4, r24
    3162:	51 1c       	adc	r5, r1
		ek[0] = (char)(i+'0');
		ek[1] = 0;
		strcat(text , ek);
		ek[0] = ']';
		strcat(text , ek);
		show_text(text,1);
    3164:	ee 24       	eor	r14, r14
    3166:	e3 94       	inc	r14
    3168:	f1 2c       	mov	r15, r1
		
		dtostrf(ans[i],1,2,s);
		show_text(s,12);
		if(i!=m-1){
    316a:	35 01       	movw	r6, r10
    316c:	91 e0       	ldi	r25, 0x01	; 1
    316e:	69 1a       	sub	r6, r25
    3170:	71 08       	sbc	r7, r1
		_delay_ms(1500);
	}
	char s[20];
	for(int i=0;i<m;i++)
	{
		char text[14] = "Ans x[";
    3172:	87 e0       	ldi	r24, 0x07	; 7
    3174:	e0 ef       	ldi	r30, 0xF0	; 240
    3176:	f0 e0       	ldi	r31, 0x00	; 0
    3178:	de 01       	movw	r26, r28
    317a:	d6 96       	adiw	r26, 0x36	; 54
    317c:	01 90       	ld	r0, Z+
    317e:	0d 92       	st	X+, r0
    3180:	8a 95       	dec	r24
    3182:	e1 f7       	brne	.-8      	; 0x317c <_Z5gaussv+0x334>
    3184:	f2 01       	movw	r30, r4
    3186:	22 2d       	mov	r18, r2
    3188:	11 92       	st	Z+, r1
    318a:	2a 95       	dec	r18
    318c:	e9 f7       	brne	.-6      	; 0x3188 <_Z5gaussv+0x340>
		char ek[2];
		ek[0] = (char)(i+'0');
    318e:	29 96       	adiw	r28, 0x09	; 9
    3190:	3f ae       	std	Y+63, r3	; 0x3f
    3192:	29 97       	sbiw	r28, 0x09	; 9
		ek[1] = 0;
    3194:	2a 96       	adiw	r28, 0x0a	; 10
    3196:	1f ae       	std	Y+63, r1	; 0x3f
    3198:	2a 97       	sbiw	r28, 0x0a	; 10
		strcat(text , ek);
    319a:	be 01       	movw	r22, r28
    319c:	68 5b       	subi	r22, 0xB8	; 184
    319e:	7f 4f       	sbci	r23, 0xFF	; 255
    31a0:	ce 01       	movw	r24, r28
    31a2:	c6 96       	adiw	r24, 0x36	; 54
    31a4:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
		ek[0] = ']';
    31a8:	3d e5       	ldi	r19, 0x5D	; 93
    31aa:	29 96       	adiw	r28, 0x09	; 9
    31ac:	3f af       	std	Y+63, r19	; 0x3f
    31ae:	29 97       	sbiw	r28, 0x09	; 9
		strcat(text , ek);
    31b0:	be 01       	movw	r22, r28
    31b2:	68 5b       	subi	r22, 0xB8	; 184
    31b4:	7f 4f       	sbci	r23, 0xFF	; 255
    31b6:	ce 01       	movw	r24, r28
    31b8:	c6 96       	adiw	r24, 0x36	; 54
    31ba:	0e 94 ba 1f 	call	0x3f74	; 0x3f74 <strcat>
		show_text(text,1);
    31be:	b7 01       	movw	r22, r14
    31c0:	ce 01       	movw	r24, r28
    31c2:	c6 96       	adiw	r24, 0x36	; 54
    31c4:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
		
		dtostrf(ans[i],1,2,s);
    31c8:	f4 01       	movw	r30, r8
    31ca:	61 91       	ld	r22, Z+
    31cc:	71 91       	ld	r23, Z+
    31ce:	81 91       	ld	r24, Z+
    31d0:	91 91       	ld	r25, Z+
    31d2:	4f 01       	movw	r8, r30
    31d4:	8e 01       	movw	r16, r28
    31d6:	0e 5d       	subi	r16, 0xDE	; 222
    31d8:	1f 4f       	sbci	r17, 0xFF	; 255
    31da:	22 e0       	ldi	r18, 0x02	; 2
    31dc:	41 e0       	ldi	r20, 0x01	; 1
    31de:	0e 94 7a 1f 	call	0x3ef4	; 0x3ef4 <dtostrf>
		show_text(s,12);
    31e2:	6c e0       	ldi	r22, 0x0C	; 12
    31e4:	70 e0       	ldi	r23, 0x00	; 0
    31e6:	c8 01       	movw	r24, r16
    31e8:	0e 94 2b 09 	call	0x1256	; 0x1256 <_Z9show_textPci>
		if(i!=m-1){
    31ec:	6c 14       	cp	r6, r12
    31ee:	7d 04       	cpc	r7, r13
    31f0:	41 f1       	breq	.+80     	; 0x3242 <_Z5gaussv+0x3fa>
			//wait for equal
			bool done = 0;
			while (1)
			{
				for(int c=4;c<8;c++)
    31f2:	44 e0       	ldi	r20, 0x04	; 4
    31f4:	50 e0       	ldi	r21, 0x00	; 0
				{
					PORTB=1<<c;
    31f6:	c7 01       	movw	r24, r14
    31f8:	04 2e       	mov	r0, r20
    31fa:	02 c0       	rjmp	.+4      	; 0x3200 <_Z5gaussv+0x3b8>
    31fc:	88 0f       	add	r24, r24
    31fe:	99 1f       	adc	r25, r25
    3200:	0a 94       	dec	r0
    3202:	e2 f7       	brpl	.-8      	; 0x31fc <_Z5gaussv+0x3b4>
    3204:	88 bb       	out	0x18, r24	; 24
    3206:	fa 01       	movw	r30, r20
    3208:	e4 54       	subi	r30, 0x44	; 68
    320a:	ff 4f       	sbci	r31, 0xFF	; 255
					for(int r=0;r<4;r++)
    320c:	20 e0       	ldi	r18, 0x00	; 0
    320e:	30 e0       	ldi	r19, 0x00	; 0
					{
						if(PINB&(1<<r))
    3210:	86 b3       	in	r24, 0x16	; 22
    3212:	90 e0       	ldi	r25, 0x00	; 0
    3214:	02 2e       	mov	r0, r18
    3216:	02 c0       	rjmp	.+4      	; 0x321c <_Z5gaussv+0x3d4>
    3218:	95 95       	asr	r25
    321a:	87 95       	ror	r24
    321c:	0a 94       	dec	r0
    321e:	e2 f7       	brpl	.-8      	; 0x3218 <_Z5gaussv+0x3d0>
    3220:	80 ff       	sbrs	r24, 0
    3222:	03 c0       	rjmp	.+6      	; 0x322a <_Z5gaussv+0x3e2>
						{
							if(mat[r][c-4]=='=')
    3224:	80 81       	ld	r24, Z
    3226:	8d 33       	cpi	r24, 0x3D	; 61
    3228:	61 f0       	breq	.+24     	; 0x3242 <_Z5gaussv+0x3fa>
			while (1)
			{
				for(int c=4;c<8;c++)
				{
					PORTB=1<<c;
					for(int r=0;r<4;r++)
    322a:	2f 5f       	subi	r18, 0xFF	; 255
    322c:	3f 4f       	sbci	r19, 0xFF	; 255
    322e:	34 96       	adiw	r30, 0x04	; 4
    3230:	24 30       	cpi	r18, 0x04	; 4
    3232:	31 05       	cpc	r19, r1
    3234:	69 f7       	brne	.-38     	; 0x3210 <_Z5gaussv+0x3c8>
		if(i!=m-1){
			//wait for equal
			bool done = 0;
			while (1)
			{
				for(int c=4;c<8;c++)
    3236:	4f 5f       	subi	r20, 0xFF	; 255
    3238:	5f 4f       	sbci	r21, 0xFF	; 255
    323a:	48 30       	cpi	r20, 0x08	; 8
    323c:	51 05       	cpc	r21, r1
    323e:	d9 f6       	brne	.-74     	; 0x31f6 <_Z5gaussv+0x3ae>
    3240:	d8 cf       	rjmp	.-80     	; 0x31f2 <_Z5gaussv+0x3aa>
    3242:	ff ef       	ldi	r31, 0xFF	; 255
    3244:	24 e3       	ldi	r18, 0x34	; 52
    3246:	3c e0       	ldi	r19, 0x0C	; 12
    3248:	f1 50       	subi	r31, 0x01	; 1
    324a:	20 40       	sbci	r18, 0x00	; 0
    324c:	30 40       	sbci	r19, 0x00	; 0
    324e:	e1 f7       	brne	.-8      	; 0x3248 <_Z5gaussv+0x400>
    3250:	00 c0       	rjmp	.+0      	; 0x3252 <_Z5gaussv+0x40a>
    3252:	00 00       	nop
		strcpy(text1,"Infinite Solution!");
		show_text(text1,1);
		_delay_ms(1500);
	}
	char s[20];
	for(int i=0;i<m;i++)
    3254:	8f ef       	ldi	r24, 0xFF	; 255
    3256:	c8 1a       	sub	r12, r24
    3258:	d8 0a       	sbc	r13, r24
    325a:	33 94       	inc	r3
    325c:	ac 14       	cp	r10, r12
    325e:	bd 04       	cpc	r11, r13
    3260:	09 f0       	breq	.+2      	; 0x3264 <_Z5gaussv+0x41c>
    3262:	87 cf       	rjmp	.-242    	; 0x3172 <_Z5gaussv+0x32a>
			}
		}
		_delay_ms(500);
	}
	
    3264:	cf 5a       	subi	r28, 0xAF	; 175
    3266:	df 4f       	sbci	r29, 0xFF	; 255
    3268:	0f b6       	in	r0, 0x3f	; 63
    326a:	f8 94       	cli
    326c:	de bf       	out	0x3e, r29	; 62
    326e:	0f be       	out	0x3f, r0	; 63
    3270:	cd bf       	out	0x3d, r28	; 61
    3272:	df 91       	pop	r29
    3274:	cf 91       	pop	r28
    3276:	1f 91       	pop	r17
    3278:	0f 91       	pop	r16
    327a:	ff 90       	pop	r15
    327c:	ef 90       	pop	r14
    327e:	df 90       	pop	r13
    3280:	cf 90       	pop	r12
    3282:	bf 90       	pop	r11
    3284:	af 90       	pop	r10
    3286:	9f 90       	pop	r9
    3288:	8f 90       	pop	r8
    328a:	7f 90       	pop	r7
    328c:	6f 90       	pop	r6
    328e:	5f 90       	pop	r5
    3290:	4f 90       	pop	r4
    3292:	3f 90       	pop	r3
    3294:	2f 90       	pop	r2
    3296:	08 95       	ret

00003298 <_Z12initial_pagev>:
#include "calculator.h"
#include "Simpson.h"
#include "Gauss.h"
void initial_page()
{
	DisplayText(1,1,"1.Calculator");
    3298:	42 ed       	ldi	r20, 0xD2	; 210
    329a:	51 e0       	ldi	r21, 0x01	; 1
    329c:	61 e0       	ldi	r22, 0x01	; 1
    329e:	81 e0       	ldi	r24, 0x01	; 1
    32a0:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	DisplayText(1,12,"2.Gauss Elimination");
    32a4:	4f ed       	ldi	r20, 0xDF	; 223
    32a6:	51 e0       	ldi	r21, 0x01	; 1
    32a8:	6c e0       	ldi	r22, 0x0C	; 12
    32aa:	81 e0       	ldi	r24, 0x01	; 1
    32ac:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	DisplayText(1,24,"3.Newton Raphson");
    32b0:	43 ef       	ldi	r20, 0xF3	; 243
    32b2:	51 e0       	ldi	r21, 0x01	; 1
    32b4:	68 e1       	ldi	r22, 0x18	; 24
    32b6:	81 e0       	ldi	r24, 0x01	; 1
    32b8:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	DisplayText(1,36,"4.Integration");
    32bc:	44 e0       	ldi	r20, 0x04	; 4
    32be:	52 e0       	ldi	r21, 0x02	; 2
    32c0:	64 e2       	ldi	r22, 0x24	; 36
    32c2:	81 e0       	ldi	r24, 0x01	; 1
    32c4:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
	DisplayText(1,48,"5.Graph Plot");
    32c8:	42 e1       	ldi	r20, 0x12	; 18
    32ca:	52 e0       	ldi	r21, 0x02	; 2
    32cc:	60 e3       	ldi	r22, 0x30	; 48
    32ce:	81 e0       	ldi	r24, 0x01	; 1
    32d0:	0e 94 12 04 	call	0x824	; 0x824 <_Z11DisplayTexthhPc>
    32d4:	08 95       	ret

000032d6 <_Z13mode_selectorv>:
}



char mode_selector()
{
    32d6:	cf 93       	push	r28
	while (1)
	{
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
    32d8:	a1 e0       	ldi	r26, 0x01	; 1
    32da:	b0 e0       	ldi	r27, 0x00	; 0

char mode_selector()
{
	while (1)
	{
		for(int c=4;c<8;c++)
    32dc:	64 e0       	ldi	r22, 0x04	; 4
    32de:	70 e0       	ldi	r23, 0x00	; 0
		{
			PORTB=1<<c;
    32e0:	cd 01       	movw	r24, r26
    32e2:	06 2e       	mov	r0, r22
    32e4:	02 c0       	rjmp	.+4      	; 0x32ea <_Z13mode_selectorv+0x14>
    32e6:	88 0f       	add	r24, r24
    32e8:	99 1f       	adc	r25, r25
    32ea:	0a 94       	dec	r0
    32ec:	e2 f7       	brpl	.-8      	; 0x32e6 <_Z13mode_selectorv+0x10>
    32ee:	88 bb       	out	0x18, r24	; 24
    32f0:	cb 01       	movw	r24, r22
    32f2:	04 97       	sbiw	r24, 0x04	; 4
    32f4:	fc 01       	movw	r30, r24
    32f6:	e0 54       	subi	r30, 0x40	; 64
    32f8:	ff 4f       	sbci	r31, 0xFF	; 255
			for(int r=0;r<4;r++)
    32fa:	20 e0       	ldi	r18, 0x00	; 0
    32fc:	30 e0       	ldi	r19, 0x00	; 0
    32fe:	c8 2f       	mov	r28, r24
    3300:	59 2f       	mov	r21, r25
			{
				if(PINB&(1<<r))
    3302:	86 b3       	in	r24, 0x16	; 22
    3304:	90 e0       	ldi	r25, 0x00	; 0
    3306:	02 2e       	mov	r0, r18
    3308:	02 c0       	rjmp	.+4      	; 0x330e <_Z13mode_selectorv+0x38>
    330a:	95 95       	asr	r25
    330c:	87 95       	ror	r24
    330e:	0a 94       	dec	r0
    3310:	e2 f7       	brpl	.-8      	; 0x330a <_Z13mode_selectorv+0x34>
    3312:	80 ff       	sbrs	r24, 0
    3314:	23 c0       	rjmp	.+70     	; 0x335c <_Z13mode_selectorv+0x86>
    3316:	8c 2f       	mov	r24, r28
    3318:	95 2f       	mov	r25, r21
				{
					if(mat[r][c-4]>='1' && mat[r][c-4]<='5')
    331a:	40 81       	ld	r20, Z
    331c:	41 53       	subi	r20, 0x31	; 49
    331e:	45 30       	cpi	r20, 0x05	; 5
    3320:	a0 f4       	brcc	.+40     	; 0x334a <_Z13mode_selectorv+0x74>
    3322:	4f ef       	ldi	r20, 0xFF	; 255
    3324:	54 e3       	ldi	r21, 0x34	; 52
    3326:	6c e0       	ldi	r22, 0x0C	; 12
    3328:	41 50       	subi	r20, 0x01	; 1
    332a:	50 40       	sbci	r21, 0x00	; 0
    332c:	60 40       	sbci	r22, 0x00	; 0
    332e:	e1 f7       	brne	.-8      	; 0x3328 <_Z13mode_selectorv+0x52>
    3330:	00 c0       	rjmp	.+0      	; 0x3332 <_Z13mode_selectorv+0x5c>
    3332:	00 00       	nop
					{
						_delay_ms(500);
						return mat[r][c-4];
    3334:	22 0f       	add	r18, r18
    3336:	33 1f       	adc	r19, r19
    3338:	22 0f       	add	r18, r18
    333a:	33 1f       	adc	r19, r19
    333c:	20 54       	subi	r18, 0x40	; 64
    333e:	3f 4f       	sbci	r19, 0xFF	; 255
    3340:	f9 01       	movw	r30, r18
    3342:	e8 0f       	add	r30, r24
    3344:	f9 1f       	adc	r31, r25
    3346:	80 81       	ld	r24, Z
    3348:	1c c0       	rjmp	.+56     	; 0x3382 <_Z13mode_selectorv+0xac>
    334a:	8f ef       	ldi	r24, 0xFF	; 255
    334c:	94 e3       	ldi	r25, 0x34	; 52
    334e:	4c e0       	ldi	r20, 0x0C	; 12
    3350:	81 50       	subi	r24, 0x01	; 1
    3352:	90 40       	sbci	r25, 0x00	; 0
    3354:	40 40       	sbci	r20, 0x00	; 0
    3356:	e1 f7       	brne	.-8      	; 0x3350 <_Z13mode_selectorv+0x7a>
    3358:	00 c0       	rjmp	.+0      	; 0x335a <_Z13mode_selectorv+0x84>
    335a:	00 00       	nop
	while (1)
	{
		for(int c=4;c<8;c++)
		{
			PORTB=1<<c;
			for(int r=0;r<4;r++)
    335c:	2f 5f       	subi	r18, 0xFF	; 255
    335e:	3f 4f       	sbci	r19, 0xFF	; 255
    3360:	34 96       	adiw	r30, 0x04	; 4
    3362:	24 30       	cpi	r18, 0x04	; 4
    3364:	31 05       	cpc	r19, r1
    3366:	69 f6       	brne	.-102    	; 0x3302 <_Z13mode_selectorv+0x2c>
    3368:	8f e1       	ldi	r24, 0x1F	; 31
    336a:	9e e4       	ldi	r25, 0x4E	; 78
    336c:	01 97       	sbiw	r24, 0x01	; 1
    336e:	f1 f7       	brne	.-4      	; 0x336c <_Z13mode_selectorv+0x96>
    3370:	00 c0       	rjmp	.+0      	; 0x3372 <_Z13mode_selectorv+0x9c>
    3372:	00 00       	nop

char mode_selector()
{
	while (1)
	{
		for(int c=4;c<8;c++)
    3374:	6f 5f       	subi	r22, 0xFF	; 255
    3376:	7f 4f       	sbci	r23, 0xFF	; 255
    3378:	68 30       	cpi	r22, 0x08	; 8
    337a:	71 05       	cpc	r23, r1
    337c:	09 f0       	breq	.+2      	; 0x3380 <_Z13mode_selectorv+0xaa>
    337e:	b0 cf       	rjmp	.-160    	; 0x32e0 <_Z13mode_selectorv+0xa>
    3380:	ad cf       	rjmp	.-166    	; 0x32dc <_Z13mode_selectorv+0x6>
				}
			}
			_delay_ms(10);
		}
	}
}
    3382:	cf 91       	pop	r28
    3384:	08 95       	ret

00003386 <main>:



int main(void)
{
	InitLCD();
    3386:	0e 94 63 02 	call	0x4c6	; 0x4c6 <_Z7InitLCDv>
	
	DDRB=0xFF;
    338a:	8f ef       	ldi	r24, 0xFF	; 255
    338c:	87 bb       	out	0x17, r24	; 23
	DDRA=0xFF;
    338e:	8a bb       	out	0x1a, r24	; 26
		bool f=1;
		while (f)
		{
			for(int c=4;c<8&&f;c++)
			{
				PORTB=1<<c;
    3390:	c1 e0       	ldi	r28, 0x01	; 1
    3392:	d0 e0       	ldi	r29, 0x00	; 0
				for(int r=0;r<4&&f;r++)
				{
					if(PINB&(1<<r))
					{
						if(mat[r][c-4]=='C')
    3394:	ff 24       	eor	r15, r15
    3396:	f3 94       	inc	r15
    3398:	e1 2c       	mov	r14, r1
    339a:	1f 2d       	mov	r17, r15
    339c:	0e 2d       	mov	r16, r14
	
	DDRB=0xFF;
	DDRA=0xFF;
	
	while(true){
		LCD_Clear();
    339e:	0e 94 14 03 	call	0x628	; 0x628 <_Z9LCD_Clearv>
		initial_page();
    33a2:	0e 94 4c 19 	call	0x3298	; 0x3298 <_Z12initial_pagev>
		//take input
		char input = mode_selector();
    33a6:	0e 94 6b 19 	call	0x32d6	; 0x32d6 <_Z13mode_selectorv>
		if(input=='1')
    33aa:	81 33       	cpi	r24, 0x31	; 49
    33ac:	19 f4       	brne	.+6      	; 0x33b4 <main+0x2e>
		{
			calculator();	
    33ae:	0e 94 b5 10 	call	0x216a	; 0x216a <_Z10calculatorv>
    33b2:	16 c0       	rjmp	.+44     	; 0x33e0 <main+0x5a>
		}
		else if(input=='2')
    33b4:	82 33       	cpi	r24, 0x32	; 50
    33b6:	19 f4       	brne	.+6      	; 0x33be <main+0x38>
		{
			gauss();
    33b8:	0e 94 24 17 	call	0x2e48	; 0x2e48 <_Z5gaussv>
    33bc:	11 c0       	rjmp	.+34     	; 0x33e0 <main+0x5a>
		}
		else if(input=='3')
    33be:	83 33       	cpi	r24, 0x33	; 51
    33c0:	19 f4       	brne	.+6      	; 0x33c8 <main+0x42>
		{
			newton_raphson();
    33c2:	0e 94 24 0f 	call	0x1e48	; 0x1e48 <_Z14newton_raphsonv>
    33c6:	0c c0       	rjmp	.+24     	; 0x33e0 <main+0x5a>
		}
		else if(input=='4')
    33c8:	84 33       	cpi	r24, 0x34	; 52
    33ca:	19 f4       	brne	.+6      	; 0x33d2 <main+0x4c>
		{
			simpson();
    33cc:	0e 94 e2 12 	call	0x25c4	; 0x25c4 <_Z7simpsonv>
    33d0:	07 c0       	rjmp	.+14     	; 0x33e0 <main+0x5a>
		}
		else if(input=='5')
    33d2:	85 33       	cpi	r24, 0x35	; 53
    33d4:	29 f4       	brne	.+10     	; 0x33e0 <main+0x5a>
		{
			graph_plot();
    33d6:	0e 94 ac 0a 	call	0x1558	; 0x1558 <_Z10graph_plotv>
    33da:	02 c0       	rjmp	.+4      	; 0x33e0 <main+0x5a>
		}
		
		bool f=1;
		while (f)
    33dc:	99 23       	and	r25, r25
    33de:	f9 f2       	breq	.-66     	; 0x339e <main+0x18>
		{
			for(int c=4;c<8&&f;c++)
    33e0:	44 e0       	ldi	r20, 0x04	; 4
    33e2:	50 e0       	ldi	r21, 0x00	; 0
    33e4:	02 c0       	rjmp	.+4      	; 0x33ea <main+0x64>
    33e6:	99 23       	and	r25, r25
    33e8:	d1 f2       	breq	.-76     	; 0x339e <main+0x18>
			{
				PORTB=1<<c;
    33ea:	ce 01       	movw	r24, r28
    33ec:	04 2e       	mov	r0, r20
    33ee:	02 c0       	rjmp	.+4      	; 0x33f4 <main+0x6e>
    33f0:	88 0f       	add	r24, r24
    33f2:	99 1f       	adc	r25, r25
    33f4:	0a 94       	dec	r0
    33f6:	e2 f7       	brpl	.-8      	; 0x33f0 <main+0x6a>
    33f8:	88 bb       	out	0x18, r24	; 24
    33fa:	fa 01       	movw	r30, r20
    33fc:	e4 54       	subi	r30, 0x44	; 68
    33fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3400:	20 e0       	ldi	r18, 0x00	; 0
    3402:	30 e0       	ldi	r19, 0x00	; 0
    3404:	03 c0       	rjmp	.+6      	; 0x340c <main+0x86>
    3406:	34 96       	adiw	r30, 0x04	; 4
				for(int r=0;r<4&&f;r++)
    3408:	83 34       	cpi	r24, 0x43	; 67
    340a:	99 f1       	breq	.+102    	; 0x3472 <main+0xec>
				{
					if(PINB&(1<<r))
    340c:	86 b3       	in	r24, 0x16	; 22
    340e:	90 e0       	ldi	r25, 0x00	; 0
    3410:	02 2e       	mov	r0, r18
    3412:	02 c0       	rjmp	.+4      	; 0x3418 <main+0x92>
    3414:	95 95       	asr	r25
    3416:	87 95       	ror	r24
    3418:	0a 94       	dec	r0
    341a:	e2 f7       	brpl	.-8      	; 0x3414 <main+0x8e>
    341c:	80 ff       	sbrs	r24, 0
    341e:	23 c0       	rjmp	.+70     	; 0x3466 <main+0xe0>
					{
						if(mat[r][c-4]=='C')
    3420:	80 81       	ld	r24, Z
    3422:	91 2f       	mov	r25, r17
    3424:	83 34       	cpi	r24, 0x43	; 67
    3426:	09 f4       	brne	.+2      	; 0x342a <main+0xa4>
    3428:	90 2f       	mov	r25, r16
    342a:	6f ef       	ldi	r22, 0xFF	; 255
    342c:	74 e3       	ldi	r23, 0x34	; 52
    342e:	ac e0       	ldi	r26, 0x0C	; 12
    3430:	61 50       	subi	r22, 0x01	; 1
    3432:	70 40       	sbci	r23, 0x00	; 0
    3434:	a0 40       	sbci	r26, 0x00	; 0
    3436:	e1 f7       	brne	.-8      	; 0x3430 <main+0xaa>
    3438:	00 c0       	rjmp	.+0      	; 0x343a <main+0xb4>
    343a:	00 00       	nop
		while (f)
		{
			for(int c=4;c<8&&f;c++)
			{
				PORTB=1<<c;
				for(int r=0;r<4&&f;r++)
    343c:	2f 5f       	subi	r18, 0xFF	; 255
    343e:	3f 4f       	sbci	r19, 0xFF	; 255
    3440:	24 30       	cpi	r18, 0x04	; 4
    3442:	31 05       	cpc	r19, r1
    3444:	01 f7       	brne	.-64     	; 0x3406 <main+0x80>
    3446:	01 c0       	rjmp	.+2      	; 0x344a <main+0xc4>
    3448:	9f 2d       	mov	r25, r15
    344a:	ef e1       	ldi	r30, 0x1F	; 31
    344c:	fe e4       	ldi	r31, 0x4E	; 78
    344e:	31 97       	sbiw	r30, 0x01	; 1
    3450:	f1 f7       	brne	.-4      	; 0x344e <main+0xc8>
    3452:	00 c0       	rjmp	.+0      	; 0x3454 <main+0xce>
    3454:	00 00       	nop
		}
		
		bool f=1;
		while (f)
		{
			for(int c=4;c<8&&f;c++)
    3456:	4f 5f       	subi	r20, 0xFF	; 255
    3458:	5f 4f       	sbci	r21, 0xFF	; 255
    345a:	48 30       	cpi	r20, 0x08	; 8
    345c:	51 05       	cpc	r21, r1
    345e:	19 f6       	brne	.-122    	; 0x33e6 <main+0x60>
    3460:	bd cf       	rjmp	.-134    	; 0x33dc <main+0x56>
    3462:	34 96       	adiw	r30, 0x04	; 4
    3464:	d3 cf       	rjmp	.-90     	; 0x340c <main+0x86>
			{
				PORTB=1<<c;
				for(int r=0;r<4&&f;r++)
    3466:	2f 5f       	subi	r18, 0xFF	; 255
    3468:	3f 4f       	sbci	r19, 0xFF	; 255
    346a:	24 30       	cpi	r18, 0x04	; 4
    346c:	31 05       	cpc	r19, r1
    346e:	c9 f7       	brne	.-14     	; 0x3462 <main+0xdc>
    3470:	eb cf       	rjmp	.-42     	; 0x3448 <main+0xc2>
    3472:	8f e1       	ldi	r24, 0x1F	; 31
    3474:	9e e4       	ldi	r25, 0x4E	; 78
    3476:	01 97       	sbiw	r24, 0x01	; 1
    3478:	f1 f7       	brne	.-4      	; 0x3476 <main+0xf0>
    347a:	00 c0       	rjmp	.+0      	; 0x347c <main+0xf6>
    347c:	00 00       	nop
		}
		
		bool f=1;
		while (f)
		{
			for(int c=4;c<8&&f;c++)
    347e:	4f 5f       	subi	r20, 0xFF	; 255
    3480:	5f 4f       	sbci	r21, 0xFF	; 255
    3482:	48 30       	cpi	r20, 0x08	; 8
    3484:	51 05       	cpc	r21, r1
    3486:	09 f4       	brne	.+2      	; 0x348a <main+0x104>
    3488:	8a cf       	rjmp	.-236    	; 0x339e <main+0x18>
    348a:	9e 2d       	mov	r25, r14
    348c:	ac cf       	rjmp	.-168    	; 0x33e6 <main+0x60>

0000348e <_GLOBAL__sub_I_Pix>:
	
}

char s[40];
char tmp[15];
parser ob;
    348e:	82 e6       	ldi	r24, 0x62	; 98
    3490:	92 e0       	ldi	r25, 0x02	; 2
    3492:	0e 94 3a 04 	call	0x874	; 0x874 <_ZN6parserC1Ev>
    3496:	08 95       	ret

00003498 <acos>:
    3498:	9f 93       	push	r25
    349a:	9f 77       	andi	r25, 0x7F	; 127
    349c:	0e 94 0e 1c 	call	0x381c	; 0x381c <__fp_arccos>
    34a0:	0f 90       	pop	r0
    34a2:	00 20       	and	r0, r0
    34a4:	42 f4       	brpl	.+16     	; 0x34b6 <acos+0x1e>
    34a6:	90 58       	subi	r25, 0x80	; 128
    34a8:	a2 ea       	ldi	r26, 0xA2	; 162
    34aa:	2a ed       	ldi	r18, 0xDA	; 218
    34ac:	3f e0       	ldi	r19, 0x0F	; 15
    34ae:	49 e4       	ldi	r20, 0x49	; 73
    34b0:	50 e4       	ldi	r21, 0x40	; 64
    34b2:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    34b6:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>

000034ba <__subsf3>:
    34ba:	50 58       	subi	r21, 0x80	; 128

000034bc <__addsf3>:
    34bc:	bb 27       	eor	r27, r27
    34be:	aa 27       	eor	r26, r26
    34c0:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    34c4:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>
    34c8:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    34cc:	38 f0       	brcs	.+14     	; 0x34dc <__addsf3+0x20>
    34ce:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    34d2:	20 f0       	brcs	.+8      	; 0x34dc <__addsf3+0x20>
    34d4:	39 f4       	brne	.+14     	; 0x34e4 <__addsf3+0x28>
    34d6:	9f 3f       	cpi	r25, 0xFF	; 255
    34d8:	19 f4       	brne	.+6      	; 0x34e0 <__addsf3+0x24>
    34da:	26 f4       	brtc	.+8      	; 0x34e4 <__addsf3+0x28>
    34dc:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    34e0:	0e f4       	brtc	.+2      	; 0x34e4 <__addsf3+0x28>
    34e2:	e0 95       	com	r30
    34e4:	e7 fb       	bst	r30, 7
    34e6:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>

000034ea <__addsf3x>:
    34ea:	e9 2f       	mov	r30, r25
    34ec:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    34f0:	58 f3       	brcs	.-42     	; 0x34c8 <__addsf3+0xc>
    34f2:	ba 17       	cp	r27, r26
    34f4:	62 07       	cpc	r22, r18
    34f6:	73 07       	cpc	r23, r19
    34f8:	84 07       	cpc	r24, r20
    34fa:	95 07       	cpc	r25, r21
    34fc:	20 f0       	brcs	.+8      	; 0x3506 <__addsf3x+0x1c>
    34fe:	79 f4       	brne	.+30     	; 0x351e <__addsf3x+0x34>
    3500:	a6 f5       	brtc	.+104    	; 0x356a <__addsf3x+0x80>
    3502:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <__fp_zero>
    3506:	0e f4       	brtc	.+2      	; 0x350a <__addsf3x+0x20>
    3508:	e0 95       	com	r30
    350a:	0b 2e       	mov	r0, r27
    350c:	ba 2f       	mov	r27, r26
    350e:	a0 2d       	mov	r26, r0
    3510:	0b 01       	movw	r0, r22
    3512:	b9 01       	movw	r22, r18
    3514:	90 01       	movw	r18, r0
    3516:	0c 01       	movw	r0, r24
    3518:	ca 01       	movw	r24, r20
    351a:	a0 01       	movw	r20, r0
    351c:	11 24       	eor	r1, r1
    351e:	ff 27       	eor	r31, r31
    3520:	59 1b       	sub	r21, r25
    3522:	99 f0       	breq	.+38     	; 0x354a <__addsf3x+0x60>
    3524:	59 3f       	cpi	r21, 0xF9	; 249
    3526:	50 f4       	brcc	.+20     	; 0x353c <__addsf3x+0x52>
    3528:	50 3e       	cpi	r21, 0xE0	; 224
    352a:	68 f1       	brcs	.+90     	; 0x3586 <__addsf3x+0x9c>
    352c:	1a 16       	cp	r1, r26
    352e:	f0 40       	sbci	r31, 0x00	; 0
    3530:	a2 2f       	mov	r26, r18
    3532:	23 2f       	mov	r18, r19
    3534:	34 2f       	mov	r19, r20
    3536:	44 27       	eor	r20, r20
    3538:	58 5f       	subi	r21, 0xF8	; 248
    353a:	f3 cf       	rjmp	.-26     	; 0x3522 <__addsf3x+0x38>
    353c:	46 95       	lsr	r20
    353e:	37 95       	ror	r19
    3540:	27 95       	ror	r18
    3542:	a7 95       	ror	r26
    3544:	f0 40       	sbci	r31, 0x00	; 0
    3546:	53 95       	inc	r21
    3548:	c9 f7       	brne	.-14     	; 0x353c <__addsf3x+0x52>
    354a:	7e f4       	brtc	.+30     	; 0x356a <__addsf3x+0x80>
    354c:	1f 16       	cp	r1, r31
    354e:	ba 0b       	sbc	r27, r26
    3550:	62 0b       	sbc	r22, r18
    3552:	73 0b       	sbc	r23, r19
    3554:	84 0b       	sbc	r24, r20
    3556:	ba f0       	brmi	.+46     	; 0x3586 <__addsf3x+0x9c>
    3558:	91 50       	subi	r25, 0x01	; 1
    355a:	a1 f0       	breq	.+40     	; 0x3584 <__addsf3x+0x9a>
    355c:	ff 0f       	add	r31, r31
    355e:	bb 1f       	adc	r27, r27
    3560:	66 1f       	adc	r22, r22
    3562:	77 1f       	adc	r23, r23
    3564:	88 1f       	adc	r24, r24
    3566:	c2 f7       	brpl	.-16     	; 0x3558 <__addsf3x+0x6e>
    3568:	0e c0       	rjmp	.+28     	; 0x3586 <__addsf3x+0x9c>
    356a:	ba 0f       	add	r27, r26
    356c:	62 1f       	adc	r22, r18
    356e:	73 1f       	adc	r23, r19
    3570:	84 1f       	adc	r24, r20
    3572:	48 f4       	brcc	.+18     	; 0x3586 <__addsf3x+0x9c>
    3574:	87 95       	ror	r24
    3576:	77 95       	ror	r23
    3578:	67 95       	ror	r22
    357a:	b7 95       	ror	r27
    357c:	f7 95       	ror	r31
    357e:	9e 3f       	cpi	r25, 0xFE	; 254
    3580:	08 f0       	brcs	.+2      	; 0x3584 <__addsf3x+0x9a>
    3582:	b0 cf       	rjmp	.-160    	; 0x34e4 <__addsf3+0x28>
    3584:	93 95       	inc	r25
    3586:	88 0f       	add	r24, r24
    3588:	08 f0       	brcs	.+2      	; 0x358c <__addsf3x+0xa2>
    358a:	99 27       	eor	r25, r25
    358c:	ee 0f       	add	r30, r30
    358e:	97 95       	ror	r25
    3590:	87 95       	ror	r24
    3592:	08 95       	ret

00003594 <asin>:
    3594:	9f 93       	push	r25
    3596:	9f 77       	andi	r25, 0x7F	; 127
    3598:	ee e3       	ldi	r30, 0x3E	; 62
    359a:	89 37       	cpi	r24, 0x79	; 121
    359c:	9e 07       	cpc	r25, r30
    359e:	28 f4       	brcc	.+10     	; 0x35aa <asin+0x16>
    35a0:	e4 e5       	ldi	r30, 0x54	; 84
    35a2:	f0 e0       	ldi	r31, 0x00	; 0
    35a4:	0e 94 82 1c 	call	0x3904	; 0x3904 <__fp_powsodd>
    35a8:	0c c0       	rjmp	.+24     	; 0x35c2 <asin+0x2e>
    35aa:	0e 94 0e 1c 	call	0x381c	; 0x381c <__fp_arccos>
    35ae:	90 58       	subi	r25, 0x80	; 128
    35b0:	a2 ea       	ldi	r26, 0xA2	; 162
    35b2:	2a ed       	ldi	r18, 0xDA	; 218
    35b4:	3f e0       	ldi	r19, 0x0F	; 15
    35b6:	49 ec       	ldi	r20, 0xC9	; 201
    35b8:	5f e3       	ldi	r21, 0x3F	; 63
    35ba:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    35be:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    35c2:	0f 90       	pop	r0
    35c4:	07 fc       	sbrc	r0, 7
    35c6:	90 58       	subi	r25, 0x80	; 128
    35c8:	08 95       	ret

000035ca <__cmpsf2>:
    35ca:	0e 94 2e 1c 	call	0x385c	; 0x385c <__fp_cmp>
    35ce:	08 f4       	brcc	.+2      	; 0x35d2 <__cmpsf2+0x8>
    35d0:	81 e0       	ldi	r24, 0x01	; 1
    35d2:	08 95       	ret

000035d4 <cos>:
    35d4:	0e 94 a6 1c 	call	0x394c	; 0x394c <__fp_rempio2>
    35d8:	e3 95       	inc	r30
    35da:	0c 94 e0 1c 	jmp	0x39c0	; 0x39c0 <__fp_sinus>

000035de <__divsf3>:
    35de:	0e 94 03 1b 	call	0x3606	; 0x3606 <__divsf3x>
    35e2:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>
    35e6:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    35ea:	58 f0       	brcs	.+22     	; 0x3602 <__divsf3+0x24>
    35ec:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    35f0:	40 f0       	brcs	.+16     	; 0x3602 <__divsf3+0x24>
    35f2:	29 f4       	brne	.+10     	; 0x35fe <__divsf3+0x20>
    35f4:	5f 3f       	cpi	r21, 0xFF	; 255
    35f6:	29 f0       	breq	.+10     	; 0x3602 <__divsf3+0x24>
    35f8:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>
    35fc:	51 11       	cpse	r21, r1
    35fe:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    3602:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>

00003606 <__divsf3x>:
    3606:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    360a:	68 f3       	brcs	.-38     	; 0x35e6 <__divsf3+0x8>

0000360c <__divsf3_pse>:
    360c:	99 23       	and	r25, r25
    360e:	b1 f3       	breq	.-20     	; 0x35fc <__divsf3+0x1e>
    3610:	55 23       	and	r21, r21
    3612:	91 f3       	breq	.-28     	; 0x35f8 <__divsf3+0x1a>
    3614:	95 1b       	sub	r25, r21
    3616:	55 0b       	sbc	r21, r21
    3618:	bb 27       	eor	r27, r27
    361a:	aa 27       	eor	r26, r26
    361c:	62 17       	cp	r22, r18
    361e:	73 07       	cpc	r23, r19
    3620:	84 07       	cpc	r24, r20
    3622:	38 f0       	brcs	.+14     	; 0x3632 <__divsf3_pse+0x26>
    3624:	9f 5f       	subi	r25, 0xFF	; 255
    3626:	5f 4f       	sbci	r21, 0xFF	; 255
    3628:	22 0f       	add	r18, r18
    362a:	33 1f       	adc	r19, r19
    362c:	44 1f       	adc	r20, r20
    362e:	aa 1f       	adc	r26, r26
    3630:	a9 f3       	breq	.-22     	; 0x361c <__divsf3_pse+0x10>
    3632:	35 d0       	rcall	.+106    	; 0x369e <__divsf3_pse+0x92>
    3634:	0e 2e       	mov	r0, r30
    3636:	3a f0       	brmi	.+14     	; 0x3646 <__divsf3_pse+0x3a>
    3638:	e0 e8       	ldi	r30, 0x80	; 128
    363a:	32 d0       	rcall	.+100    	; 0x36a0 <__divsf3_pse+0x94>
    363c:	91 50       	subi	r25, 0x01	; 1
    363e:	50 40       	sbci	r21, 0x00	; 0
    3640:	e6 95       	lsr	r30
    3642:	00 1c       	adc	r0, r0
    3644:	ca f7       	brpl	.-14     	; 0x3638 <__divsf3_pse+0x2c>
    3646:	2b d0       	rcall	.+86     	; 0x369e <__divsf3_pse+0x92>
    3648:	fe 2f       	mov	r31, r30
    364a:	29 d0       	rcall	.+82     	; 0x369e <__divsf3_pse+0x92>
    364c:	66 0f       	add	r22, r22
    364e:	77 1f       	adc	r23, r23
    3650:	88 1f       	adc	r24, r24
    3652:	bb 1f       	adc	r27, r27
    3654:	26 17       	cp	r18, r22
    3656:	37 07       	cpc	r19, r23
    3658:	48 07       	cpc	r20, r24
    365a:	ab 07       	cpc	r26, r27
    365c:	b0 e8       	ldi	r27, 0x80	; 128
    365e:	09 f0       	breq	.+2      	; 0x3662 <__divsf3_pse+0x56>
    3660:	bb 0b       	sbc	r27, r27
    3662:	80 2d       	mov	r24, r0
    3664:	bf 01       	movw	r22, r30
    3666:	ff 27       	eor	r31, r31
    3668:	93 58       	subi	r25, 0x83	; 131
    366a:	5f 4f       	sbci	r21, 0xFF	; 255
    366c:	3a f0       	brmi	.+14     	; 0x367c <__divsf3_pse+0x70>
    366e:	9e 3f       	cpi	r25, 0xFE	; 254
    3670:	51 05       	cpc	r21, r1
    3672:	78 f0       	brcs	.+30     	; 0x3692 <__divsf3_pse+0x86>
    3674:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>
    3678:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    367c:	5f 3f       	cpi	r21, 0xFF	; 255
    367e:	e4 f3       	brlt	.-8      	; 0x3678 <__divsf3_pse+0x6c>
    3680:	98 3e       	cpi	r25, 0xE8	; 232
    3682:	d4 f3       	brlt	.-12     	; 0x3678 <__divsf3_pse+0x6c>
    3684:	86 95       	lsr	r24
    3686:	77 95       	ror	r23
    3688:	67 95       	ror	r22
    368a:	b7 95       	ror	r27
    368c:	f7 95       	ror	r31
    368e:	9f 5f       	subi	r25, 0xFF	; 255
    3690:	c9 f7       	brne	.-14     	; 0x3684 <__divsf3_pse+0x78>
    3692:	88 0f       	add	r24, r24
    3694:	91 1d       	adc	r25, r1
    3696:	96 95       	lsr	r25
    3698:	87 95       	ror	r24
    369a:	97 f9       	bld	r25, 7
    369c:	08 95       	ret
    369e:	e1 e0       	ldi	r30, 0x01	; 1
    36a0:	66 0f       	add	r22, r22
    36a2:	77 1f       	adc	r23, r23
    36a4:	88 1f       	adc	r24, r24
    36a6:	bb 1f       	adc	r27, r27
    36a8:	62 17       	cp	r22, r18
    36aa:	73 07       	cpc	r23, r19
    36ac:	84 07       	cpc	r24, r20
    36ae:	ba 07       	cpc	r27, r26
    36b0:	20 f0       	brcs	.+8      	; 0x36ba <__divsf3_pse+0xae>
    36b2:	62 1b       	sub	r22, r18
    36b4:	73 0b       	sbc	r23, r19
    36b6:	84 0b       	sbc	r24, r20
    36b8:	ba 0b       	sbc	r27, r26
    36ba:	ee 1f       	adc	r30, r30
    36bc:	88 f7       	brcc	.-30     	; 0x36a0 <__divsf3_pse+0x94>
    36be:	e0 95       	com	r30
    36c0:	08 95       	ret
    36c2:	29 f4       	brne	.+10     	; 0x36ce <__divsf3_pse+0xc2>
    36c4:	16 f0       	brts	.+4      	; 0x36ca <__divsf3_pse+0xbe>
    36c6:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>
    36ca:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <__fp_zero>
    36ce:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>

000036d2 <exp>:
    36d2:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    36d6:	a8 f3       	brcs	.-22     	; 0x36c2 <__divsf3_pse+0xb6>
    36d8:	96 38       	cpi	r25, 0x86	; 134
    36da:	a0 f7       	brcc	.-24     	; 0x36c4 <__divsf3_pse+0xb8>
    36dc:	07 f8       	bld	r0, 7
    36de:	0f 92       	push	r0
    36e0:	e8 94       	clt
    36e2:	2b e3       	ldi	r18, 0x3B	; 59
    36e4:	3a ea       	ldi	r19, 0xAA	; 170
    36e6:	48 eb       	ldi	r20, 0xB8	; 184
    36e8:	5f e7       	ldi	r21, 0x7F	; 127
    36ea:	0e 94 06 1e 	call	0x3c0c	; 0x3c0c <__mulsf3_pse>
    36ee:	0f 92       	push	r0
    36f0:	0f 92       	push	r0
    36f2:	0f 92       	push	r0
    36f4:	4d b7       	in	r20, 0x3d	; 61
    36f6:	5e b7       	in	r21, 0x3e	; 62
    36f8:	0f 92       	push	r0
    36fa:	0e 94 bc 1d 	call	0x3b78	; 0x3b78 <modf>
    36fe:	e8 e6       	ldi	r30, 0x68	; 104
    3700:	f0 e0       	ldi	r31, 0x00	; 0
    3702:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    3706:	4f 91       	pop	r20
    3708:	5f 91       	pop	r21
    370a:	ef 91       	pop	r30
    370c:	ff 91       	pop	r31
    370e:	e5 95       	asr	r30
    3710:	ee 1f       	adc	r30, r30
    3712:	ff 1f       	adc	r31, r31
    3714:	49 f0       	breq	.+18     	; 0x3728 <exp+0x56>
    3716:	fe 57       	subi	r31, 0x7E	; 126
    3718:	e0 68       	ori	r30, 0x80	; 128
    371a:	44 27       	eor	r20, r20
    371c:	ee 0f       	add	r30, r30
    371e:	44 1f       	adc	r20, r20
    3720:	fa 95       	dec	r31
    3722:	e1 f7       	brne	.-8      	; 0x371c <exp+0x4a>
    3724:	41 95       	neg	r20
    3726:	55 0b       	sbc	r21, r21
    3728:	0e 94 2e 1d 	call	0x3a5c	; 0x3a5c <ldexp>
    372c:	0f 90       	pop	r0
    372e:	07 fe       	sbrs	r0, 7
    3730:	0c 94 22 1d 	jmp	0x3a44	; 0x3a44 <inverse>
    3734:	08 95       	ret

00003736 <__fixsfsi>:
    3736:	0e 94 a2 1b 	call	0x3744	; 0x3744 <__fixunssfsi>
    373a:	68 94       	set
    373c:	b1 11       	cpse	r27, r1
    373e:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    3742:	08 95       	ret

00003744 <__fixunssfsi>:
    3744:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3748:	88 f0       	brcs	.+34     	; 0x376c <__fixunssfsi+0x28>
    374a:	9f 57       	subi	r25, 0x7F	; 127
    374c:	98 f0       	brcs	.+38     	; 0x3774 <__fixunssfsi+0x30>
    374e:	b9 2f       	mov	r27, r25
    3750:	99 27       	eor	r25, r25
    3752:	b7 51       	subi	r27, 0x17	; 23
    3754:	b0 f0       	brcs	.+44     	; 0x3782 <__fixunssfsi+0x3e>
    3756:	e1 f0       	breq	.+56     	; 0x3790 <__fixunssfsi+0x4c>
    3758:	66 0f       	add	r22, r22
    375a:	77 1f       	adc	r23, r23
    375c:	88 1f       	adc	r24, r24
    375e:	99 1f       	adc	r25, r25
    3760:	1a f0       	brmi	.+6      	; 0x3768 <__fixunssfsi+0x24>
    3762:	ba 95       	dec	r27
    3764:	c9 f7       	brne	.-14     	; 0x3758 <__fixunssfsi+0x14>
    3766:	14 c0       	rjmp	.+40     	; 0x3790 <__fixunssfsi+0x4c>
    3768:	b1 30       	cpi	r27, 0x01	; 1
    376a:	91 f0       	breq	.+36     	; 0x3790 <__fixunssfsi+0x4c>
    376c:	0e 94 16 1d 	call	0x3a2c	; 0x3a2c <__fp_zero>
    3770:	b1 e0       	ldi	r27, 0x01	; 1
    3772:	08 95       	ret
    3774:	0c 94 16 1d 	jmp	0x3a2c	; 0x3a2c <__fp_zero>
    3778:	67 2f       	mov	r22, r23
    377a:	78 2f       	mov	r23, r24
    377c:	88 27       	eor	r24, r24
    377e:	b8 5f       	subi	r27, 0xF8	; 248
    3780:	39 f0       	breq	.+14     	; 0x3790 <__fixunssfsi+0x4c>
    3782:	b9 3f       	cpi	r27, 0xF9	; 249
    3784:	cc f3       	brlt	.-14     	; 0x3778 <__fixunssfsi+0x34>
    3786:	86 95       	lsr	r24
    3788:	77 95       	ror	r23
    378a:	67 95       	ror	r22
    378c:	b3 95       	inc	r27
    378e:	d9 f7       	brne	.-10     	; 0x3786 <__fixunssfsi+0x42>
    3790:	3e f4       	brtc	.+14     	; 0x37a0 <__fixunssfsi+0x5c>
    3792:	90 95       	com	r25
    3794:	80 95       	com	r24
    3796:	70 95       	com	r23
    3798:	61 95       	neg	r22
    379a:	7f 4f       	sbci	r23, 0xFF	; 255
    379c:	8f 4f       	sbci	r24, 0xFF	; 255
    379e:	9f 4f       	sbci	r25, 0xFF	; 255
    37a0:	08 95       	ret

000037a2 <__floatunsisf>:
    37a2:	e8 94       	clt
    37a4:	09 c0       	rjmp	.+18     	; 0x37b8 <__floatsisf+0x12>

000037a6 <__floatsisf>:
    37a6:	97 fb       	bst	r25, 7
    37a8:	3e f4       	brtc	.+14     	; 0x37b8 <__floatsisf+0x12>
    37aa:	90 95       	com	r25
    37ac:	80 95       	com	r24
    37ae:	70 95       	com	r23
    37b0:	61 95       	neg	r22
    37b2:	7f 4f       	sbci	r23, 0xFF	; 255
    37b4:	8f 4f       	sbci	r24, 0xFF	; 255
    37b6:	9f 4f       	sbci	r25, 0xFF	; 255
    37b8:	99 23       	and	r25, r25
    37ba:	a9 f0       	breq	.+42     	; 0x37e6 <__floatsisf+0x40>
    37bc:	f9 2f       	mov	r31, r25
    37be:	96 e9       	ldi	r25, 0x96	; 150
    37c0:	bb 27       	eor	r27, r27
    37c2:	93 95       	inc	r25
    37c4:	f6 95       	lsr	r31
    37c6:	87 95       	ror	r24
    37c8:	77 95       	ror	r23
    37ca:	67 95       	ror	r22
    37cc:	b7 95       	ror	r27
    37ce:	f1 11       	cpse	r31, r1
    37d0:	f8 cf       	rjmp	.-16     	; 0x37c2 <__floatsisf+0x1c>
    37d2:	fa f4       	brpl	.+62     	; 0x3812 <__floatsisf+0x6c>
    37d4:	bb 0f       	add	r27, r27
    37d6:	11 f4       	brne	.+4      	; 0x37dc <__floatsisf+0x36>
    37d8:	60 ff       	sbrs	r22, 0
    37da:	1b c0       	rjmp	.+54     	; 0x3812 <__floatsisf+0x6c>
    37dc:	6f 5f       	subi	r22, 0xFF	; 255
    37de:	7f 4f       	sbci	r23, 0xFF	; 255
    37e0:	8f 4f       	sbci	r24, 0xFF	; 255
    37e2:	9f 4f       	sbci	r25, 0xFF	; 255
    37e4:	16 c0       	rjmp	.+44     	; 0x3812 <__floatsisf+0x6c>
    37e6:	88 23       	and	r24, r24
    37e8:	11 f0       	breq	.+4      	; 0x37ee <__floatsisf+0x48>
    37ea:	96 e9       	ldi	r25, 0x96	; 150
    37ec:	11 c0       	rjmp	.+34     	; 0x3810 <__floatsisf+0x6a>
    37ee:	77 23       	and	r23, r23
    37f0:	21 f0       	breq	.+8      	; 0x37fa <__floatsisf+0x54>
    37f2:	9e e8       	ldi	r25, 0x8E	; 142
    37f4:	87 2f       	mov	r24, r23
    37f6:	76 2f       	mov	r23, r22
    37f8:	05 c0       	rjmp	.+10     	; 0x3804 <__floatsisf+0x5e>
    37fa:	66 23       	and	r22, r22
    37fc:	71 f0       	breq	.+28     	; 0x381a <__floatsisf+0x74>
    37fe:	96 e8       	ldi	r25, 0x86	; 134
    3800:	86 2f       	mov	r24, r22
    3802:	70 e0       	ldi	r23, 0x00	; 0
    3804:	60 e0       	ldi	r22, 0x00	; 0
    3806:	2a f0       	brmi	.+10     	; 0x3812 <__floatsisf+0x6c>
    3808:	9a 95       	dec	r25
    380a:	66 0f       	add	r22, r22
    380c:	77 1f       	adc	r23, r23
    380e:	88 1f       	adc	r24, r24
    3810:	da f7       	brpl	.-10     	; 0x3808 <__floatsisf+0x62>
    3812:	88 0f       	add	r24, r24
    3814:	96 95       	lsr	r25
    3816:	87 95       	ror	r24
    3818:	97 f9       	bld	r25, 7
    381a:	08 95       	ret

0000381c <__fp_arccos>:
    381c:	df 93       	push	r29
    381e:	cf 93       	push	r28
    3820:	1f 93       	push	r17
    3822:	0f 93       	push	r16
    3824:	8b 01       	movw	r16, r22
    3826:	ec 01       	movw	r28, r24
    3828:	e0 e9       	ldi	r30, 0x90	; 144
    382a:	f0 e0       	ldi	r31, 0x00	; 0
    382c:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    3830:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    3834:	98 01       	movw	r18, r16
    3836:	ae 01       	movw	r20, r28
    3838:	8b 01       	movw	r16, r22
    383a:	ec 01       	movw	r28, r24
    383c:	60 e0       	ldi	r22, 0x00	; 0
    383e:	70 e0       	ldi	r23, 0x00	; 0
    3840:	80 e8       	ldi	r24, 0x80	; 128
    3842:	9f e3       	ldi	r25, 0x3F	; 63
    3844:	0e 94 5d 1a 	call	0x34ba	; 0x34ba <__subsf3>
    3848:	0e 94 df 1e 	call	0x3dbe	; 0x3dbe <sqrt>
    384c:	98 01       	movw	r18, r16
    384e:	ae 01       	movw	r20, r28
    3850:	0f 91       	pop	r16
    3852:	1f 91       	pop	r17
    3854:	cf 91       	pop	r28
    3856:	df 91       	pop	r29
    3858:	0c 94 03 1e 	jmp	0x3c06	; 0x3c06 <__mulsf3x>

0000385c <__fp_cmp>:
    385c:	99 0f       	add	r25, r25
    385e:	00 08       	sbc	r0, r0
    3860:	55 0f       	add	r21, r21
    3862:	aa 0b       	sbc	r26, r26
    3864:	e0 e8       	ldi	r30, 0x80	; 128
    3866:	fe ef       	ldi	r31, 0xFE	; 254
    3868:	16 16       	cp	r1, r22
    386a:	17 06       	cpc	r1, r23
    386c:	e8 07       	cpc	r30, r24
    386e:	f9 07       	cpc	r31, r25
    3870:	c0 f0       	brcs	.+48     	; 0x38a2 <__fp_cmp+0x46>
    3872:	12 16       	cp	r1, r18
    3874:	13 06       	cpc	r1, r19
    3876:	e4 07       	cpc	r30, r20
    3878:	f5 07       	cpc	r31, r21
    387a:	98 f0       	brcs	.+38     	; 0x38a2 <__fp_cmp+0x46>
    387c:	62 1b       	sub	r22, r18
    387e:	73 0b       	sbc	r23, r19
    3880:	84 0b       	sbc	r24, r20
    3882:	95 0b       	sbc	r25, r21
    3884:	39 f4       	brne	.+14     	; 0x3894 <__fp_cmp+0x38>
    3886:	0a 26       	eor	r0, r26
    3888:	61 f0       	breq	.+24     	; 0x38a2 <__fp_cmp+0x46>
    388a:	23 2b       	or	r18, r19
    388c:	24 2b       	or	r18, r20
    388e:	25 2b       	or	r18, r21
    3890:	21 f4       	brne	.+8      	; 0x389a <__fp_cmp+0x3e>
    3892:	08 95       	ret
    3894:	0a 26       	eor	r0, r26
    3896:	09 f4       	brne	.+2      	; 0x389a <__fp_cmp+0x3e>
    3898:	a1 40       	sbci	r26, 0x01	; 1
    389a:	a6 95       	lsr	r26
    389c:	8f ef       	ldi	r24, 0xFF	; 255
    389e:	81 1d       	adc	r24, r1
    38a0:	81 1d       	adc	r24, r1
    38a2:	08 95       	ret

000038a4 <__fp_inf>:
    38a4:	97 f9       	bld	r25, 7
    38a6:	9f 67       	ori	r25, 0x7F	; 127
    38a8:	80 e8       	ldi	r24, 0x80	; 128
    38aa:	70 e0       	ldi	r23, 0x00	; 0
    38ac:	60 e0       	ldi	r22, 0x00	; 0
    38ae:	08 95       	ret

000038b0 <__fp_nan>:
    38b0:	9f ef       	ldi	r25, 0xFF	; 255
    38b2:	80 ec       	ldi	r24, 0xC0	; 192
    38b4:	08 95       	ret

000038b6 <__fp_powser>:
    38b6:	df 93       	push	r29
    38b8:	cf 93       	push	r28
    38ba:	1f 93       	push	r17
    38bc:	0f 93       	push	r16
    38be:	ff 92       	push	r15
    38c0:	ef 92       	push	r14
    38c2:	df 92       	push	r13
    38c4:	7b 01       	movw	r14, r22
    38c6:	8c 01       	movw	r16, r24
    38c8:	68 94       	set
    38ca:	06 c0       	rjmp	.+12     	; 0x38d8 <__fp_powser+0x22>
    38cc:	da 2e       	mov	r13, r26
    38ce:	ef 01       	movw	r28, r30
    38d0:	0e 94 03 1e 	call	0x3c06	; 0x3c06 <__mulsf3x>
    38d4:	fe 01       	movw	r30, r28
    38d6:	e8 94       	clt
    38d8:	a5 91       	lpm	r26, Z+
    38da:	25 91       	lpm	r18, Z+
    38dc:	35 91       	lpm	r19, Z+
    38de:	45 91       	lpm	r20, Z+
    38e0:	55 91       	lpm	r21, Z+
    38e2:	a6 f3       	brts	.-24     	; 0x38cc <__fp_powser+0x16>
    38e4:	ef 01       	movw	r28, r30
    38e6:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    38ea:	fe 01       	movw	r30, r28
    38ec:	97 01       	movw	r18, r14
    38ee:	a8 01       	movw	r20, r16
    38f0:	da 94       	dec	r13
    38f2:	69 f7       	brne	.-38     	; 0x38ce <__fp_powser+0x18>
    38f4:	df 90       	pop	r13
    38f6:	ef 90       	pop	r14
    38f8:	ff 90       	pop	r15
    38fa:	0f 91       	pop	r16
    38fc:	1f 91       	pop	r17
    38fe:	cf 91       	pop	r28
    3900:	df 91       	pop	r29
    3902:	08 95       	ret

00003904 <__fp_powsodd>:
    3904:	9f 93       	push	r25
    3906:	8f 93       	push	r24
    3908:	7f 93       	push	r23
    390a:	6f 93       	push	r22
    390c:	ff 93       	push	r31
    390e:	ef 93       	push	r30
    3910:	9b 01       	movw	r18, r22
    3912:	ac 01       	movw	r20, r24
    3914:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    3918:	ef 91       	pop	r30
    391a:	ff 91       	pop	r31
    391c:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    3920:	2f 91       	pop	r18
    3922:	3f 91       	pop	r19
    3924:	4f 91       	pop	r20
    3926:	5f 91       	pop	r21
    3928:	0c 94 f0 1d 	jmp	0x3be0	; 0x3be0 <__mulsf3>

0000392c <__fp_pscA>:
    392c:	00 24       	eor	r0, r0
    392e:	0a 94       	dec	r0
    3930:	16 16       	cp	r1, r22
    3932:	17 06       	cpc	r1, r23
    3934:	18 06       	cpc	r1, r24
    3936:	09 06       	cpc	r0, r25
    3938:	08 95       	ret

0000393a <__fp_pscB>:
    393a:	00 24       	eor	r0, r0
    393c:	0a 94       	dec	r0
    393e:	12 16       	cp	r1, r18
    3940:	13 06       	cpc	r1, r19
    3942:	14 06       	cpc	r1, r20
    3944:	05 06       	cpc	r0, r21
    3946:	08 95       	ret
    3948:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>

0000394c <__fp_rempio2>:
    394c:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3950:	d8 f3       	brcs	.-10     	; 0x3948 <__fp_pscB+0xe>
    3952:	e8 94       	clt
    3954:	e0 e0       	ldi	r30, 0x00	; 0
    3956:	bb 27       	eor	r27, r27
    3958:	9f 57       	subi	r25, 0x7F	; 127
    395a:	f0 f0       	brcs	.+60     	; 0x3998 <__fp_rempio2+0x4c>
    395c:	2a ed       	ldi	r18, 0xDA	; 218
    395e:	3f e0       	ldi	r19, 0x0F	; 15
    3960:	49 ec       	ldi	r20, 0xC9	; 201
    3962:	06 c0       	rjmp	.+12     	; 0x3970 <__fp_rempio2+0x24>
    3964:	ee 0f       	add	r30, r30
    3966:	bb 0f       	add	r27, r27
    3968:	66 1f       	adc	r22, r22
    396a:	77 1f       	adc	r23, r23
    396c:	88 1f       	adc	r24, r24
    396e:	28 f0       	brcs	.+10     	; 0x397a <__fp_rempio2+0x2e>
    3970:	b2 3a       	cpi	r27, 0xA2	; 162
    3972:	62 07       	cpc	r22, r18
    3974:	73 07       	cpc	r23, r19
    3976:	84 07       	cpc	r24, r20
    3978:	28 f0       	brcs	.+10     	; 0x3984 <__fp_rempio2+0x38>
    397a:	b2 5a       	subi	r27, 0xA2	; 162
    397c:	62 0b       	sbc	r22, r18
    397e:	73 0b       	sbc	r23, r19
    3980:	84 0b       	sbc	r24, r20
    3982:	e3 95       	inc	r30
    3984:	9a 95       	dec	r25
    3986:	72 f7       	brpl	.-36     	; 0x3964 <__fp_rempio2+0x18>
    3988:	80 38       	cpi	r24, 0x80	; 128
    398a:	30 f4       	brcc	.+12     	; 0x3998 <__fp_rempio2+0x4c>
    398c:	9a 95       	dec	r25
    398e:	bb 0f       	add	r27, r27
    3990:	66 1f       	adc	r22, r22
    3992:	77 1f       	adc	r23, r23
    3994:	88 1f       	adc	r24, r24
    3996:	d2 f7       	brpl	.-12     	; 0x398c <__fp_rempio2+0x40>
    3998:	90 48       	sbci	r25, 0x80	; 128
    399a:	0c 94 61 1f 	jmp	0x3ec2	; 0x3ec2 <__fp_mpack_finite>

0000399e <__fp_round>:
    399e:	09 2e       	mov	r0, r25
    39a0:	03 94       	inc	r0
    39a2:	00 0c       	add	r0, r0
    39a4:	11 f4       	brne	.+4      	; 0x39aa <__fp_round+0xc>
    39a6:	88 23       	and	r24, r24
    39a8:	52 f0       	brmi	.+20     	; 0x39be <__fp_round+0x20>
    39aa:	bb 0f       	add	r27, r27
    39ac:	40 f4       	brcc	.+16     	; 0x39be <__fp_round+0x20>
    39ae:	bf 2b       	or	r27, r31
    39b0:	11 f4       	brne	.+4      	; 0x39b6 <__fp_round+0x18>
    39b2:	60 ff       	sbrs	r22, 0
    39b4:	04 c0       	rjmp	.+8      	; 0x39be <__fp_round+0x20>
    39b6:	6f 5f       	subi	r22, 0xFF	; 255
    39b8:	7f 4f       	sbci	r23, 0xFF	; 255
    39ba:	8f 4f       	sbci	r24, 0xFF	; 255
    39bc:	9f 4f       	sbci	r25, 0xFF	; 255
    39be:	08 95       	ret

000039c0 <__fp_sinus>:
    39c0:	ef 93       	push	r30
    39c2:	e0 ff       	sbrs	r30, 0
    39c4:	07 c0       	rjmp	.+14     	; 0x39d4 <__fp_sinus+0x14>
    39c6:	a2 ea       	ldi	r26, 0xA2	; 162
    39c8:	2a ed       	ldi	r18, 0xDA	; 218
    39ca:	3f e0       	ldi	r19, 0x0F	; 15
    39cc:	49 ec       	ldi	r20, 0xC9	; 201
    39ce:	5f eb       	ldi	r21, 0xBF	; 191
    39d0:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    39d4:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    39d8:	0f 90       	pop	r0
    39da:	03 94       	inc	r0
    39dc:	01 fc       	sbrc	r0, 1
    39de:	90 58       	subi	r25, 0x80	; 128
    39e0:	e8 eb       	ldi	r30, 0xB8	; 184
    39e2:	f0 e0       	ldi	r31, 0x00	; 0
    39e4:	0c 94 82 1c 	jmp	0x3904	; 0x3904 <__fp_powsodd>

000039e8 <__fp_split3>:
    39e8:	57 fd       	sbrc	r21, 7
    39ea:	90 58       	subi	r25, 0x80	; 128
    39ec:	44 0f       	add	r20, r20
    39ee:	55 1f       	adc	r21, r21
    39f0:	59 f0       	breq	.+22     	; 0x3a08 <__fp_splitA+0x10>
    39f2:	5f 3f       	cpi	r21, 0xFF	; 255
    39f4:	71 f0       	breq	.+28     	; 0x3a12 <__fp_splitA+0x1a>
    39f6:	47 95       	ror	r20

000039f8 <__fp_splitA>:
    39f8:	88 0f       	add	r24, r24
    39fa:	97 fb       	bst	r25, 7
    39fc:	99 1f       	adc	r25, r25
    39fe:	61 f0       	breq	.+24     	; 0x3a18 <__fp_splitA+0x20>
    3a00:	9f 3f       	cpi	r25, 0xFF	; 255
    3a02:	79 f0       	breq	.+30     	; 0x3a22 <__fp_splitA+0x2a>
    3a04:	87 95       	ror	r24
    3a06:	08 95       	ret
    3a08:	12 16       	cp	r1, r18
    3a0a:	13 06       	cpc	r1, r19
    3a0c:	14 06       	cpc	r1, r20
    3a0e:	55 1f       	adc	r21, r21
    3a10:	f2 cf       	rjmp	.-28     	; 0x39f6 <__fp_split3+0xe>
    3a12:	46 95       	lsr	r20
    3a14:	f1 df       	rcall	.-30     	; 0x39f8 <__fp_splitA>
    3a16:	08 c0       	rjmp	.+16     	; 0x3a28 <__fp_splitA+0x30>
    3a18:	16 16       	cp	r1, r22
    3a1a:	17 06       	cpc	r1, r23
    3a1c:	18 06       	cpc	r1, r24
    3a1e:	99 1f       	adc	r25, r25
    3a20:	f1 cf       	rjmp	.-30     	; 0x3a04 <__fp_splitA+0xc>
    3a22:	86 95       	lsr	r24
    3a24:	71 05       	cpc	r23, r1
    3a26:	61 05       	cpc	r22, r1
    3a28:	08 94       	sec
    3a2a:	08 95       	ret

00003a2c <__fp_zero>:
    3a2c:	e8 94       	clt

00003a2e <__fp_szero>:
    3a2e:	bb 27       	eor	r27, r27
    3a30:	66 27       	eor	r22, r22
    3a32:	77 27       	eor	r23, r23
    3a34:	cb 01       	movw	r24, r22
    3a36:	97 f9       	bld	r25, 7
    3a38:	08 95       	ret

00003a3a <__gesf2>:
    3a3a:	0e 94 2e 1c 	call	0x385c	; 0x385c <__fp_cmp>
    3a3e:	08 f4       	brcc	.+2      	; 0x3a42 <__gesf2+0x8>
    3a40:	8f ef       	ldi	r24, 0xFF	; 255
    3a42:	08 95       	ret

00003a44 <inverse>:
    3a44:	9b 01       	movw	r18, r22
    3a46:	ac 01       	movw	r20, r24
    3a48:	60 e0       	ldi	r22, 0x00	; 0
    3a4a:	70 e0       	ldi	r23, 0x00	; 0
    3a4c:	80 e8       	ldi	r24, 0x80	; 128
    3a4e:	9f e3       	ldi	r25, 0x3F	; 63
    3a50:	0c 94 ef 1a 	jmp	0x35de	; 0x35de <__divsf3>
    3a54:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>
    3a58:	0c 94 5f 1f 	jmp	0x3ebe	; 0x3ebe <__fp_mpack>

00003a5c <ldexp>:
    3a5c:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3a60:	d8 f3       	brcs	.-10     	; 0x3a58 <inverse+0x14>
    3a62:	99 23       	and	r25, r25
    3a64:	c9 f3       	breq	.-14     	; 0x3a58 <inverse+0x14>
    3a66:	94 0f       	add	r25, r20
    3a68:	51 1d       	adc	r21, r1
    3a6a:	a3 f3       	brvs	.-24     	; 0x3a54 <inverse+0x10>
    3a6c:	91 50       	subi	r25, 0x01	; 1
    3a6e:	50 40       	sbci	r21, 0x00	; 0
    3a70:	94 f0       	brlt	.+36     	; 0x3a96 <ldexp+0x3a>
    3a72:	59 f0       	breq	.+22     	; 0x3a8a <ldexp+0x2e>
    3a74:	88 23       	and	r24, r24
    3a76:	32 f0       	brmi	.+12     	; 0x3a84 <ldexp+0x28>
    3a78:	66 0f       	add	r22, r22
    3a7a:	77 1f       	adc	r23, r23
    3a7c:	88 1f       	adc	r24, r24
    3a7e:	91 50       	subi	r25, 0x01	; 1
    3a80:	50 40       	sbci	r21, 0x00	; 0
    3a82:	c1 f7       	brne	.-16     	; 0x3a74 <ldexp+0x18>
    3a84:	9e 3f       	cpi	r25, 0xFE	; 254
    3a86:	51 05       	cpc	r21, r1
    3a88:	2c f7       	brge	.-54     	; 0x3a54 <inverse+0x10>
    3a8a:	88 0f       	add	r24, r24
    3a8c:	91 1d       	adc	r25, r1
    3a8e:	96 95       	lsr	r25
    3a90:	87 95       	ror	r24
    3a92:	97 f9       	bld	r25, 7
    3a94:	08 95       	ret
    3a96:	5f 3f       	cpi	r21, 0xFF	; 255
    3a98:	ac f0       	brlt	.+42     	; 0x3ac4 <ldexp+0x68>
    3a9a:	98 3e       	cpi	r25, 0xE8	; 232
    3a9c:	9c f0       	brlt	.+38     	; 0x3ac4 <ldexp+0x68>
    3a9e:	bb 27       	eor	r27, r27
    3aa0:	86 95       	lsr	r24
    3aa2:	77 95       	ror	r23
    3aa4:	67 95       	ror	r22
    3aa6:	b7 95       	ror	r27
    3aa8:	08 f4       	brcc	.+2      	; 0x3aac <ldexp+0x50>
    3aaa:	b1 60       	ori	r27, 0x01	; 1
    3aac:	93 95       	inc	r25
    3aae:	c1 f7       	brne	.-16     	; 0x3aa0 <ldexp+0x44>
    3ab0:	bb 0f       	add	r27, r27
    3ab2:	58 f7       	brcc	.-42     	; 0x3a8a <ldexp+0x2e>
    3ab4:	11 f4       	brne	.+4      	; 0x3aba <ldexp+0x5e>
    3ab6:	60 ff       	sbrs	r22, 0
    3ab8:	e8 cf       	rjmp	.-48     	; 0x3a8a <ldexp+0x2e>
    3aba:	6f 5f       	subi	r22, 0xFF	; 255
    3abc:	7f 4f       	sbci	r23, 0xFF	; 255
    3abe:	8f 4f       	sbci	r24, 0xFF	; 255
    3ac0:	9f 4f       	sbci	r25, 0xFF	; 255
    3ac2:	e3 cf       	rjmp	.-58     	; 0x3a8a <ldexp+0x2e>
    3ac4:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>

00003ac8 <log10>:
    3ac8:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <log>
    3acc:	29 ed       	ldi	r18, 0xD9	; 217
    3ace:	3b e5       	ldi	r19, 0x5B	; 91
    3ad0:	4e ed       	ldi	r20, 0xDE	; 222
    3ad2:	5e e3       	ldi	r21, 0x3E	; 62
    3ad4:	0c 94 f0 1d 	jmp	0x3be0	; 0x3be0 <__mulsf3>
    3ad8:	16 f0       	brts	.+4      	; 0x3ade <log10+0x16>
    3ada:	0c 94 5f 1f 	jmp	0x3ebe	; 0x3ebe <__fp_mpack>
    3ade:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3ae2:	68 94       	set
    3ae4:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>

00003ae8 <log>:
    3ae8:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3aec:	a8 f3       	brcs	.-22     	; 0x3ad8 <log10+0x10>
    3aee:	99 23       	and	r25, r25
    3af0:	c1 f3       	breq	.-16     	; 0x3ae2 <log10+0x1a>
    3af2:	ae f3       	brts	.-22     	; 0x3ade <log10+0x16>
    3af4:	df 93       	push	r29
    3af6:	cf 93       	push	r28
    3af8:	1f 93       	push	r17
    3afa:	0f 93       	push	r16
    3afc:	ff 92       	push	r15
    3afe:	c9 2f       	mov	r28, r25
    3b00:	dd 27       	eor	r29, r29
    3b02:	88 23       	and	r24, r24
    3b04:	2a f0       	brmi	.+10     	; 0x3b10 <log+0x28>
    3b06:	21 97       	sbiw	r28, 0x01	; 1
    3b08:	66 0f       	add	r22, r22
    3b0a:	77 1f       	adc	r23, r23
    3b0c:	88 1f       	adc	r24, r24
    3b0e:	da f7       	brpl	.-10     	; 0x3b06 <log+0x1e>
    3b10:	20 e0       	ldi	r18, 0x00	; 0
    3b12:	30 e0       	ldi	r19, 0x00	; 0
    3b14:	40 e8       	ldi	r20, 0x80	; 128
    3b16:	5f eb       	ldi	r21, 0xBF	; 191
    3b18:	9f e3       	ldi	r25, 0x3F	; 63
    3b1a:	88 39       	cpi	r24, 0x98	; 152
    3b1c:	20 f0       	brcs	.+8      	; 0x3b26 <log+0x3e>
    3b1e:	80 3e       	cpi	r24, 0xE0	; 224
    3b20:	38 f0       	brcs	.+14     	; 0x3b30 <log+0x48>
    3b22:	21 96       	adiw	r28, 0x01	; 1
    3b24:	8f 77       	andi	r24, 0x7F	; 127
    3b26:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    3b2a:	e6 ed       	ldi	r30, 0xD6	; 214
    3b2c:	f0 e0       	ldi	r31, 0x00	; 0
    3b2e:	04 c0       	rjmp	.+8      	; 0x3b38 <log+0x50>
    3b30:	0e 94 5e 1a 	call	0x34bc	; 0x34bc <__addsf3>
    3b34:	e3 e0       	ldi	r30, 0x03	; 3
    3b36:	f1 e0       	ldi	r31, 0x01	; 1
    3b38:	0e 94 5b 1c 	call	0x38b6	; 0x38b6 <__fp_powser>
    3b3c:	8b 01       	movw	r16, r22
    3b3e:	be 01       	movw	r22, r28
    3b40:	ec 01       	movw	r28, r24
    3b42:	fb 2e       	mov	r15, r27
    3b44:	6f 57       	subi	r22, 0x7F	; 127
    3b46:	71 09       	sbc	r23, r1
    3b48:	75 95       	asr	r23
    3b4a:	77 1f       	adc	r23, r23
    3b4c:	88 0b       	sbc	r24, r24
    3b4e:	99 0b       	sbc	r25, r25
    3b50:	0e 94 d3 1b 	call	0x37a6	; 0x37a6 <__floatsisf>
    3b54:	28 e1       	ldi	r18, 0x18	; 24
    3b56:	32 e7       	ldi	r19, 0x72	; 114
    3b58:	41 e3       	ldi	r20, 0x31	; 49
    3b5a:	5f e3       	ldi	r21, 0x3F	; 63
    3b5c:	0e 94 03 1e 	call	0x3c06	; 0x3c06 <__mulsf3x>
    3b60:	af 2d       	mov	r26, r15
    3b62:	98 01       	movw	r18, r16
    3b64:	ae 01       	movw	r20, r28
    3b66:	ff 90       	pop	r15
    3b68:	0f 91       	pop	r16
    3b6a:	1f 91       	pop	r17
    3b6c:	cf 91       	pop	r28
    3b6e:	df 91       	pop	r29
    3b70:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    3b74:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>

00003b78 <modf>:
    3b78:	fa 01       	movw	r30, r20
    3b7a:	dc 01       	movw	r26, r24
    3b7c:	aa 0f       	add	r26, r26
    3b7e:	bb 1f       	adc	r27, r27
    3b80:	9b 01       	movw	r18, r22
    3b82:	ac 01       	movw	r20, r24
    3b84:	bf 57       	subi	r27, 0x7F	; 127
    3b86:	28 f4       	brcc	.+10     	; 0x3b92 <modf+0x1a>
    3b88:	22 27       	eor	r18, r18
    3b8a:	33 27       	eor	r19, r19
    3b8c:	44 27       	eor	r20, r20
    3b8e:	50 78       	andi	r21, 0x80	; 128
    3b90:	20 c0       	rjmp	.+64     	; 0x3bd2 <modf+0x5a>
    3b92:	b7 51       	subi	r27, 0x17	; 23
    3b94:	90 f4       	brcc	.+36     	; 0x3bba <modf+0x42>
    3b96:	ab 2f       	mov	r26, r27
    3b98:	00 24       	eor	r0, r0
    3b9a:	46 95       	lsr	r20
    3b9c:	37 95       	ror	r19
    3b9e:	27 95       	ror	r18
    3ba0:	01 1c       	adc	r0, r1
    3ba2:	a3 95       	inc	r26
    3ba4:	d2 f3       	brmi	.-12     	; 0x3b9a <modf+0x22>
    3ba6:	00 20       	and	r0, r0
    3ba8:	71 f0       	breq	.+28     	; 0x3bc6 <modf+0x4e>
    3baa:	22 0f       	add	r18, r18
    3bac:	33 1f       	adc	r19, r19
    3bae:	44 1f       	adc	r20, r20
    3bb0:	b3 95       	inc	r27
    3bb2:	da f3       	brmi	.-10     	; 0x3baa <modf+0x32>
    3bb4:	0e d0       	rcall	.+28     	; 0x3bd2 <modf+0x5a>
    3bb6:	0c 94 5d 1a 	jmp	0x34ba	; 0x34ba <__subsf3>
    3bba:	61 30       	cpi	r22, 0x01	; 1
    3bbc:	71 05       	cpc	r23, r1
    3bbe:	a0 e8       	ldi	r26, 0x80	; 128
    3bc0:	8a 07       	cpc	r24, r26
    3bc2:	b9 46       	sbci	r27, 0x69	; 105
    3bc4:	30 f4       	brcc	.+12     	; 0x3bd2 <modf+0x5a>
    3bc6:	9b 01       	movw	r18, r22
    3bc8:	ac 01       	movw	r20, r24
    3bca:	66 27       	eor	r22, r22
    3bcc:	77 27       	eor	r23, r23
    3bce:	88 27       	eor	r24, r24
    3bd0:	90 78       	andi	r25, 0x80	; 128
    3bd2:	30 96       	adiw	r30, 0x00	; 0
    3bd4:	21 f0       	breq	.+8      	; 0x3bde <modf+0x66>
    3bd6:	20 83       	st	Z, r18
    3bd8:	31 83       	std	Z+1, r19	; 0x01
    3bda:	42 83       	std	Z+2, r20	; 0x02
    3bdc:	53 83       	std	Z+3, r21	; 0x03
    3bde:	08 95       	ret

00003be0 <__mulsf3>:
    3be0:	0e 94 03 1e 	call	0x3c06	; 0x3c06 <__mulsf3x>
    3be4:	0c 94 cf 1c 	jmp	0x399e	; 0x399e <__fp_round>
    3be8:	0e 94 96 1c 	call	0x392c	; 0x392c <__fp_pscA>
    3bec:	38 f0       	brcs	.+14     	; 0x3bfc <__mulsf3+0x1c>
    3bee:	0e 94 9d 1c 	call	0x393a	; 0x393a <__fp_pscB>
    3bf2:	20 f0       	brcs	.+8      	; 0x3bfc <__mulsf3+0x1c>
    3bf4:	95 23       	and	r25, r21
    3bf6:	11 f0       	breq	.+4      	; 0x3bfc <__mulsf3+0x1c>
    3bf8:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>
    3bfc:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3c00:	11 24       	eor	r1, r1
    3c02:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>

00003c06 <__mulsf3x>:
    3c06:	0e 94 f4 1c 	call	0x39e8	; 0x39e8 <__fp_split3>
    3c0a:	70 f3       	brcs	.-36     	; 0x3be8 <__mulsf3+0x8>

00003c0c <__mulsf3_pse>:
    3c0c:	95 9f       	mul	r25, r21
    3c0e:	c1 f3       	breq	.-16     	; 0x3c00 <__mulsf3+0x20>
    3c10:	95 0f       	add	r25, r21
    3c12:	50 e0       	ldi	r21, 0x00	; 0
    3c14:	55 1f       	adc	r21, r21
    3c16:	62 9f       	mul	r22, r18
    3c18:	f0 01       	movw	r30, r0
    3c1a:	72 9f       	mul	r23, r18
    3c1c:	bb 27       	eor	r27, r27
    3c1e:	f0 0d       	add	r31, r0
    3c20:	b1 1d       	adc	r27, r1
    3c22:	63 9f       	mul	r22, r19
    3c24:	aa 27       	eor	r26, r26
    3c26:	f0 0d       	add	r31, r0
    3c28:	b1 1d       	adc	r27, r1
    3c2a:	aa 1f       	adc	r26, r26
    3c2c:	64 9f       	mul	r22, r20
    3c2e:	66 27       	eor	r22, r22
    3c30:	b0 0d       	add	r27, r0
    3c32:	a1 1d       	adc	r26, r1
    3c34:	66 1f       	adc	r22, r22
    3c36:	82 9f       	mul	r24, r18
    3c38:	22 27       	eor	r18, r18
    3c3a:	b0 0d       	add	r27, r0
    3c3c:	a1 1d       	adc	r26, r1
    3c3e:	62 1f       	adc	r22, r18
    3c40:	73 9f       	mul	r23, r19
    3c42:	b0 0d       	add	r27, r0
    3c44:	a1 1d       	adc	r26, r1
    3c46:	62 1f       	adc	r22, r18
    3c48:	83 9f       	mul	r24, r19
    3c4a:	a0 0d       	add	r26, r0
    3c4c:	61 1d       	adc	r22, r1
    3c4e:	22 1f       	adc	r18, r18
    3c50:	74 9f       	mul	r23, r20
    3c52:	33 27       	eor	r19, r19
    3c54:	a0 0d       	add	r26, r0
    3c56:	61 1d       	adc	r22, r1
    3c58:	23 1f       	adc	r18, r19
    3c5a:	84 9f       	mul	r24, r20
    3c5c:	60 0d       	add	r22, r0
    3c5e:	21 1d       	adc	r18, r1
    3c60:	82 2f       	mov	r24, r18
    3c62:	76 2f       	mov	r23, r22
    3c64:	6a 2f       	mov	r22, r26
    3c66:	11 24       	eor	r1, r1
    3c68:	9f 57       	subi	r25, 0x7F	; 127
    3c6a:	50 40       	sbci	r21, 0x00	; 0
    3c6c:	9a f0       	brmi	.+38     	; 0x3c94 <__mulsf3_pse+0x88>
    3c6e:	f1 f0       	breq	.+60     	; 0x3cac <__mulsf3_pse+0xa0>
    3c70:	88 23       	and	r24, r24
    3c72:	4a f0       	brmi	.+18     	; 0x3c86 <__mulsf3_pse+0x7a>
    3c74:	ee 0f       	add	r30, r30
    3c76:	ff 1f       	adc	r31, r31
    3c78:	bb 1f       	adc	r27, r27
    3c7a:	66 1f       	adc	r22, r22
    3c7c:	77 1f       	adc	r23, r23
    3c7e:	88 1f       	adc	r24, r24
    3c80:	91 50       	subi	r25, 0x01	; 1
    3c82:	50 40       	sbci	r21, 0x00	; 0
    3c84:	a9 f7       	brne	.-22     	; 0x3c70 <__mulsf3_pse+0x64>
    3c86:	9e 3f       	cpi	r25, 0xFE	; 254
    3c88:	51 05       	cpc	r21, r1
    3c8a:	80 f0       	brcs	.+32     	; 0x3cac <__mulsf3_pse+0xa0>
    3c8c:	0c 94 52 1c 	jmp	0x38a4	; 0x38a4 <__fp_inf>
    3c90:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>
    3c94:	5f 3f       	cpi	r21, 0xFF	; 255
    3c96:	e4 f3       	brlt	.-8      	; 0x3c90 <__mulsf3_pse+0x84>
    3c98:	98 3e       	cpi	r25, 0xE8	; 232
    3c9a:	d4 f3       	brlt	.-12     	; 0x3c90 <__mulsf3_pse+0x84>
    3c9c:	86 95       	lsr	r24
    3c9e:	77 95       	ror	r23
    3ca0:	67 95       	ror	r22
    3ca2:	b7 95       	ror	r27
    3ca4:	f7 95       	ror	r31
    3ca6:	e7 95       	ror	r30
    3ca8:	9f 5f       	subi	r25, 0xFF	; 255
    3caa:	c1 f7       	brne	.-16     	; 0x3c9c <__mulsf3_pse+0x90>
    3cac:	fe 2b       	or	r31, r30
    3cae:	88 0f       	add	r24, r24
    3cb0:	91 1d       	adc	r25, r1
    3cb2:	96 95       	lsr	r25
    3cb4:	87 95       	ror	r24
    3cb6:	97 f9       	bld	r25, 7
    3cb8:	08 95       	ret

00003cba <pow>:
    3cba:	fa 01       	movw	r30, r20
    3cbc:	ee 0f       	add	r30, r30
    3cbe:	ff 1f       	adc	r31, r31
    3cc0:	30 96       	adiw	r30, 0x00	; 0
    3cc2:	21 05       	cpc	r18, r1
    3cc4:	31 05       	cpc	r19, r1
    3cc6:	a1 f1       	breq	.+104    	; 0x3d30 <pow+0x76>
    3cc8:	61 15       	cp	r22, r1
    3cca:	71 05       	cpc	r23, r1
    3ccc:	61 f4       	brne	.+24     	; 0x3ce6 <pow+0x2c>
    3cce:	80 38       	cpi	r24, 0x80	; 128
    3cd0:	bf e3       	ldi	r27, 0x3F	; 63
    3cd2:	9b 07       	cpc	r25, r27
    3cd4:	49 f1       	breq	.+82     	; 0x3d28 <pow+0x6e>
    3cd6:	68 94       	set
    3cd8:	90 38       	cpi	r25, 0x80	; 128
    3cda:	81 05       	cpc	r24, r1
    3cdc:	61 f0       	breq	.+24     	; 0x3cf6 <pow+0x3c>
    3cde:	80 38       	cpi	r24, 0x80	; 128
    3ce0:	bf ef       	ldi	r27, 0xFF	; 255
    3ce2:	9b 07       	cpc	r25, r27
    3ce4:	41 f0       	breq	.+16     	; 0x3cf6 <pow+0x3c>
    3ce6:	99 23       	and	r25, r25
    3ce8:	4a f5       	brpl	.+82     	; 0x3d3c <pow+0x82>
    3cea:	ff 3f       	cpi	r31, 0xFF	; 255
    3cec:	e1 05       	cpc	r30, r1
    3cee:	31 05       	cpc	r19, r1
    3cf0:	21 05       	cpc	r18, r1
    3cf2:	19 f1       	breq	.+70     	; 0x3d3a <pow+0x80>
    3cf4:	e8 94       	clt
    3cf6:	08 94       	sec
    3cf8:	e7 95       	ror	r30
    3cfa:	d9 01       	movw	r26, r18
    3cfc:	aa 23       	and	r26, r26
    3cfe:	29 f4       	brne	.+10     	; 0x3d0a <pow+0x50>
    3d00:	ab 2f       	mov	r26, r27
    3d02:	be 2f       	mov	r27, r30
    3d04:	f8 5f       	subi	r31, 0xF8	; 248
    3d06:	d0 f3       	brcs	.-12     	; 0x3cfc <pow+0x42>
    3d08:	10 c0       	rjmp	.+32     	; 0x3d2a <pow+0x70>
    3d0a:	ff 5f       	subi	r31, 0xFF	; 255
    3d0c:	70 f4       	brcc	.+28     	; 0x3d2a <pow+0x70>
    3d0e:	a6 95       	lsr	r26
    3d10:	e0 f7       	brcc	.-8      	; 0x3d0a <pow+0x50>
    3d12:	f7 39       	cpi	r31, 0x97	; 151
    3d14:	50 f0       	brcs	.+20     	; 0x3d2a <pow+0x70>
    3d16:	19 f0       	breq	.+6      	; 0x3d1e <pow+0x64>
    3d18:	ff 3a       	cpi	r31, 0xAF	; 175
    3d1a:	38 f4       	brcc	.+14     	; 0x3d2a <pow+0x70>
    3d1c:	9f 77       	andi	r25, 0x7F	; 127
    3d1e:	9f 93       	push	r25
    3d20:	0d d0       	rcall	.+26     	; 0x3d3c <pow+0x82>
    3d22:	0f 90       	pop	r0
    3d24:	07 fc       	sbrc	r0, 7
    3d26:	90 58       	subi	r25, 0x80	; 128
    3d28:	08 95       	ret
    3d2a:	46 f0       	brts	.+16     	; 0x3d3c <pow+0x82>
    3d2c:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3d30:	60 e0       	ldi	r22, 0x00	; 0
    3d32:	70 e0       	ldi	r23, 0x00	; 0
    3d34:	80 e8       	ldi	r24, 0x80	; 128
    3d36:	9f e3       	ldi	r25, 0x3F	; 63
    3d38:	08 95       	ret
    3d3a:	4f e7       	ldi	r20, 0x7F	; 127
    3d3c:	9f 77       	andi	r25, 0x7F	; 127
    3d3e:	5f 93       	push	r21
    3d40:	4f 93       	push	r20
    3d42:	3f 93       	push	r19
    3d44:	2f 93       	push	r18
    3d46:	0e 94 74 1d 	call	0x3ae8	; 0x3ae8 <log>
    3d4a:	2f 91       	pop	r18
    3d4c:	3f 91       	pop	r19
    3d4e:	4f 91       	pop	r20
    3d50:	5f 91       	pop	r21
    3d52:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    3d56:	0c 94 69 1b 	jmp	0x36d2	; 0x36d2 <exp>

00003d5a <round>:
    3d5a:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3d5e:	e8 f0       	brcs	.+58     	; 0x3d9a <round+0x40>
    3d60:	9e 37       	cpi	r25, 0x7E	; 126
    3d62:	e8 f0       	brcs	.+58     	; 0x3d9e <round+0x44>
    3d64:	96 39       	cpi	r25, 0x96	; 150
    3d66:	b8 f4       	brcc	.+46     	; 0x3d96 <round+0x3c>
    3d68:	9e 38       	cpi	r25, 0x8E	; 142
    3d6a:	48 f4       	brcc	.+18     	; 0x3d7e <round+0x24>
    3d6c:	67 2f       	mov	r22, r23
    3d6e:	78 2f       	mov	r23, r24
    3d70:	88 27       	eor	r24, r24
    3d72:	98 5f       	subi	r25, 0xF8	; 248
    3d74:	f9 cf       	rjmp	.-14     	; 0x3d68 <round+0xe>
    3d76:	86 95       	lsr	r24
    3d78:	77 95       	ror	r23
    3d7a:	67 95       	ror	r22
    3d7c:	93 95       	inc	r25
    3d7e:	95 39       	cpi	r25, 0x95	; 149
    3d80:	d0 f3       	brcs	.-12     	; 0x3d76 <round+0x1c>
    3d82:	b6 2f       	mov	r27, r22
    3d84:	b1 70       	andi	r27, 0x01	; 1
    3d86:	6b 0f       	add	r22, r27
    3d88:	71 1d       	adc	r23, r1
    3d8a:	81 1d       	adc	r24, r1
    3d8c:	20 f4       	brcc	.+8      	; 0x3d96 <round+0x3c>
    3d8e:	87 95       	ror	r24
    3d90:	77 95       	ror	r23
    3d92:	67 95       	ror	r22
    3d94:	93 95       	inc	r25
    3d96:	0c 94 44 1f 	jmp	0x3e88	; 0x3e88 <__fp_mintl>
    3d9a:	0c 94 5f 1f 	jmp	0x3ebe	; 0x3ebe <__fp_mpack>
    3d9e:	0c 94 17 1d 	jmp	0x3a2e	; 0x3a2e <__fp_szero>

00003da2 <sin>:
    3da2:	9f 93       	push	r25
    3da4:	0e 94 a6 1c 	call	0x394c	; 0x394c <__fp_rempio2>
    3da8:	0f 90       	pop	r0
    3daa:	07 fc       	sbrc	r0, 7
    3dac:	ee 5f       	subi	r30, 0xFE	; 254
    3dae:	0c 94 e0 1c 	jmp	0x39c0	; 0x39c0 <__fp_sinus>
    3db2:	19 f4       	brne	.+6      	; 0x3dba <sin+0x18>
    3db4:	16 f4       	brtc	.+4      	; 0x3dba <sin+0x18>
    3db6:	0c 94 58 1c 	jmp	0x38b0	; 0x38b0 <__fp_nan>
    3dba:	0c 94 5f 1f 	jmp	0x3ebe	; 0x3ebe <__fp_mpack>

00003dbe <sqrt>:
    3dbe:	0e 94 fc 1c 	call	0x39f8	; 0x39f8 <__fp_splitA>
    3dc2:	b8 f3       	brcs	.-18     	; 0x3db2 <sin+0x10>
    3dc4:	99 23       	and	r25, r25
    3dc6:	c9 f3       	breq	.-14     	; 0x3dba <sin+0x18>
    3dc8:	b6 f3       	brts	.-20     	; 0x3db6 <sin+0x14>
    3dca:	9f 57       	subi	r25, 0x7F	; 127
    3dcc:	55 0b       	sbc	r21, r21
    3dce:	87 ff       	sbrs	r24, 7
    3dd0:	0e 94 6d 1f 	call	0x3eda	; 0x3eda <__fp_norm2>
    3dd4:	00 24       	eor	r0, r0
    3dd6:	a0 e6       	ldi	r26, 0x60	; 96
    3dd8:	40 ea       	ldi	r20, 0xA0	; 160
    3dda:	90 01       	movw	r18, r0
    3ddc:	80 58       	subi	r24, 0x80	; 128
    3dde:	56 95       	lsr	r21
    3de0:	97 95       	ror	r25
    3de2:	28 f4       	brcc	.+10     	; 0x3dee <sqrt+0x30>
    3de4:	80 5c       	subi	r24, 0xC0	; 192
    3de6:	66 0f       	add	r22, r22
    3de8:	77 1f       	adc	r23, r23
    3dea:	88 1f       	adc	r24, r24
    3dec:	20 f0       	brcs	.+8      	; 0x3df6 <sqrt+0x38>
    3dee:	26 17       	cp	r18, r22
    3df0:	37 07       	cpc	r19, r23
    3df2:	48 07       	cpc	r20, r24
    3df4:	30 f4       	brcc	.+12     	; 0x3e02 <sqrt+0x44>
    3df6:	62 1b       	sub	r22, r18
    3df8:	73 0b       	sbc	r23, r19
    3dfa:	84 0b       	sbc	r24, r20
    3dfc:	20 29       	or	r18, r0
    3dfe:	31 29       	or	r19, r1
    3e00:	4a 2b       	or	r20, r26
    3e02:	a6 95       	lsr	r26
    3e04:	17 94       	ror	r1
    3e06:	07 94       	ror	r0
    3e08:	20 25       	eor	r18, r0
    3e0a:	31 25       	eor	r19, r1
    3e0c:	4a 27       	eor	r20, r26
    3e0e:	58 f7       	brcc	.-42     	; 0x3de6 <sqrt+0x28>
    3e10:	66 0f       	add	r22, r22
    3e12:	77 1f       	adc	r23, r23
    3e14:	88 1f       	adc	r24, r24
    3e16:	20 f0       	brcs	.+8      	; 0x3e20 <sqrt+0x62>
    3e18:	26 17       	cp	r18, r22
    3e1a:	37 07       	cpc	r19, r23
    3e1c:	48 07       	cpc	r20, r24
    3e1e:	30 f4       	brcc	.+12     	; 0x3e2c <sqrt+0x6e>
    3e20:	62 0b       	sbc	r22, r18
    3e22:	73 0b       	sbc	r23, r19
    3e24:	84 0b       	sbc	r24, r20
    3e26:	20 0d       	add	r18, r0
    3e28:	31 1d       	adc	r19, r1
    3e2a:	41 1d       	adc	r20, r1
    3e2c:	a0 95       	com	r26
    3e2e:	81 f7       	brne	.-32     	; 0x3e10 <sqrt+0x52>
    3e30:	b9 01       	movw	r22, r18
    3e32:	84 2f       	mov	r24, r20
    3e34:	91 58       	subi	r25, 0x81	; 129
    3e36:	88 0f       	add	r24, r24
    3e38:	96 95       	lsr	r25
    3e3a:	87 95       	ror	r24
    3e3c:	08 95       	ret

00003e3e <tan>:
    3e3e:	df 93       	push	r29
    3e40:	d9 2f       	mov	r29, r25
    3e42:	0e 94 a6 1c 	call	0x394c	; 0x394c <__fp_rempio2>
    3e46:	e6 95       	lsr	r30
    3e48:	d7 95       	ror	r29
    3e4a:	2a ed       	ldi	r18, 0xDA	; 218
    3e4c:	3f e0       	ldi	r19, 0x0F	; 15
    3e4e:	49 e4       	ldi	r20, 0x49	; 73
    3e50:	5f e3       	ldi	r21, 0x3F	; 63
    3e52:	b3 3a       	cpi	r27, 0xA3	; 163
    3e54:	62 07       	cpc	r22, r18
    3e56:	73 07       	cpc	r23, r19
    3e58:	84 07       	cpc	r24, r20
    3e5a:	95 07       	cpc	r25, r21
    3e5c:	d7 95       	ror	r29
    3e5e:	3a f0       	brmi	.+14     	; 0x3e6e <tan+0x30>
    3e60:	a2 ea       	ldi	r26, 0xA2	; 162
    3e62:	49 ec       	ldi	r20, 0xC9	; 201
    3e64:	90 68       	ori	r25, 0x80	; 128
    3e66:	0e 94 75 1a 	call	0x34ea	; 0x34ea <__addsf3x>
    3e6a:	0e 94 cf 1c 	call	0x399e	; 0x399e <__fp_round>
    3e6e:	e0 e3       	ldi	r30, 0x30	; 48
    3e70:	f1 e0       	ldi	r31, 0x01	; 1
    3e72:	0e 94 82 1c 	call	0x3904	; 0x3904 <__fp_powsodd>
    3e76:	dd 0f       	add	r29, r29
    3e78:	13 f0       	brvs	.+4      	; 0x3e7e <tan+0x40>
    3e7a:	0e 94 22 1d 	call	0x3a44	; 0x3a44 <inverse>
    3e7e:	dd 0f       	add	r29, r29
    3e80:	0b f4       	brvc	.+2      	; 0x3e84 <tan+0x46>
    3e82:	90 58       	subi	r25, 0x80	; 128
    3e84:	df 91       	pop	r29
    3e86:	08 95       	ret

00003e88 <__fp_mintl>:
    3e88:	88 23       	and	r24, r24
    3e8a:	71 f4       	brne	.+28     	; 0x3ea8 <__fp_mintl+0x20>
    3e8c:	77 23       	and	r23, r23
    3e8e:	21 f0       	breq	.+8      	; 0x3e98 <__fp_mintl+0x10>
    3e90:	98 50       	subi	r25, 0x08	; 8
    3e92:	87 2b       	or	r24, r23
    3e94:	76 2f       	mov	r23, r22
    3e96:	07 c0       	rjmp	.+14     	; 0x3ea6 <__fp_mintl+0x1e>
    3e98:	66 23       	and	r22, r22
    3e9a:	11 f4       	brne	.+4      	; 0x3ea0 <__fp_mintl+0x18>
    3e9c:	99 27       	eor	r25, r25
    3e9e:	0d c0       	rjmp	.+26     	; 0x3eba <__fp_mintl+0x32>
    3ea0:	90 51       	subi	r25, 0x10	; 16
    3ea2:	86 2b       	or	r24, r22
    3ea4:	70 e0       	ldi	r23, 0x00	; 0
    3ea6:	60 e0       	ldi	r22, 0x00	; 0
    3ea8:	2a f0       	brmi	.+10     	; 0x3eb4 <__fp_mintl+0x2c>
    3eaa:	9a 95       	dec	r25
    3eac:	66 0f       	add	r22, r22
    3eae:	77 1f       	adc	r23, r23
    3eb0:	88 1f       	adc	r24, r24
    3eb2:	da f7       	brpl	.-10     	; 0x3eaa <__fp_mintl+0x22>
    3eb4:	88 0f       	add	r24, r24
    3eb6:	96 95       	lsr	r25
    3eb8:	87 95       	ror	r24
    3eba:	97 f9       	bld	r25, 7
    3ebc:	08 95       	ret

00003ebe <__fp_mpack>:
    3ebe:	9f 3f       	cpi	r25, 0xFF	; 255
    3ec0:	31 f0       	breq	.+12     	; 0x3ece <__fp_mpack_finite+0xc>

00003ec2 <__fp_mpack_finite>:
    3ec2:	91 50       	subi	r25, 0x01	; 1
    3ec4:	20 f4       	brcc	.+8      	; 0x3ece <__fp_mpack_finite+0xc>
    3ec6:	87 95       	ror	r24
    3ec8:	77 95       	ror	r23
    3eca:	67 95       	ror	r22
    3ecc:	b7 95       	ror	r27
    3ece:	88 0f       	add	r24, r24
    3ed0:	91 1d       	adc	r25, r1
    3ed2:	96 95       	lsr	r25
    3ed4:	87 95       	ror	r24
    3ed6:	97 f9       	bld	r25, 7
    3ed8:	08 95       	ret

00003eda <__fp_norm2>:
    3eda:	91 50       	subi	r25, 0x01	; 1
    3edc:	50 40       	sbci	r21, 0x00	; 0
    3ede:	66 0f       	add	r22, r22
    3ee0:	77 1f       	adc	r23, r23
    3ee2:	88 1f       	adc	r24, r24
    3ee4:	d2 f7       	brpl	.-12     	; 0x3eda <__fp_norm2>
    3ee6:	08 95       	ret

00003ee8 <__tablejump2__>:
    3ee8:	ee 0f       	add	r30, r30
    3eea:	ff 1f       	adc	r31, r31
    3eec:	05 90       	lpm	r0, Z+
    3eee:	f4 91       	lpm	r31, Z
    3ef0:	e0 2d       	mov	r30, r0
    3ef2:	09 94       	ijmp

00003ef4 <dtostrf>:
    3ef4:	ef 92       	push	r14
    3ef6:	0f 93       	push	r16
    3ef8:	1f 93       	push	r17
    3efa:	cf 93       	push	r28
    3efc:	df 93       	push	r29
    3efe:	e8 01       	movw	r28, r16
    3f00:	47 fd       	sbrc	r20, 7
    3f02:	02 c0       	rjmp	.+4      	; 0x3f08 <dtostrf+0x14>
    3f04:	34 e0       	ldi	r19, 0x04	; 4
    3f06:	01 c0       	rjmp	.+2      	; 0x3f0a <dtostrf+0x16>
    3f08:	34 e1       	ldi	r19, 0x14	; 20
    3f0a:	04 2e       	mov	r0, r20
    3f0c:	00 0c       	add	r0, r0
    3f0e:	55 0b       	sbc	r21, r21
    3f10:	57 ff       	sbrs	r21, 7
    3f12:	03 c0       	rjmp	.+6      	; 0x3f1a <dtostrf+0x26>
    3f14:	51 95       	neg	r21
    3f16:	41 95       	neg	r20
    3f18:	51 09       	sbc	r21, r1
    3f1a:	e3 2e       	mov	r14, r19
    3f1c:	02 2f       	mov	r16, r18
    3f1e:	24 2f       	mov	r18, r20
    3f20:	ae 01       	movw	r20, r28
    3f22:	0e 94 e0 1f 	call	0x3fc0	; 0x3fc0 <dtoa_prf>
    3f26:	ce 01       	movw	r24, r28
    3f28:	df 91       	pop	r29
    3f2a:	cf 91       	pop	r28
    3f2c:	1f 91       	pop	r17
    3f2e:	0f 91       	pop	r16
    3f30:	ef 90       	pop	r14
    3f32:	08 95       	ret

00003f34 <atof>:
    3f34:	66 27       	eor	r22, r22
    3f36:	77 27       	eor	r23, r23
    3f38:	0c 94 3a 21 	jmp	0x4274	; 0x4274 <strtod>

00003f3c <isupper>:
    3f3c:	85 fd       	sbrc	r24, 5
    3f3e:	0c 94 60 23 	jmp	0x46c0	; 0x46c0 <__ctype_isfalse>

00003f42 <isalpha>:
    3f42:	80 62       	ori	r24, 0x20	; 32

00003f44 <islower>:
    3f44:	91 11       	cpse	r25, r1
    3f46:	0c 94 60 23 	jmp	0x46c0	; 0x46c0 <__ctype_isfalse>
    3f4a:	81 56       	subi	r24, 0x61	; 97
    3f4c:	8a 51       	subi	r24, 0x1A	; 26
    3f4e:	d8 f7       	brcc	.-10     	; 0x3f46 <islower+0x2>
    3f50:	08 95       	ret

00003f52 <isspace>:
    3f52:	91 11       	cpse	r25, r1
    3f54:	0c 94 60 23 	jmp	0x46c0	; 0x46c0 <__ctype_isfalse>
    3f58:	80 32       	cpi	r24, 0x20	; 32
    3f5a:	19 f0       	breq	.+6      	; 0x3f62 <isspace+0x10>
    3f5c:	89 50       	subi	r24, 0x09	; 9
    3f5e:	85 50       	subi	r24, 0x05	; 5
    3f60:	c8 f7       	brcc	.-14     	; 0x3f54 <isspace+0x2>
    3f62:	08 95       	ret

00003f64 <toupper>:
    3f64:	91 11       	cpse	r25, r1
    3f66:	08 95       	ret
    3f68:	81 56       	subi	r24, 0x61	; 97
    3f6a:	8a 51       	subi	r24, 0x1A	; 26
    3f6c:	08 f4       	brcc	.+2      	; 0x3f70 <toupper+0xc>
    3f6e:	80 52       	subi	r24, 0x20	; 32
    3f70:	85 58       	subi	r24, 0x85	; 133
    3f72:	08 95       	ret

00003f74 <strcat>:
    3f74:	fb 01       	movw	r30, r22
    3f76:	dc 01       	movw	r26, r24
    3f78:	0d 90       	ld	r0, X+
    3f7a:	00 20       	and	r0, r0
    3f7c:	e9 f7       	brne	.-6      	; 0x3f78 <strcat+0x4>
    3f7e:	11 97       	sbiw	r26, 0x01	; 1
    3f80:	01 90       	ld	r0, Z+
    3f82:	0d 92       	st	X+, r0
    3f84:	00 20       	and	r0, r0
    3f86:	e1 f7       	brne	.-8      	; 0x3f80 <strcat+0xc>
    3f88:	08 95       	ret

00003f8a <strchr>:
    3f8a:	fc 01       	movw	r30, r24
    3f8c:	81 91       	ld	r24, Z+
    3f8e:	86 17       	cp	r24, r22
    3f90:	21 f0       	breq	.+8      	; 0x3f9a <strchr+0x10>
    3f92:	88 23       	and	r24, r24
    3f94:	d9 f7       	brne	.-10     	; 0x3f8c <strchr+0x2>
    3f96:	99 27       	eor	r25, r25
    3f98:	08 95       	ret
    3f9a:	31 97       	sbiw	r30, 0x01	; 1
    3f9c:	cf 01       	movw	r24, r30
    3f9e:	08 95       	ret

00003fa0 <strcmp>:
    3fa0:	fb 01       	movw	r30, r22
    3fa2:	dc 01       	movw	r26, r24
    3fa4:	8d 91       	ld	r24, X+
    3fa6:	01 90       	ld	r0, Z+
    3fa8:	80 19       	sub	r24, r0
    3faa:	01 10       	cpse	r0, r1
    3fac:	d9 f3       	breq	.-10     	; 0x3fa4 <strcmp+0x4>
    3fae:	99 0b       	sbc	r25, r25
    3fb0:	08 95       	ret

00003fb2 <strcpy>:
    3fb2:	fb 01       	movw	r30, r22
    3fb4:	dc 01       	movw	r26, r24
    3fb6:	01 90       	ld	r0, Z+
    3fb8:	0d 92       	st	X+, r0
    3fba:	00 20       	and	r0, r0
    3fbc:	e1 f7       	brne	.-8      	; 0x3fb6 <strcpy+0x4>
    3fbe:	08 95       	ret

00003fc0 <dtoa_prf>:
    3fc0:	a9 e0       	ldi	r26, 0x09	; 9
    3fc2:	b0 e0       	ldi	r27, 0x00	; 0
    3fc4:	e6 ee       	ldi	r30, 0xE6	; 230
    3fc6:	ff e1       	ldi	r31, 0x1F	; 31
    3fc8:	0c 94 8c 23 	jmp	0x4718	; 0x4718 <__prologue_saves__+0xc>
    3fcc:	6a 01       	movw	r12, r20
    3fce:	12 2f       	mov	r17, r18
    3fd0:	b0 2e       	mov	r11, r16
    3fd2:	2b e3       	ldi	r18, 0x3B	; 59
    3fd4:	20 17       	cp	r18, r16
    3fd6:	20 f0       	brcs	.+8      	; 0x3fe0 <dtoa_prf+0x20>
    3fd8:	ff 24       	eor	r15, r15
    3fda:	f3 94       	inc	r15
    3fdc:	f0 0e       	add	r15, r16
    3fde:	02 c0       	rjmp	.+4      	; 0x3fe4 <dtoa_prf+0x24>
    3fe0:	2c e3       	ldi	r18, 0x3C	; 60
    3fe2:	f2 2e       	mov	r15, r18
    3fe4:	0f 2d       	mov	r16, r15
    3fe6:	27 e0       	ldi	r18, 0x07	; 7
    3fe8:	ae 01       	movw	r20, r28
    3fea:	4f 5f       	subi	r20, 0xFF	; 255
    3fec:	5f 4f       	sbci	r21, 0xFF	; 255
    3fee:	0e 94 88 22 	call	0x4510	; 0x4510 <__ftoa_engine>
    3ff2:	bc 01       	movw	r22, r24
    3ff4:	49 81       	ldd	r20, Y+1	; 0x01
    3ff6:	84 2f       	mov	r24, r20
    3ff8:	89 70       	andi	r24, 0x09	; 9
    3ffa:	81 30       	cpi	r24, 0x01	; 1
    3ffc:	31 f0       	breq	.+12     	; 0x400a <dtoa_prf+0x4a>
    3ffe:	e1 fc       	sbrc	r14, 1
    4000:	06 c0       	rjmp	.+12     	; 0x400e <dtoa_prf+0x4e>
    4002:	e0 fe       	sbrs	r14, 0
    4004:	06 c0       	rjmp	.+12     	; 0x4012 <dtoa_prf+0x52>
    4006:	90 e2       	ldi	r25, 0x20	; 32
    4008:	05 c0       	rjmp	.+10     	; 0x4014 <dtoa_prf+0x54>
    400a:	9d e2       	ldi	r25, 0x2D	; 45
    400c:	03 c0       	rjmp	.+6      	; 0x4014 <dtoa_prf+0x54>
    400e:	9b e2       	ldi	r25, 0x2B	; 43
    4010:	01 c0       	rjmp	.+2      	; 0x4014 <dtoa_prf+0x54>
    4012:	90 e0       	ldi	r25, 0x00	; 0
    4014:	5e 2d       	mov	r21, r14
    4016:	50 71       	andi	r21, 0x10	; 16
    4018:	43 ff       	sbrs	r20, 3
    401a:	3c c0       	rjmp	.+120    	; 0x4094 <dtoa_prf+0xd4>
    401c:	91 11       	cpse	r25, r1
    401e:	02 c0       	rjmp	.+4      	; 0x4024 <dtoa_prf+0x64>
    4020:	83 e0       	ldi	r24, 0x03	; 3
    4022:	01 c0       	rjmp	.+2      	; 0x4026 <dtoa_prf+0x66>
    4024:	84 e0       	ldi	r24, 0x04	; 4
    4026:	81 17       	cp	r24, r17
    4028:	18 f4       	brcc	.+6      	; 0x4030 <dtoa_prf+0x70>
    402a:	21 2f       	mov	r18, r17
    402c:	28 1b       	sub	r18, r24
    402e:	01 c0       	rjmp	.+2      	; 0x4032 <dtoa_prf+0x72>
    4030:	20 e0       	ldi	r18, 0x00	; 0
    4032:	51 11       	cpse	r21, r1
    4034:	0b c0       	rjmp	.+22     	; 0x404c <dtoa_prf+0x8c>
    4036:	f6 01       	movw	r30, r12
    4038:	82 2f       	mov	r24, r18
    403a:	30 e2       	ldi	r19, 0x20	; 32
    403c:	88 23       	and	r24, r24
    403e:	19 f0       	breq	.+6      	; 0x4046 <dtoa_prf+0x86>
    4040:	31 93       	st	Z+, r19
    4042:	81 50       	subi	r24, 0x01	; 1
    4044:	fb cf       	rjmp	.-10     	; 0x403c <dtoa_prf+0x7c>
    4046:	c2 0e       	add	r12, r18
    4048:	d1 1c       	adc	r13, r1
    404a:	20 e0       	ldi	r18, 0x00	; 0
    404c:	99 23       	and	r25, r25
    404e:	29 f0       	breq	.+10     	; 0x405a <dtoa_prf+0x9a>
    4050:	d6 01       	movw	r26, r12
    4052:	9c 93       	st	X, r25
    4054:	f6 01       	movw	r30, r12
    4056:	31 96       	adiw	r30, 0x01	; 1
    4058:	6f 01       	movw	r12, r30
    405a:	c6 01       	movw	r24, r12
    405c:	03 96       	adiw	r24, 0x03	; 3
    405e:	e2 fe       	sbrs	r14, 2
    4060:	0a c0       	rjmp	.+20     	; 0x4076 <dtoa_prf+0xb6>
    4062:	3e e4       	ldi	r19, 0x4E	; 78
    4064:	d6 01       	movw	r26, r12
    4066:	3c 93       	st	X, r19
    4068:	41 e4       	ldi	r20, 0x41	; 65
    406a:	11 96       	adiw	r26, 0x01	; 1
    406c:	4c 93       	st	X, r20
    406e:	11 97       	sbiw	r26, 0x01	; 1
    4070:	12 96       	adiw	r26, 0x02	; 2
    4072:	3c 93       	st	X, r19
    4074:	06 c0       	rjmp	.+12     	; 0x4082 <dtoa_prf+0xc2>
    4076:	3e e6       	ldi	r19, 0x6E	; 110
    4078:	f6 01       	movw	r30, r12
    407a:	30 83       	st	Z, r19
    407c:	41 e6       	ldi	r20, 0x61	; 97
    407e:	41 83       	std	Z+1, r20	; 0x01
    4080:	32 83       	std	Z+2, r19	; 0x02
    4082:	fc 01       	movw	r30, r24
    4084:	32 2f       	mov	r19, r18
    4086:	40 e2       	ldi	r20, 0x20	; 32
    4088:	33 23       	and	r19, r19
    408a:	09 f4       	brne	.+2      	; 0x408e <dtoa_prf+0xce>
    408c:	42 c0       	rjmp	.+132    	; 0x4112 <dtoa_prf+0x152>
    408e:	41 93       	st	Z+, r20
    4090:	31 50       	subi	r19, 0x01	; 1
    4092:	fa cf       	rjmp	.-12     	; 0x4088 <dtoa_prf+0xc8>
    4094:	42 ff       	sbrs	r20, 2
    4096:	44 c0       	rjmp	.+136    	; 0x4120 <dtoa_prf+0x160>
    4098:	91 11       	cpse	r25, r1
    409a:	02 c0       	rjmp	.+4      	; 0x40a0 <dtoa_prf+0xe0>
    409c:	83 e0       	ldi	r24, 0x03	; 3
    409e:	01 c0       	rjmp	.+2      	; 0x40a2 <dtoa_prf+0xe2>
    40a0:	84 e0       	ldi	r24, 0x04	; 4
    40a2:	81 17       	cp	r24, r17
    40a4:	18 f4       	brcc	.+6      	; 0x40ac <dtoa_prf+0xec>
    40a6:	21 2f       	mov	r18, r17
    40a8:	28 1b       	sub	r18, r24
    40aa:	01 c0       	rjmp	.+2      	; 0x40ae <dtoa_prf+0xee>
    40ac:	20 e0       	ldi	r18, 0x00	; 0
    40ae:	51 11       	cpse	r21, r1
    40b0:	0b c0       	rjmp	.+22     	; 0x40c8 <dtoa_prf+0x108>
    40b2:	f6 01       	movw	r30, r12
    40b4:	82 2f       	mov	r24, r18
    40b6:	30 e2       	ldi	r19, 0x20	; 32
    40b8:	88 23       	and	r24, r24
    40ba:	19 f0       	breq	.+6      	; 0x40c2 <dtoa_prf+0x102>
    40bc:	31 93       	st	Z+, r19
    40be:	81 50       	subi	r24, 0x01	; 1
    40c0:	fb cf       	rjmp	.-10     	; 0x40b8 <dtoa_prf+0xf8>
    40c2:	c2 0e       	add	r12, r18
    40c4:	d1 1c       	adc	r13, r1
    40c6:	20 e0       	ldi	r18, 0x00	; 0
    40c8:	99 23       	and	r25, r25
    40ca:	29 f0       	breq	.+10     	; 0x40d6 <dtoa_prf+0x116>
    40cc:	d6 01       	movw	r26, r12
    40ce:	9c 93       	st	X, r25
    40d0:	f6 01       	movw	r30, r12
    40d2:	31 96       	adiw	r30, 0x01	; 1
    40d4:	6f 01       	movw	r12, r30
    40d6:	c6 01       	movw	r24, r12
    40d8:	03 96       	adiw	r24, 0x03	; 3
    40da:	e2 fe       	sbrs	r14, 2
    40dc:	0b c0       	rjmp	.+22     	; 0x40f4 <dtoa_prf+0x134>
    40de:	39 e4       	ldi	r19, 0x49	; 73
    40e0:	d6 01       	movw	r26, r12
    40e2:	3c 93       	st	X, r19
    40e4:	3e e4       	ldi	r19, 0x4E	; 78
    40e6:	11 96       	adiw	r26, 0x01	; 1
    40e8:	3c 93       	st	X, r19
    40ea:	11 97       	sbiw	r26, 0x01	; 1
    40ec:	36 e4       	ldi	r19, 0x46	; 70
    40ee:	12 96       	adiw	r26, 0x02	; 2
    40f0:	3c 93       	st	X, r19
    40f2:	07 c0       	rjmp	.+14     	; 0x4102 <dtoa_prf+0x142>
    40f4:	39 e6       	ldi	r19, 0x69	; 105
    40f6:	f6 01       	movw	r30, r12
    40f8:	30 83       	st	Z, r19
    40fa:	3e e6       	ldi	r19, 0x6E	; 110
    40fc:	31 83       	std	Z+1, r19	; 0x01
    40fe:	36 e6       	ldi	r19, 0x66	; 102
    4100:	32 83       	std	Z+2, r19	; 0x02
    4102:	fc 01       	movw	r30, r24
    4104:	32 2f       	mov	r19, r18
    4106:	40 e2       	ldi	r20, 0x20	; 32
    4108:	33 23       	and	r19, r19
    410a:	19 f0       	breq	.+6      	; 0x4112 <dtoa_prf+0x152>
    410c:	41 93       	st	Z+, r20
    410e:	31 50       	subi	r19, 0x01	; 1
    4110:	fb cf       	rjmp	.-10     	; 0x4108 <dtoa_prf+0x148>
    4112:	fc 01       	movw	r30, r24
    4114:	e2 0f       	add	r30, r18
    4116:	f1 1d       	adc	r31, r1
    4118:	10 82       	st	Z, r1
    411a:	8e ef       	ldi	r24, 0xFE	; 254
    411c:	9f ef       	ldi	r25, 0xFF	; 255
    411e:	a6 c0       	rjmp	.+332    	; 0x426c <dtoa_prf+0x2ac>
    4120:	21 e0       	ldi	r18, 0x01	; 1
    4122:	30 e0       	ldi	r19, 0x00	; 0
    4124:	91 11       	cpse	r25, r1
    4126:	02 c0       	rjmp	.+4      	; 0x412c <dtoa_prf+0x16c>
    4128:	20 e0       	ldi	r18, 0x00	; 0
    412a:	30 e0       	ldi	r19, 0x00	; 0
    412c:	16 16       	cp	r1, r22
    412e:	17 06       	cpc	r1, r23
    4130:	1c f4       	brge	.+6      	; 0x4138 <dtoa_prf+0x178>
    4132:	fb 01       	movw	r30, r22
    4134:	31 96       	adiw	r30, 0x01	; 1
    4136:	02 c0       	rjmp	.+4      	; 0x413c <dtoa_prf+0x17c>
    4138:	e1 e0       	ldi	r30, 0x01	; 1
    413a:	f0 e0       	ldi	r31, 0x00	; 0
    413c:	2e 0f       	add	r18, r30
    413e:	3f 1f       	adc	r19, r31
    4140:	bb 20       	and	r11, r11
    4142:	21 f0       	breq	.+8      	; 0x414c <dtoa_prf+0x18c>
    4144:	eb 2d       	mov	r30, r11
    4146:	f0 e0       	ldi	r31, 0x00	; 0
    4148:	31 96       	adiw	r30, 0x01	; 1
    414a:	02 c0       	rjmp	.+4      	; 0x4150 <dtoa_prf+0x190>
    414c:	e0 e0       	ldi	r30, 0x00	; 0
    414e:	f0 e0       	ldi	r31, 0x00	; 0
    4150:	2e 0f       	add	r18, r30
    4152:	3f 1f       	adc	r19, r31
    4154:	e1 2f       	mov	r30, r17
    4156:	f0 e0       	ldi	r31, 0x00	; 0
    4158:	2e 17       	cp	r18, r30
    415a:	3f 07       	cpc	r19, r31
    415c:	1c f4       	brge	.+6      	; 0x4164 <dtoa_prf+0x1a4>
    415e:	12 1b       	sub	r17, r18
    4160:	21 2f       	mov	r18, r17
    4162:	01 c0       	rjmp	.+2      	; 0x4166 <dtoa_prf+0x1a6>
    4164:	20 e0       	ldi	r18, 0x00	; 0
    4166:	8e 2d       	mov	r24, r14
    4168:	88 71       	andi	r24, 0x18	; 24
    416a:	59 f4       	brne	.+22     	; 0x4182 <dtoa_prf+0x1c2>
    416c:	f6 01       	movw	r30, r12
    416e:	82 2f       	mov	r24, r18
    4170:	30 e2       	ldi	r19, 0x20	; 32
    4172:	88 23       	and	r24, r24
    4174:	19 f0       	breq	.+6      	; 0x417c <dtoa_prf+0x1bc>
    4176:	31 93       	st	Z+, r19
    4178:	81 50       	subi	r24, 0x01	; 1
    417a:	fb cf       	rjmp	.-10     	; 0x4172 <dtoa_prf+0x1b2>
    417c:	c2 0e       	add	r12, r18
    417e:	d1 1c       	adc	r13, r1
    4180:	20 e0       	ldi	r18, 0x00	; 0
    4182:	99 23       	and	r25, r25
    4184:	29 f0       	breq	.+10     	; 0x4190 <dtoa_prf+0x1d0>
    4186:	d6 01       	movw	r26, r12
    4188:	9c 93       	st	X, r25
    418a:	f6 01       	movw	r30, r12
    418c:	31 96       	adiw	r30, 0x01	; 1
    418e:	6f 01       	movw	r12, r30
    4190:	51 11       	cpse	r21, r1
    4192:	0b c0       	rjmp	.+22     	; 0x41aa <dtoa_prf+0x1ea>
    4194:	f6 01       	movw	r30, r12
    4196:	82 2f       	mov	r24, r18
    4198:	90 e3       	ldi	r25, 0x30	; 48
    419a:	88 23       	and	r24, r24
    419c:	19 f0       	breq	.+6      	; 0x41a4 <dtoa_prf+0x1e4>
    419e:	91 93       	st	Z+, r25
    41a0:	81 50       	subi	r24, 0x01	; 1
    41a2:	fb cf       	rjmp	.-10     	; 0x419a <dtoa_prf+0x1da>
    41a4:	c2 0e       	add	r12, r18
    41a6:	d1 1c       	adc	r13, r1
    41a8:	20 e0       	ldi	r18, 0x00	; 0
    41aa:	0f 2d       	mov	r16, r15
    41ac:	06 0f       	add	r16, r22
    41ae:	9a 81       	ldd	r25, Y+2	; 0x02
    41b0:	34 2f       	mov	r19, r20
    41b2:	30 71       	andi	r19, 0x10	; 16
    41b4:	44 ff       	sbrs	r20, 4
    41b6:	03 c0       	rjmp	.+6      	; 0x41be <dtoa_prf+0x1fe>
    41b8:	91 33       	cpi	r25, 0x31	; 49
    41ba:	09 f4       	brne	.+2      	; 0x41be <dtoa_prf+0x1fe>
    41bc:	01 50       	subi	r16, 0x01	; 1
    41be:	10 16       	cp	r1, r16
    41c0:	24 f4       	brge	.+8      	; 0x41ca <dtoa_prf+0x20a>
    41c2:	09 30       	cpi	r16, 0x09	; 9
    41c4:	18 f0       	brcs	.+6      	; 0x41cc <dtoa_prf+0x20c>
    41c6:	08 e0       	ldi	r16, 0x08	; 8
    41c8:	01 c0       	rjmp	.+2      	; 0x41cc <dtoa_prf+0x20c>
    41ca:	01 e0       	ldi	r16, 0x01	; 1
    41cc:	ab 01       	movw	r20, r22
    41ce:	77 ff       	sbrs	r23, 7
    41d0:	02 c0       	rjmp	.+4      	; 0x41d6 <dtoa_prf+0x216>
    41d2:	40 e0       	ldi	r20, 0x00	; 0
    41d4:	50 e0       	ldi	r21, 0x00	; 0
    41d6:	fb 01       	movw	r30, r22
    41d8:	e4 1b       	sub	r30, r20
    41da:	f5 0b       	sbc	r31, r21
    41dc:	a1 e0       	ldi	r26, 0x01	; 1
    41de:	b0 e0       	ldi	r27, 0x00	; 0
    41e0:	ac 0f       	add	r26, r28
    41e2:	bd 1f       	adc	r27, r29
    41e4:	ea 0f       	add	r30, r26
    41e6:	fb 1f       	adc	r31, r27
    41e8:	8e e2       	ldi	r24, 0x2E	; 46
    41ea:	a8 2e       	mov	r10, r24
    41ec:	4b 01       	movw	r8, r22
    41ee:	80 1a       	sub	r8, r16
    41f0:	91 08       	sbc	r9, r1
    41f2:	0b 2d       	mov	r16, r11
    41f4:	10 e0       	ldi	r17, 0x00	; 0
    41f6:	11 95       	neg	r17
    41f8:	01 95       	neg	r16
    41fa:	11 09       	sbc	r17, r1
    41fc:	4f 3f       	cpi	r20, 0xFF	; 255
    41fe:	bf ef       	ldi	r27, 0xFF	; 255
    4200:	5b 07       	cpc	r21, r27
    4202:	21 f4       	brne	.+8      	; 0x420c <dtoa_prf+0x24c>
    4204:	d6 01       	movw	r26, r12
    4206:	ac 92       	st	X, r10
    4208:	11 96       	adiw	r26, 0x01	; 1
    420a:	6d 01       	movw	r12, r26
    420c:	64 17       	cp	r22, r20
    420e:	75 07       	cpc	r23, r21
    4210:	2c f0       	brlt	.+10     	; 0x421c <dtoa_prf+0x25c>
    4212:	84 16       	cp	r8, r20
    4214:	95 06       	cpc	r9, r21
    4216:	14 f4       	brge	.+4      	; 0x421c <dtoa_prf+0x25c>
    4218:	81 81       	ldd	r24, Z+1	; 0x01
    421a:	01 c0       	rjmp	.+2      	; 0x421e <dtoa_prf+0x25e>
    421c:	80 e3       	ldi	r24, 0x30	; 48
    421e:	41 50       	subi	r20, 0x01	; 1
    4220:	51 09       	sbc	r21, r1
    4222:	31 96       	adiw	r30, 0x01	; 1
    4224:	d6 01       	movw	r26, r12
    4226:	11 96       	adiw	r26, 0x01	; 1
    4228:	7d 01       	movw	r14, r26
    422a:	40 17       	cp	r20, r16
    422c:	51 07       	cpc	r21, r17
    422e:	24 f0       	brlt	.+8      	; 0x4238 <dtoa_prf+0x278>
    4230:	d6 01       	movw	r26, r12
    4232:	8c 93       	st	X, r24
    4234:	67 01       	movw	r12, r14
    4236:	e2 cf       	rjmp	.-60     	; 0x41fc <dtoa_prf+0x23c>
    4238:	64 17       	cp	r22, r20
    423a:	75 07       	cpc	r23, r21
    423c:	39 f4       	brne	.+14     	; 0x424c <dtoa_prf+0x28c>
    423e:	96 33       	cpi	r25, 0x36	; 54
    4240:	20 f4       	brcc	.+8      	; 0x424a <dtoa_prf+0x28a>
    4242:	95 33       	cpi	r25, 0x35	; 53
    4244:	19 f4       	brne	.+6      	; 0x424c <dtoa_prf+0x28c>
    4246:	31 11       	cpse	r19, r1
    4248:	01 c0       	rjmp	.+2      	; 0x424c <dtoa_prf+0x28c>
    424a:	81 e3       	ldi	r24, 0x31	; 49
    424c:	f6 01       	movw	r30, r12
    424e:	80 83       	st	Z, r24
    4250:	f7 01       	movw	r30, r14
    4252:	82 2f       	mov	r24, r18
    4254:	90 e2       	ldi	r25, 0x20	; 32
    4256:	88 23       	and	r24, r24
    4258:	19 f0       	breq	.+6      	; 0x4260 <dtoa_prf+0x2a0>
    425a:	91 93       	st	Z+, r25
    425c:	81 50       	subi	r24, 0x01	; 1
    425e:	fb cf       	rjmp	.-10     	; 0x4256 <dtoa_prf+0x296>
    4260:	f7 01       	movw	r30, r14
    4262:	e2 0f       	add	r30, r18
    4264:	f1 1d       	adc	r31, r1
    4266:	10 82       	st	Z, r1
    4268:	80 e0       	ldi	r24, 0x00	; 0
    426a:	90 e0       	ldi	r25, 0x00	; 0
    426c:	29 96       	adiw	r28, 0x09	; 9
    426e:	ec e0       	ldi	r30, 0x0C	; 12
    4270:	0c 94 a8 23 	jmp	0x4750	; 0x4750 <__epilogue_restores__+0xc>

00004274 <strtod>:
    4274:	a0 e0       	ldi	r26, 0x00	; 0
    4276:	b0 e0       	ldi	r27, 0x00	; 0
    4278:	e0 e4       	ldi	r30, 0x40	; 64
    427a:	f1 e2       	ldi	r31, 0x21	; 33
    427c:	0c 94 8c 23 	jmp	0x4718	; 0x4718 <__prologue_saves__+0xc>
    4280:	ec 01       	movw	r28, r24
    4282:	6b 01       	movw	r12, r22
    4284:	61 15       	cp	r22, r1
    4286:	71 05       	cpc	r23, r1
    4288:	19 f0       	breq	.+6      	; 0x4290 <strtod+0x1c>
    428a:	fb 01       	movw	r30, r22
    428c:	91 83       	std	Z+1, r25	; 0x01
    428e:	80 83       	st	Z, r24
    4290:	7e 01       	movw	r14, r28
    4292:	ff ef       	ldi	r31, 0xFF	; 255
    4294:	ef 1a       	sub	r14, r31
    4296:	ff 0a       	sbc	r15, r31
    4298:	08 81       	ld	r16, Y
    429a:	80 2f       	mov	r24, r16
    429c:	90 e0       	ldi	r25, 0x00	; 0
    429e:	0e 94 a9 1f 	call	0x3f52	; 0x3f52 <isspace>
    42a2:	89 2b       	or	r24, r25
    42a4:	11 f0       	breq	.+4      	; 0x42aa <strtod+0x36>
    42a6:	e7 01       	movw	r28, r14
    42a8:	f3 cf       	rjmp	.-26     	; 0x4290 <strtod+0x1c>
    42aa:	0d 32       	cpi	r16, 0x2D	; 45
    42ac:	39 f4       	brne	.+14     	; 0x42bc <strtod+0x48>
    42ae:	7e 01       	movw	r14, r28
    42b0:	82 e0       	ldi	r24, 0x02	; 2
    42b2:	e8 0e       	add	r14, r24
    42b4:	f1 1c       	adc	r15, r1
    42b6:	09 81       	ldd	r16, Y+1	; 0x01
    42b8:	11 e0       	ldi	r17, 0x01	; 1
    42ba:	08 c0       	rjmp	.+16     	; 0x42cc <strtod+0x58>
    42bc:	0b 32       	cpi	r16, 0x2B	; 43
    42be:	29 f4       	brne	.+10     	; 0x42ca <strtod+0x56>
    42c0:	7e 01       	movw	r14, r28
    42c2:	92 e0       	ldi	r25, 0x02	; 2
    42c4:	e9 0e       	add	r14, r25
    42c6:	f1 1c       	adc	r15, r1
    42c8:	09 81       	ldd	r16, Y+1	; 0x01
    42ca:	10 e0       	ldi	r17, 0x00	; 0
    42cc:	e7 01       	movw	r28, r14
    42ce:	21 97       	sbiw	r28, 0x01	; 1
    42d0:	43 e0       	ldi	r20, 0x03	; 3
    42d2:	50 e0       	ldi	r21, 0x00	; 0
    42d4:	6c e5       	ldi	r22, 0x5C	; 92
    42d6:	71 e0       	ldi	r23, 0x01	; 1
    42d8:	ce 01       	movw	r24, r28
    42da:	0e 94 63 23 	call	0x46c6	; 0x46c6 <strncasecmp_P>
    42de:	89 2b       	or	r24, r25
    42e0:	c1 f4       	brne	.+48     	; 0x4312 <strtod+0x9e>
    42e2:	23 96       	adiw	r28, 0x03	; 3
    42e4:	45 e0       	ldi	r20, 0x05	; 5
    42e6:	50 e0       	ldi	r21, 0x00	; 0
    42e8:	67 e5       	ldi	r22, 0x57	; 87
    42ea:	71 e0       	ldi	r23, 0x01	; 1
    42ec:	ce 01       	movw	r24, r28
    42ee:	0e 94 63 23 	call	0x46c6	; 0x46c6 <strncasecmp_P>
    42f2:	89 2b       	or	r24, r25
    42f4:	09 f4       	brne	.+2      	; 0x42f8 <strtod+0x84>
    42f6:	25 96       	adiw	r28, 0x05	; 5
    42f8:	c1 14       	cp	r12, r1
    42fa:	d1 04       	cpc	r13, r1
    42fc:	19 f0       	breq	.+6      	; 0x4304 <strtod+0x90>
    42fe:	f6 01       	movw	r30, r12
    4300:	d1 83       	std	Z+1, r29	; 0x01
    4302:	c0 83       	st	Z, r28
    4304:	11 11       	cpse	r17, r1
    4306:	f6 c0       	rjmp	.+492    	; 0x44f4 <strtod+0x280>
    4308:	60 e0       	ldi	r22, 0x00	; 0
    430a:	70 e0       	ldi	r23, 0x00	; 0
    430c:	80 e8       	ldi	r24, 0x80	; 128
    430e:	9f e7       	ldi	r25, 0x7F	; 127
    4310:	fa c0       	rjmp	.+500    	; 0x4506 <strtod+0x292>
    4312:	43 e0       	ldi	r20, 0x03	; 3
    4314:	50 e0       	ldi	r21, 0x00	; 0
    4316:	64 e5       	ldi	r22, 0x54	; 84
    4318:	71 e0       	ldi	r23, 0x01	; 1
    431a:	ce 01       	movw	r24, r28
    431c:	0e 94 63 23 	call	0x46c6	; 0x46c6 <strncasecmp_P>
    4320:	89 2b       	or	r24, r25
    4322:	59 f4       	brne	.+22     	; 0x433a <strtod+0xc6>
    4324:	c1 14       	cp	r12, r1
    4326:	d1 04       	cpc	r13, r1
    4328:	09 f4       	brne	.+2      	; 0x432c <strtod+0xb8>
    432a:	e9 c0       	rjmp	.+466    	; 0x44fe <strtod+0x28a>
    432c:	f2 e0       	ldi	r31, 0x02	; 2
    432e:	ef 0e       	add	r14, r31
    4330:	f1 1c       	adc	r15, r1
    4332:	f6 01       	movw	r30, r12
    4334:	f1 82       	std	Z+1, r15	; 0x01
    4336:	e0 82       	st	Z, r14
    4338:	e2 c0       	rjmp	.+452    	; 0x44fe <strtod+0x28a>
    433a:	20 e0       	ldi	r18, 0x00	; 0
    433c:	30 e0       	ldi	r19, 0x00	; 0
    433e:	a9 01       	movw	r20, r18
    4340:	c0 e0       	ldi	r28, 0x00	; 0
    4342:	d0 e0       	ldi	r29, 0x00	; 0
    4344:	f7 01       	movw	r30, r14
    4346:	80 ed       	ldi	r24, 0xD0	; 208
    4348:	a8 2e       	mov	r10, r24
    434a:	a0 0e       	add	r10, r16
    434c:	89 e0       	ldi	r24, 0x09	; 9
    434e:	8a 15       	cp	r24, r10
    4350:	30 f1       	brcs	.+76     	; 0x439e <strtod+0x12a>
    4352:	91 2f       	mov	r25, r17
    4354:	92 60       	ori	r25, 0x02	; 2
    4356:	b9 2e       	mov	r11, r25
    4358:	81 2f       	mov	r24, r17
    435a:	88 70       	andi	r24, 0x08	; 8
    435c:	12 ff       	sbrs	r17, 2
    435e:	04 c0       	rjmp	.+8      	; 0x4368 <strtod+0xf4>
    4360:	81 11       	cpse	r24, r1
    4362:	24 c0       	rjmp	.+72     	; 0x43ac <strtod+0x138>
    4364:	21 96       	adiw	r28, 0x01	; 1
    4366:	22 c0       	rjmp	.+68     	; 0x43ac <strtod+0x138>
    4368:	81 11       	cpse	r24, r1
    436a:	21 97       	sbiw	r28, 0x01	; 1
    436c:	a5 e0       	ldi	r26, 0x05	; 5
    436e:	b0 e0       	ldi	r27, 0x00	; 0
    4370:	0e 94 7b 23 	call	0x46f6	; 0x46f6 <__muluhisi3>
    4374:	dc 01       	movw	r26, r24
    4376:	cb 01       	movw	r24, r22
    4378:	88 0f       	add	r24, r24
    437a:	99 1f       	adc	r25, r25
    437c:	aa 1f       	adc	r26, r26
    437e:	bb 1f       	adc	r27, r27
    4380:	9c 01       	movw	r18, r24
    4382:	ad 01       	movw	r20, r26
    4384:	2a 0d       	add	r18, r10
    4386:	31 1d       	adc	r19, r1
    4388:	41 1d       	adc	r20, r1
    438a:	51 1d       	adc	r21, r1
    438c:	28 39       	cpi	r18, 0x98	; 152
    438e:	89 e9       	ldi	r24, 0x99	; 153
    4390:	38 07       	cpc	r19, r24
    4392:	48 07       	cpc	r20, r24
    4394:	89 e1       	ldi	r24, 0x19	; 25
    4396:	58 07       	cpc	r21, r24
    4398:	48 f0       	brcs	.+18     	; 0x43ac <strtod+0x138>
    439a:	16 60       	ori	r17, 0x06	; 6
    439c:	06 c0       	rjmp	.+12     	; 0x43aa <strtod+0x136>
    439e:	9e ef       	ldi	r25, 0xFE	; 254
    43a0:	a9 12       	cpse	r10, r25
    43a2:	0a c0       	rjmp	.+20     	; 0x43b8 <strtod+0x144>
    43a4:	13 fd       	sbrc	r17, 3
    43a6:	40 c0       	rjmp	.+128    	; 0x4428 <strtod+0x1b4>
    43a8:	18 60       	ori	r17, 0x08	; 8
    43aa:	b1 2e       	mov	r11, r17
    43ac:	8f ef       	ldi	r24, 0xFF	; 255
    43ae:	e8 1a       	sub	r14, r24
    43b0:	f8 0a       	sbc	r15, r24
    43b2:	00 81       	ld	r16, Z
    43b4:	1b 2d       	mov	r17, r11
    43b6:	c6 cf       	rjmp	.-116    	; 0x4344 <strtod+0xd0>
    43b8:	80 2f       	mov	r24, r16
    43ba:	8f 7d       	andi	r24, 0xDF	; 223
    43bc:	85 34       	cpi	r24, 0x45	; 69
    43be:	a1 f5       	brne	.+104    	; 0x4428 <strtod+0x1b4>
    43c0:	80 81       	ld	r24, Z
    43c2:	8d 32       	cpi	r24, 0x2D	; 45
    43c4:	11 f4       	brne	.+4      	; 0x43ca <strtod+0x156>
    43c6:	10 61       	ori	r17, 0x10	; 16
    43c8:	06 c0       	rjmp	.+12     	; 0x43d6 <strtod+0x162>
    43ca:	8b 32       	cpi	r24, 0x2B	; 43
    43cc:	21 f0       	breq	.+8      	; 0x43d6 <strtod+0x162>
    43ce:	31 96       	adiw	r30, 0x01	; 1
    43d0:	61 e0       	ldi	r22, 0x01	; 1
    43d2:	70 e0       	ldi	r23, 0x00	; 0
    43d4:	04 c0       	rjmp	.+8      	; 0x43de <strtod+0x16a>
    43d6:	81 81       	ldd	r24, Z+1	; 0x01
    43d8:	32 96       	adiw	r30, 0x02	; 2
    43da:	62 e0       	ldi	r22, 0x02	; 2
    43dc:	70 e0       	ldi	r23, 0x00	; 0
    43de:	80 53       	subi	r24, 0x30	; 48
    43e0:	8a 30       	cpi	r24, 0x0A	; 10
    43e2:	18 f0       	brcs	.+6      	; 0x43ea <strtod+0x176>
    43e4:	e6 1b       	sub	r30, r22
    43e6:	f7 0b       	sbc	r31, r23
    43e8:	1f c0       	rjmp	.+62     	; 0x4428 <strtod+0x1b4>
    43ea:	60 e0       	ldi	r22, 0x00	; 0
    43ec:	70 e0       	ldi	r23, 0x00	; 0
    43ee:	60 38       	cpi	r22, 0x80	; 128
    43f0:	9c e0       	ldi	r25, 0x0C	; 12
    43f2:	79 07       	cpc	r23, r25
    43f4:	5c f4       	brge	.+22     	; 0x440c <strtod+0x198>
    43f6:	db 01       	movw	r26, r22
    43f8:	aa 0f       	add	r26, r26
    43fa:	bb 1f       	adc	r27, r27
    43fc:	aa 0f       	add	r26, r26
    43fe:	bb 1f       	adc	r27, r27
    4400:	6a 0f       	add	r22, r26
    4402:	7b 1f       	adc	r23, r27
    4404:	66 0f       	add	r22, r22
    4406:	77 1f       	adc	r23, r23
    4408:	68 0f       	add	r22, r24
    440a:	71 1d       	adc	r23, r1
    440c:	31 96       	adiw	r30, 0x01	; 1
    440e:	df 01       	movw	r26, r30
    4410:	11 97       	sbiw	r26, 0x01	; 1
    4412:	8c 91       	ld	r24, X
    4414:	80 53       	subi	r24, 0x30	; 48
    4416:	8a 30       	cpi	r24, 0x0A	; 10
    4418:	50 f3       	brcs	.-44     	; 0x43ee <strtod+0x17a>
    441a:	14 ff       	sbrs	r17, 4
    441c:	03 c0       	rjmp	.+6      	; 0x4424 <strtod+0x1b0>
    441e:	71 95       	neg	r23
    4420:	61 95       	neg	r22
    4422:	71 09       	sbc	r23, r1
    4424:	c6 0f       	add	r28, r22
    4426:	d7 1f       	adc	r29, r23
    4428:	11 ff       	sbrs	r17, 1
    442a:	08 c0       	rjmp	.+16     	; 0x443c <strtod+0x1c8>
    442c:	c1 14       	cp	r12, r1
    442e:	d1 04       	cpc	r13, r1
    4430:	29 f0       	breq	.+10     	; 0x443c <strtod+0x1c8>
    4432:	cf 01       	movw	r24, r30
    4434:	01 97       	sbiw	r24, 0x01	; 1
    4436:	f6 01       	movw	r30, r12
    4438:	91 83       	std	Z+1, r25	; 0x01
    443a:	80 83       	st	Z, r24
    443c:	ca 01       	movw	r24, r20
    443e:	b9 01       	movw	r22, r18
    4440:	0e 94 d1 1b 	call	0x37a2	; 0x37a2 <__floatunsisf>
    4444:	21 2f       	mov	r18, r17
    4446:	23 70       	andi	r18, 0x03	; 3
    4448:	23 30       	cpi	r18, 0x03	; 3
    444a:	19 f0       	breq	.+6      	; 0x4452 <strtod+0x1de>
    444c:	4b 01       	movw	r8, r22
    444e:	5c 01       	movw	r10, r24
    4450:	06 c0       	rjmp	.+12     	; 0x445e <strtod+0x1ea>
    4452:	4b 01       	movw	r8, r22
    4454:	5c 01       	movw	r10, r24
    4456:	b7 fa       	bst	r11, 7
    4458:	b0 94       	com	r11
    445a:	b7 f8       	bld	r11, 7
    445c:	b0 94       	com	r11
    445e:	20 e0       	ldi	r18, 0x00	; 0
    4460:	30 e0       	ldi	r19, 0x00	; 0
    4462:	a9 01       	movw	r20, r18
    4464:	c5 01       	movw	r24, r10
    4466:	b4 01       	movw	r22, r8
    4468:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <__cmpsf2>
    446c:	88 23       	and	r24, r24
    446e:	09 f4       	brne	.+2      	; 0x4472 <strtod+0x1fe>
    4470:	3e c0       	rjmp	.+124    	; 0x44ee <strtod+0x27a>
    4472:	d7 ff       	sbrs	r29, 7
    4474:	06 c0       	rjmp	.+12     	; 0x4482 <strtod+0x20e>
    4476:	d1 95       	neg	r29
    4478:	c1 95       	neg	r28
    447a:	d1 09       	sbc	r29, r1
    447c:	03 e7       	ldi	r16, 0x73	; 115
    447e:	11 e0       	ldi	r17, 0x01	; 1
    4480:	02 c0       	rjmp	.+4      	; 0x4486 <strtod+0x212>
    4482:	0b e8       	ldi	r16, 0x8B	; 139
    4484:	11 e0       	ldi	r17, 0x01	; 1
    4486:	68 01       	movw	r12, r16
    4488:	f8 e1       	ldi	r31, 0x18	; 24
    448a:	cf 1a       	sub	r12, r31
    448c:	d1 08       	sbc	r13, r1
    448e:	90 e2       	ldi	r25, 0x20	; 32
    4490:	e9 2e       	mov	r14, r25
    4492:	f1 2c       	mov	r15, r1
    4494:	ce 15       	cp	r28, r14
    4496:	df 05       	cpc	r29, r15
    4498:	74 f0       	brlt	.+28     	; 0x44b6 <strtod+0x242>
    449a:	f8 01       	movw	r30, r16
    449c:	25 91       	lpm	r18, Z+
    449e:	35 91       	lpm	r19, Z+
    44a0:	45 91       	lpm	r20, Z+
    44a2:	54 91       	lpm	r21, Z
    44a4:	c5 01       	movw	r24, r10
    44a6:	b4 01       	movw	r22, r8
    44a8:	0e 94 f0 1d 	call	0x3be0	; 0x3be0 <__mulsf3>
    44ac:	4b 01       	movw	r8, r22
    44ae:	5c 01       	movw	r10, r24
    44b0:	ce 19       	sub	r28, r14
    44b2:	df 09       	sbc	r29, r15
    44b4:	ef cf       	rjmp	.-34     	; 0x4494 <strtod+0x220>
    44b6:	04 50       	subi	r16, 0x04	; 4
    44b8:	11 09       	sbc	r17, r1
    44ba:	f5 94       	asr	r15
    44bc:	e7 94       	ror	r14
    44be:	0c 15       	cp	r16, r12
    44c0:	1d 05       	cpc	r17, r13
    44c2:	41 f7       	brne	.-48     	; 0x4494 <strtod+0x220>
    44c4:	8a 2d       	mov	r24, r10
    44c6:	88 0f       	add	r24, r24
    44c8:	8b 2d       	mov	r24, r11
    44ca:	88 1f       	adc	r24, r24
    44cc:	8f 3f       	cpi	r24, 0xFF	; 255
    44ce:	49 f0       	breq	.+18     	; 0x44e2 <strtod+0x26e>
    44d0:	20 e0       	ldi	r18, 0x00	; 0
    44d2:	30 e0       	ldi	r19, 0x00	; 0
    44d4:	a9 01       	movw	r20, r18
    44d6:	c5 01       	movw	r24, r10
    44d8:	b4 01       	movw	r22, r8
    44da:	0e 94 e5 1a 	call	0x35ca	; 0x35ca <__cmpsf2>
    44de:	81 11       	cpse	r24, r1
    44e0:	06 c0       	rjmp	.+12     	; 0x44ee <strtod+0x27a>
    44e2:	82 e2       	ldi	r24, 0x22	; 34
    44e4:	90 e0       	ldi	r25, 0x00	; 0
    44e6:	90 93 e3 06 	sts	0x06E3, r25	; 0x8006e3 <errno+0x1>
    44ea:	80 93 e2 06 	sts	0x06E2, r24	; 0x8006e2 <errno>
    44ee:	c5 01       	movw	r24, r10
    44f0:	b4 01       	movw	r22, r8
    44f2:	09 c0       	rjmp	.+18     	; 0x4506 <strtod+0x292>
    44f4:	60 e0       	ldi	r22, 0x00	; 0
    44f6:	70 e0       	ldi	r23, 0x00	; 0
    44f8:	80 e8       	ldi	r24, 0x80	; 128
    44fa:	9f ef       	ldi	r25, 0xFF	; 255
    44fc:	04 c0       	rjmp	.+8      	; 0x4506 <strtod+0x292>
    44fe:	60 e0       	ldi	r22, 0x00	; 0
    4500:	70 e0       	ldi	r23, 0x00	; 0
    4502:	80 ec       	ldi	r24, 0xC0	; 192
    4504:	9f e7       	ldi	r25, 0x7F	; 127
    4506:	cd b7       	in	r28, 0x3d	; 61
    4508:	de b7       	in	r29, 0x3e	; 62
    450a:	ec e0       	ldi	r30, 0x0C	; 12
    450c:	0c 94 a8 23 	jmp	0x4750	; 0x4750 <__epilogue_restores__+0xc>

00004510 <__ftoa_engine>:
    4510:	28 30       	cpi	r18, 0x08	; 8
    4512:	08 f0       	brcs	.+2      	; 0x4516 <__ftoa_engine+0x6>
    4514:	27 e0       	ldi	r18, 0x07	; 7
    4516:	33 27       	eor	r19, r19
    4518:	da 01       	movw	r26, r20
    451a:	99 0f       	add	r25, r25
    451c:	31 1d       	adc	r19, r1
    451e:	87 fd       	sbrc	r24, 7
    4520:	91 60       	ori	r25, 0x01	; 1
    4522:	00 96       	adiw	r24, 0x00	; 0
    4524:	61 05       	cpc	r22, r1
    4526:	71 05       	cpc	r23, r1
    4528:	39 f4       	brne	.+14     	; 0x4538 <__ftoa_engine+0x28>
    452a:	32 60       	ori	r19, 0x02	; 2
    452c:	2e 5f       	subi	r18, 0xFE	; 254
    452e:	3d 93       	st	X+, r19
    4530:	30 e3       	ldi	r19, 0x30	; 48
    4532:	2a 95       	dec	r18
    4534:	e1 f7       	brne	.-8      	; 0x452e <__ftoa_engine+0x1e>
    4536:	08 95       	ret
    4538:	9f 3f       	cpi	r25, 0xFF	; 255
    453a:	30 f0       	brcs	.+12     	; 0x4548 <__ftoa_engine+0x38>
    453c:	80 38       	cpi	r24, 0x80	; 128
    453e:	71 05       	cpc	r23, r1
    4540:	61 05       	cpc	r22, r1
    4542:	09 f0       	breq	.+2      	; 0x4546 <__ftoa_engine+0x36>
    4544:	3c 5f       	subi	r19, 0xFC	; 252
    4546:	3c 5f       	subi	r19, 0xFC	; 252
    4548:	3d 93       	st	X+, r19
    454a:	91 30       	cpi	r25, 0x01	; 1
    454c:	08 f0       	brcs	.+2      	; 0x4550 <__ftoa_engine+0x40>
    454e:	80 68       	ori	r24, 0x80	; 128
    4550:	91 1d       	adc	r25, r1
    4552:	df 93       	push	r29
    4554:	cf 93       	push	r28
    4556:	1f 93       	push	r17
    4558:	0f 93       	push	r16
    455a:	ff 92       	push	r15
    455c:	ef 92       	push	r14
    455e:	19 2f       	mov	r17, r25
    4560:	98 7f       	andi	r25, 0xF8	; 248
    4562:	96 95       	lsr	r25
    4564:	e9 2f       	mov	r30, r25
    4566:	96 95       	lsr	r25
    4568:	96 95       	lsr	r25
    456a:	e9 0f       	add	r30, r25
    456c:	ff 27       	eor	r31, r31
    456e:	e7 51       	subi	r30, 0x17	; 23
    4570:	fe 4f       	sbci	r31, 0xFE	; 254
    4572:	99 27       	eor	r25, r25
    4574:	33 27       	eor	r19, r19
    4576:	ee 24       	eor	r14, r14
    4578:	ff 24       	eor	r15, r15
    457a:	a7 01       	movw	r20, r14
    457c:	e7 01       	movw	r28, r14
    457e:	05 90       	lpm	r0, Z+
    4580:	08 94       	sec
    4582:	07 94       	ror	r0
    4584:	28 f4       	brcc	.+10     	; 0x4590 <__ftoa_engine+0x80>
    4586:	36 0f       	add	r19, r22
    4588:	e7 1e       	adc	r14, r23
    458a:	f8 1e       	adc	r15, r24
    458c:	49 1f       	adc	r20, r25
    458e:	51 1d       	adc	r21, r1
    4590:	66 0f       	add	r22, r22
    4592:	77 1f       	adc	r23, r23
    4594:	88 1f       	adc	r24, r24
    4596:	99 1f       	adc	r25, r25
    4598:	06 94       	lsr	r0
    459a:	a1 f7       	brne	.-24     	; 0x4584 <__ftoa_engine+0x74>
    459c:	05 90       	lpm	r0, Z+
    459e:	07 94       	ror	r0
    45a0:	28 f4       	brcc	.+10     	; 0x45ac <__ftoa_engine+0x9c>
    45a2:	e7 0e       	add	r14, r23
    45a4:	f8 1e       	adc	r15, r24
    45a6:	49 1f       	adc	r20, r25
    45a8:	56 1f       	adc	r21, r22
    45aa:	c1 1d       	adc	r28, r1
    45ac:	77 0f       	add	r23, r23
    45ae:	88 1f       	adc	r24, r24
    45b0:	99 1f       	adc	r25, r25
    45b2:	66 1f       	adc	r22, r22
    45b4:	06 94       	lsr	r0
    45b6:	a1 f7       	brne	.-24     	; 0x45a0 <__ftoa_engine+0x90>
    45b8:	05 90       	lpm	r0, Z+
    45ba:	07 94       	ror	r0
    45bc:	28 f4       	brcc	.+10     	; 0x45c8 <__ftoa_engine+0xb8>
    45be:	f8 0e       	add	r15, r24
    45c0:	49 1f       	adc	r20, r25
    45c2:	56 1f       	adc	r21, r22
    45c4:	c7 1f       	adc	r28, r23
    45c6:	d1 1d       	adc	r29, r1
    45c8:	88 0f       	add	r24, r24
    45ca:	99 1f       	adc	r25, r25
    45cc:	66 1f       	adc	r22, r22
    45ce:	77 1f       	adc	r23, r23
    45d0:	06 94       	lsr	r0
    45d2:	a1 f7       	brne	.-24     	; 0x45bc <__ftoa_engine+0xac>
    45d4:	05 90       	lpm	r0, Z+
    45d6:	07 94       	ror	r0
    45d8:	20 f4       	brcc	.+8      	; 0x45e2 <__ftoa_engine+0xd2>
    45da:	49 0f       	add	r20, r25
    45dc:	56 1f       	adc	r21, r22
    45de:	c7 1f       	adc	r28, r23
    45e0:	d8 1f       	adc	r29, r24
    45e2:	99 0f       	add	r25, r25
    45e4:	66 1f       	adc	r22, r22
    45e6:	77 1f       	adc	r23, r23
    45e8:	88 1f       	adc	r24, r24
    45ea:	06 94       	lsr	r0
    45ec:	a9 f7       	brne	.-22     	; 0x45d8 <__ftoa_engine+0xc8>
    45ee:	84 91       	lpm	r24, Z
    45f0:	10 95       	com	r17
    45f2:	17 70       	andi	r17, 0x07	; 7
    45f4:	41 f0       	breq	.+16     	; 0x4606 <__ftoa_engine+0xf6>
    45f6:	d6 95       	lsr	r29
    45f8:	c7 95       	ror	r28
    45fa:	57 95       	ror	r21
    45fc:	47 95       	ror	r20
    45fe:	f7 94       	ror	r15
    4600:	e7 94       	ror	r14
    4602:	1a 95       	dec	r17
    4604:	c1 f7       	brne	.-16     	; 0x45f6 <__ftoa_engine+0xe6>
    4606:	ef e8       	ldi	r30, 0x8F	; 143
    4608:	f1 e0       	ldi	r31, 0x01	; 1
    460a:	68 94       	set
    460c:	15 90       	lpm	r1, Z+
    460e:	15 91       	lpm	r17, Z+
    4610:	35 91       	lpm	r19, Z+
    4612:	65 91       	lpm	r22, Z+
    4614:	95 91       	lpm	r25, Z+
    4616:	05 90       	lpm	r0, Z+
    4618:	7f e2       	ldi	r23, 0x2F	; 47
    461a:	73 95       	inc	r23
    461c:	e1 18       	sub	r14, r1
    461e:	f1 0a       	sbc	r15, r17
    4620:	43 0b       	sbc	r20, r19
    4622:	56 0b       	sbc	r21, r22
    4624:	c9 0b       	sbc	r28, r25
    4626:	d0 09       	sbc	r29, r0
    4628:	c0 f7       	brcc	.-16     	; 0x461a <__ftoa_engine+0x10a>
    462a:	e1 0c       	add	r14, r1
    462c:	f1 1e       	adc	r15, r17
    462e:	43 1f       	adc	r20, r19
    4630:	56 1f       	adc	r21, r22
    4632:	c9 1f       	adc	r28, r25
    4634:	d0 1d       	adc	r29, r0
    4636:	7e f4       	brtc	.+30     	; 0x4656 <__ftoa_engine+0x146>
    4638:	70 33       	cpi	r23, 0x30	; 48
    463a:	11 f4       	brne	.+4      	; 0x4640 <__ftoa_engine+0x130>
    463c:	8a 95       	dec	r24
    463e:	e6 cf       	rjmp	.-52     	; 0x460c <__ftoa_engine+0xfc>
    4640:	e8 94       	clt
    4642:	01 50       	subi	r16, 0x01	; 1
    4644:	30 f0       	brcs	.+12     	; 0x4652 <__ftoa_engine+0x142>
    4646:	08 0f       	add	r16, r24
    4648:	0a f4       	brpl	.+2      	; 0x464c <__ftoa_engine+0x13c>
    464a:	00 27       	eor	r16, r16
    464c:	02 17       	cp	r16, r18
    464e:	08 f4       	brcc	.+2      	; 0x4652 <__ftoa_engine+0x142>
    4650:	20 2f       	mov	r18, r16
    4652:	23 95       	inc	r18
    4654:	02 2f       	mov	r16, r18
    4656:	7a 33       	cpi	r23, 0x3A	; 58
    4658:	28 f0       	brcs	.+10     	; 0x4664 <__ftoa_engine+0x154>
    465a:	79 e3       	ldi	r23, 0x39	; 57
    465c:	7d 93       	st	X+, r23
    465e:	2a 95       	dec	r18
    4660:	e9 f7       	brne	.-6      	; 0x465c <__ftoa_engine+0x14c>
    4662:	10 c0       	rjmp	.+32     	; 0x4684 <__ftoa_engine+0x174>
    4664:	7d 93       	st	X+, r23
    4666:	2a 95       	dec	r18
    4668:	89 f6       	brne	.-94     	; 0x460c <__ftoa_engine+0xfc>
    466a:	06 94       	lsr	r0
    466c:	97 95       	ror	r25
    466e:	67 95       	ror	r22
    4670:	37 95       	ror	r19
    4672:	17 95       	ror	r17
    4674:	17 94       	ror	r1
    4676:	e1 18       	sub	r14, r1
    4678:	f1 0a       	sbc	r15, r17
    467a:	43 0b       	sbc	r20, r19
    467c:	56 0b       	sbc	r21, r22
    467e:	c9 0b       	sbc	r28, r25
    4680:	d0 09       	sbc	r29, r0
    4682:	98 f0       	brcs	.+38     	; 0x46aa <__ftoa_engine+0x19a>
    4684:	23 95       	inc	r18
    4686:	7e 91       	ld	r23, -X
    4688:	73 95       	inc	r23
    468a:	7a 33       	cpi	r23, 0x3A	; 58
    468c:	08 f0       	brcs	.+2      	; 0x4690 <__ftoa_engine+0x180>
    468e:	70 e3       	ldi	r23, 0x30	; 48
    4690:	7c 93       	st	X, r23
    4692:	20 13       	cpse	r18, r16
    4694:	b8 f7       	brcc	.-18     	; 0x4684 <__ftoa_engine+0x174>
    4696:	7e 91       	ld	r23, -X
    4698:	70 61       	ori	r23, 0x10	; 16
    469a:	7d 93       	st	X+, r23
    469c:	30 f0       	brcs	.+12     	; 0x46aa <__ftoa_engine+0x19a>
    469e:	83 95       	inc	r24
    46a0:	71 e3       	ldi	r23, 0x31	; 49
    46a2:	7d 93       	st	X+, r23
    46a4:	70 e3       	ldi	r23, 0x30	; 48
    46a6:	2a 95       	dec	r18
    46a8:	e1 f7       	brne	.-8      	; 0x46a2 <__ftoa_engine+0x192>
    46aa:	11 24       	eor	r1, r1
    46ac:	ef 90       	pop	r14
    46ae:	ff 90       	pop	r15
    46b0:	0f 91       	pop	r16
    46b2:	1f 91       	pop	r17
    46b4:	cf 91       	pop	r28
    46b6:	df 91       	pop	r29
    46b8:	99 27       	eor	r25, r25
    46ba:	87 fd       	sbrc	r24, 7
    46bc:	90 95       	com	r25
    46be:	08 95       	ret

000046c0 <__ctype_isfalse>:
    46c0:	99 27       	eor	r25, r25
    46c2:	88 27       	eor	r24, r24

000046c4 <__ctype_istrue>:
    46c4:	08 95       	ret

000046c6 <strncasecmp_P>:
    46c6:	fb 01       	movw	r30, r22
    46c8:	dc 01       	movw	r26, r24
    46ca:	41 50       	subi	r20, 0x01	; 1
    46cc:	50 40       	sbci	r21, 0x00	; 0
    46ce:	88 f0       	brcs	.+34     	; 0x46f2 <strncasecmp_P+0x2c>
    46d0:	8d 91       	ld	r24, X+
    46d2:	81 34       	cpi	r24, 0x41	; 65
    46d4:	1c f0       	brlt	.+6      	; 0x46dc <strncasecmp_P+0x16>
    46d6:	8b 35       	cpi	r24, 0x5B	; 91
    46d8:	0c f4       	brge	.+2      	; 0x46dc <strncasecmp_P+0x16>
    46da:	80 5e       	subi	r24, 0xE0	; 224
    46dc:	65 91       	lpm	r22, Z+
    46de:	61 34       	cpi	r22, 0x41	; 65
    46e0:	1c f0       	brlt	.+6      	; 0x46e8 <strncasecmp_P+0x22>
    46e2:	6b 35       	cpi	r22, 0x5B	; 91
    46e4:	0c f4       	brge	.+2      	; 0x46e8 <strncasecmp_P+0x22>
    46e6:	60 5e       	subi	r22, 0xE0	; 224
    46e8:	86 1b       	sub	r24, r22
    46ea:	61 11       	cpse	r22, r1
    46ec:	71 f3       	breq	.-36     	; 0x46ca <strncasecmp_P+0x4>
    46ee:	99 0b       	sbc	r25, r25
    46f0:	08 95       	ret
    46f2:	88 1b       	sub	r24, r24
    46f4:	fc cf       	rjmp	.-8      	; 0x46ee <strncasecmp_P+0x28>

000046f6 <__muluhisi3>:
    46f6:	0e 94 bd 23 	call	0x477a	; 0x477a <__umulhisi3>
    46fa:	a5 9f       	mul	r26, r21
    46fc:	90 0d       	add	r25, r0
    46fe:	b4 9f       	mul	r27, r20
    4700:	90 0d       	add	r25, r0
    4702:	a4 9f       	mul	r26, r20
    4704:	80 0d       	add	r24, r0
    4706:	91 1d       	adc	r25, r1
    4708:	11 24       	eor	r1, r1
    470a:	08 95       	ret

0000470c <__prologue_saves__>:
    470c:	2f 92       	push	r2
    470e:	3f 92       	push	r3
    4710:	4f 92       	push	r4
    4712:	5f 92       	push	r5
    4714:	6f 92       	push	r6
    4716:	7f 92       	push	r7
    4718:	8f 92       	push	r8
    471a:	9f 92       	push	r9
    471c:	af 92       	push	r10
    471e:	bf 92       	push	r11
    4720:	cf 92       	push	r12
    4722:	df 92       	push	r13
    4724:	ef 92       	push	r14
    4726:	ff 92       	push	r15
    4728:	0f 93       	push	r16
    472a:	1f 93       	push	r17
    472c:	cf 93       	push	r28
    472e:	df 93       	push	r29
    4730:	cd b7       	in	r28, 0x3d	; 61
    4732:	de b7       	in	r29, 0x3e	; 62
    4734:	ca 1b       	sub	r28, r26
    4736:	db 0b       	sbc	r29, r27
    4738:	0f b6       	in	r0, 0x3f	; 63
    473a:	f8 94       	cli
    473c:	de bf       	out	0x3e, r29	; 62
    473e:	0f be       	out	0x3f, r0	; 63
    4740:	cd bf       	out	0x3d, r28	; 61
    4742:	09 94       	ijmp

00004744 <__epilogue_restores__>:
    4744:	2a 88       	ldd	r2, Y+18	; 0x12
    4746:	39 88       	ldd	r3, Y+17	; 0x11
    4748:	48 88       	ldd	r4, Y+16	; 0x10
    474a:	5f 84       	ldd	r5, Y+15	; 0x0f
    474c:	6e 84       	ldd	r6, Y+14	; 0x0e
    474e:	7d 84       	ldd	r7, Y+13	; 0x0d
    4750:	8c 84       	ldd	r8, Y+12	; 0x0c
    4752:	9b 84       	ldd	r9, Y+11	; 0x0b
    4754:	aa 84       	ldd	r10, Y+10	; 0x0a
    4756:	b9 84       	ldd	r11, Y+9	; 0x09
    4758:	c8 84       	ldd	r12, Y+8	; 0x08
    475a:	df 80       	ldd	r13, Y+7	; 0x07
    475c:	ee 80       	ldd	r14, Y+6	; 0x06
    475e:	fd 80       	ldd	r15, Y+5	; 0x05
    4760:	0c 81       	ldd	r16, Y+4	; 0x04
    4762:	1b 81       	ldd	r17, Y+3	; 0x03
    4764:	aa 81       	ldd	r26, Y+2	; 0x02
    4766:	b9 81       	ldd	r27, Y+1	; 0x01
    4768:	ce 0f       	add	r28, r30
    476a:	d1 1d       	adc	r29, r1
    476c:	0f b6       	in	r0, 0x3f	; 63
    476e:	f8 94       	cli
    4770:	de bf       	out	0x3e, r29	; 62
    4772:	0f be       	out	0x3f, r0	; 63
    4774:	cd bf       	out	0x3d, r28	; 61
    4776:	ed 01       	movw	r28, r26
    4778:	08 95       	ret

0000477a <__umulhisi3>:
    477a:	a2 9f       	mul	r26, r18
    477c:	b0 01       	movw	r22, r0
    477e:	b3 9f       	mul	r27, r19
    4780:	c0 01       	movw	r24, r0
    4782:	a3 9f       	mul	r26, r19
    4784:	70 0d       	add	r23, r0
    4786:	81 1d       	adc	r24, r1
    4788:	11 24       	eor	r1, r1
    478a:	91 1d       	adc	r25, r1
    478c:	b2 9f       	mul	r27, r18
    478e:	70 0d       	add	r23, r0
    4790:	81 1d       	adc	r24, r1
    4792:	11 24       	eor	r1, r1
    4794:	91 1d       	adc	r25, r1
    4796:	08 95       	ret

00004798 <_exit>:
    4798:	f8 94       	cli

0000479a <__stop_program>:
    479a:	ff cf       	rjmp	.-2      	; 0x479a <__stop_program>
